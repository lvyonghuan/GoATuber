{"version":3,"file":"js/app.5d497128.js","mappings":"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","sources":["webpack://live2d/./src/App.vue","webpack://live2d/./src/components/Drawer.vue","webpack://live2d/src/components/Drawer.vue","webpack://live2d/./src/components/Drawer.vue?0738","webpack://live2d/./src/components/Drawer.vue?af4e","webpack://live2d/./src/ws/index.js","webpack://live2d/./src/utils/index.js","webpack://live2d/./src/openMouthY/index.js","webpack://live2d/./src/pixi-live2d-display/dist/cubism4.es.js","webpack://live2d/./src/loadLive2d/index.js","webpack://live2d/src/App.vue","webpack://live2d/./src/App.vue?51dd","webpack://live2d/./src/App.vue?0e40","webpack://live2d/./src/store/index.js","webpack://live2d/./src/main.js","webpack://live2d/./src/pixi-live2d-display/dist/index.js","webpack://live2d/webpack/bootstrap","webpack://live2d/webpack/runtime/chunk loaded","webpack://live2d/webpack/runtime/compat get default export","webpack://live2d/webpack/runtime/define property getters","webpack://live2d/webpack/runtime/global","webpack://live2d/webpack/runtime/hasOwnProperty shorthand","webpack://live2d/webpack/runtime/make namespace object","webpack://live2d/webpack/runtime/node module decorator","webpack://live2d/webpack/runtime/jsonp chunk loading","webpack://live2d/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"app\"}},[_c('Drawer'),_c('canvas',{ref:\"live2d\",staticStyle:{\"position\":\"relative\"},on:{\"mousedown\":_vm.handleMouseDown,\"mousemove\":_vm.handleMouseMove,\"mouseup\":_vm.handleMouseUp}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"show_setting\",on:{\"click\":_vm.handlerClick}},[_c('i',{staticClass:\"el-icon-arrow-right\"})]),_c('el-drawer',{attrs:{\"visible\":_vm.drawer,\"with-header\":false,\"direction\":\"ltr\"},on:{\"update:visible\":function($event){_vm.drawer=$event}}},[_c('div',{staticClass:\"button\"},[_c('el-button',{staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.$store.dispatch('amplify',_vm.live2d)}}},[_vm._v(\"放大\")]),_c('el-button',{staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.$store.dispatch('reduce',_vm.live2d)}}},[_vm._v(\"缩小\")])],1),_c('div',{staticClass:\"percentage\",on:{\"mousedown\":_vm.mouseDown}},[_c('div',{ref:\"per\",staticClass:\"in-percentage\"})]),_c('el-button-group',[_c('el-button',{staticStyle:{\"height\":\"5vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-minus\"},on:{\"click\":function($event){return _vm.$store.dispatch('decrease')}}}),_c('el-button',{staticStyle:{\"height\":\"5vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){return _vm.$store.dispatch('increase')}}})],1),_c('br'),_c('el-input',{staticStyle:{\"height\":\"4vh\",\"width\":\"20vw\",\"margin-top\":\"2vh\"},attrs:{\"placeholder\":\"要改变的数值\"},model:{value:(_vm.$store.state.percentage),callback:function ($$v) {_vm.$set(_vm.$store.state, \"percentage\", $$v)},expression:\"$store.state.percentage\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport {defineComponent} from 'vue'\r\n\r\n\r\n\r\nexport default defineComponent({\r\n  name: \"Drawer\",\r\n  data(){\r\n    return {\r\n      drawer: false,\r\n      customColor: '#409eff',\r\n      x:\"\",\r\n      dragging :false\r\n    }\r\n  },\r\n  methods:{\r\n    handlerClick(){\r\n      this.drawer = true\r\n      setTimeout(()=>{\r\n        this.$refs.per.style.width = `${this.percentage}%`\r\n      })\r\n    },\r\n    //添加进度条的点击事件\r\n    mouseDown(e){\r\n\r\n      this.$store.state.percentage = e.offsetX/this.$refs.per.parentElement.clientWidth * 100\r\n\r\n      this.x = e.clientX;\r\n    }\r\n\r\n  },\r\n\r\n  computed:{\r\n    percentage(){\r\n      return this.$store.state.percentage\r\n    },\r\n    scale(){\r\n      return this.$store.state.scale\r\n    },\r\n    live2d(){\r\n      return this.$store.state.live2d\r\n    }\r\n  },\r\n\r\n\r\n  watch:{\r\n    percentage:{\r\n      handler(newValue){\r\n        if (typeof newValue != 'number'){\r\n          this.percentage = 60\r\n        }\r\n        this.$refs.per.style.width = `${this.percentage}%`\r\n        window.localStorage.setItem(\"percentage\",newValue)\r\n\r\n      }\r\n    },\r\n    scale:{\r\n      handler(newValue){\r\n\r\n        if (typeof newValue != 'number'){\r\n          this.percentage = 1\r\n        }\r\n\r\n        window.localStorage.setItem(\"scale\",newValue)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"keydown\", (events) => {\r\n          if(events.code==\"ArrowLeft\"){\r\n            this.drawer=false\r\n          }\r\n          if(events.code==\"ArrowRight\"){\r\n            this.drawer=true\r\n          }\r\n          if(events.code==\"ArrowUp\"){\r\n            this.amplify()\r\n          }\r\n          if(events.code==\"ArrowDown\"){\r\n            this.reduce()\r\n          }\r\n        }\r\n    )\r\n  }\r\n\r\n\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"show_setting\" @click=\"handlerClick\">\r\n      <i class=\"el-icon-arrow-right\"></i>\r\n    </div>\r\n\r\n    <el-drawer\r\n        :visible.sync=\"drawer\"\r\n        :with-header=\"false\"\r\n        direction=\"ltr\"\r\n    >\r\n\r\n      <div class=\"button\" >\r\n        <el-button  @click=\"$store.dispatch('amplify',live2d)\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\" >放大</el-button>\r\n        <el-button  @click=\"$store.dispatch('reduce',live2d)\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\">缩小</el-button>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"percentage\"\r\n           @mousedown=\"mouseDown\"\r\n\r\n      >\r\n        <div class=\"in-percentage\"\r\n             ref=\"per\"\r\n\r\n\r\n        ></div>\r\n      </div>\r\n\r\n      <el-button-group>\r\n        <el-button icon=\"el-icon-minus\"\r\n                   @click=\"$store.dispatch('decrease')\"\r\n                   style=\"height: 5vh;\r\n                   width: 4vw;\r\n                   font-size: 2vh;\r\n                   line-height: 0vh;\" ></el-button>\r\n        <el-button icon=\"el-icon-plus\"\r\n                   @click=\"$store.dispatch('increase')\"\r\n                   style=\"height: 5vh;\r\n                   width: 4vw;\r\n                   font-size: 2vh;\r\n                   line-height: 0vh;\"></el-button>\r\n      </el-button-group>\r\n      <br>\r\n      <el-input v-model=\"$store.state.percentage\" placeholder=\"要改变的数值\" style=\"height: 4vh; width: 20vw;margin-top: 2vh\"></el-input>\r\n    </el-drawer>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n\r\n.button {\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  margin-top: 8vh;\r\n}\r\n\r\n.el-drawer__body {\r\n  background-image: url(\"@/../public/drawer.webp\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.show_setting {\r\n  position: relative;\r\n  width: 1.5vw;\r\n  height: 4vw;\r\n  background:rgba(139,139,139,0.6);\r\n  top: 50vh;\r\n  transform: translateY(-4vw);\r\n  font-size: 3vh;\r\n  line-height: 4vw;\r\n  text-align: center;\r\n  z-index: 10;\r\n\r\n}\r\n\r\n.percentage {\r\n\r\n  width: 25vw;\r\n  height: 1vh;\r\n  background: white;\r\n  margin-top: 10vh;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-radius: 0.5vh;\r\n  overflow: hidden;\r\n  margin-bottom: 3vh;\r\n\r\n}\r\n\r\n.in-percentage{\r\n  height: 1vh;\r\n  background:rgba(64,158,255,1);\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Drawer.vue?vue&type=template&id=eb56ff50&\"\nimport script from \"./Drawer.vue?vue&type=script&lang=js&\"\nexport * from \"./Drawer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Drawer.vue?vue&type=style&index=0&id=eb56ff50&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","let websocket\r\n\r\nimport {Message} from \"element-ui\";\r\nexport  default  function  initWebSocket() {\r\n    //初始化weosocket\r\n    const wsuri = `ws://${location.host}/live2d`;\r\n\r\n    websocket = new WebSocket(wsuri);\r\n\r\n\r\n    // 连接建立时触发\r\n    websocket.onopen = websocketonopen;\r\n    // 通信发生错误时触发\r\n    websocket.onerror = websocketonerror;\r\n    // 连接关闭时触发\r\n    websocket.onclose = websocketclose;\r\n\r\n    return websocket\r\n}\r\n\r\n\r\nfunction websocketonopen(){\r\n    Message({\r\n        message: '成功建立连接 ₍ᐢ..ᐢ₎♡ ',\r\n        type: 'success'\r\n    });\r\n}\r\nfunction websocketonerror(){\r\n    Message({\r\n        message: '连接发生了错误! ̊ଳ ̊ᵎᵎᵎᵎ ',\r\n        type: 'warning'\r\n    });\r\n}\r\nfunction websocketclose(){\r\n    Message({\r\n        message: '连接已断开!!! ˃̣̣̥᷄⌓˂̣̣̥᷅ ',\r\n        type: 'warning'\r\n    });\r\n}\r\n\r\n","// a function for converting  base64 to ArrayBuffer\r\nexport  function base64ToArrayBuffer(base64) {\r\n    let binary_string =  window.atob(base64);\r\n    let len = binary_string.length;\r\n    let bytes = new Uint8Array( len );\r\n    for (let i = 0; i < len; i++)        {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n}\r\n// a function for adding the every number in the array\r\nexport function arrayAdd(a){return a.reduce((i,a)=>i+a,0)}","import axios from \"axios\";\r\nimport {base64ToArrayBuffer,arrayAdd} from \"@/utils\"\r\n\r\n\r\nlet audioCtx\r\n\r\nlet analyser\r\n\r\nlet frequencyData\r\n\r\nlet playing = false\r\n\r\nlet o = 80\r\n\r\nexport  async function getWav(data,store){\r\n    let response\r\n\r\n    switch (data[\"VType\"]) {\r\n        case 1 :\r\n            response =  await axios({\r\n                url:data.voice,\r\n                method:\"get\",\r\n                responseType:\"arraybuffer\"\r\n            })\r\n            response = response.data\r\n            break\r\n        //如果为 2 和 3 则需要转化为arraybuffer\r\n        case 2  :\r\n            break\r\n            response = base64ToArrayBuffer(data.voice)\r\n        case 3  :\r\n            response = base64ToArrayBuffer(data.voice)\r\n            break\r\n\r\n    }\r\n\r\n\r\n\r\n    ((response) => {\r\n\r\n        const audioData = response;\r\n        audioCtx.decodeAudioData(audioData, (buffer)=>{\r\n            // 新建 Buffer 源\r\n            const source = audioCtx.createBufferSource();\r\n            source.buffer = buffer;\r\n            // 连接到 audioCtx\r\n            source.connect(audioCtx.destination);\r\n            // 连接到 音频分析器\r\n            source.connect(analyser);\r\n            // window.navigator.mediaDevices.getUserMedia({ audio: true });\r\n            // 开始播放\r\n\r\n            playing = true;\r\n            run()\r\n            setTimeout(() => {\r\n                source.start(0);\r\n            },0.5)\r\n //调用相应地动作和表情\r\n            store.model4.expression(data.expression)\r\n            store.model4.motion(data[\"act\"],data[\"movement\"])\r\n\r\n\r\n\r\n            source.onended = ()=>{\r\n                // 停止播放\r\n               playing = false;\r\n               //清空model 的动作和表情\r\n                store.websocket.send(0)\r\n                store.model4.expression(0);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n            store.websocket.send(-1)\r\n        })\r\n    })(response)\r\n\r\n\r\n    function run(){\r\n\r\n        if(!playing) return;\r\n\r\n        const frequencyData =getByteFrequencyData();\r\n\r\n        const arr = [];\r\n        // 频率范围还是太广了，跳采！\r\n        for (var i = 0; i < 700; i += o) {\r\n            arr.push(frequencyData[i]);\r\n        }\r\n\r\n        setMouthOpenY((arrayAdd(arr)/arr.length - 20)/store.percentage);\r\n\r\n        setTimeout(run,1000/60);//相隔一段时间执行\r\n    }\r\n\r\n    function setMouthOpenY(v){\r\n        //去除调小于0和大于1的值\r\n        v = Math.max(0, Math.min(1, v));\r\n        console.log(v)\r\n\r\n        //mouthOpenY参数\r\n        store.model4.internalModel.coreModel.setParameterValueByIndex(store.parameterIndex, v,1,true)\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function createAnalyser() {\r\n    if (location.protocol === 'https:') {\r\n        // 当前页面使用 HTTPS 协议\r\n\r\n        if(navigator.userAgent.indexOf(\"Firefox\") != -1 || navigator.userAgent.indexOf(\"Chrome\") != -1){\r\n            navigator.mediaDevices.getUserMedia({ audio: true })\r\n                .then(function(stream) {\r\n                    // 麦克风授权成功，此时用户已与页面进行了交互\r\n                    // 创建 AudioContext 对象\r\n                    audioCtx = new AudioContext();\r\n                    // 处理音频流\r\n\r\n                    // audioCtx = new AudioContext();\r\n                    // 新建分析仪\r\n                    analyser =audioCtx.createAnalyser();\r\n                    // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n                    frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n                    // 取音频文件成 arraybuffer\r\n                })\r\n                .catch(function(err) {\r\n                    alert('未授予音频权限或发生错误：' + err.name+\",请将sound(autoplay)权限改为allow\");\r\n\r\n                    audioCtx = new AudioContext();\r\n                    // 处理音频流\r\n\r\n                    // audioCtx = new AudioContext();\r\n                    // 新建分析仪\r\n                    analyser =audioCtx.createAnalyser();\r\n                    // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n                    frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n                    // 取音频文件成 arraybuffer\r\n\r\n                });\r\n\r\n\r\n\r\n        }else {\r\n            audioCtx = new AudioContext();\r\n            // 处理音频流\r\n\r\n            // audioCtx = new AudioContext();\r\n            // 新建分析仪\r\n            analyser =audioCtx.createAnalyser();\r\n            // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n            frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n            // 取音频文件成 arraybuffer\r\n        }\r\n    }else {\r\n        audioCtx = new AudioContext();\r\n        // 处理音频流\r\n\r\n        // audioCtx = new AudioContext();\r\n        // 新建分析仪\r\n        analyser =audioCtx.createAnalyser();\r\n        // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n        frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n        // 取音频文件成 arraybuffer\r\n    }\r\n\r\n\r\n\r\n}\r\nfunction getByteFrequencyData(){\r\n    analyser.getByteFrequencyData(frequencyData);\r\n    return frequencyData\r\n}\r\n\r\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogVerbose(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, \"[CSM][V]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1,user=false) {\n\n    // let p=this.getParameterIndex(\"ParamMouthOpenY\");\n    //\n    // if(parameterIndex in this._notExistParameterValues){\n    //   p=this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\");\n    // }\n    let p;\n\n    if (this._model.parameters.ids.includes(\"ParamMouthOpenY\")){\n      p = this.getParameterIndex(\"ParamMouthOpenY\")\n    }\n\n    if (this._model.parameters.ids.includes(\"PARAM_MOUTH_OPEN_Y\")){\n      p = this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\n    }\n\n    if (this._model.parameters.ids.includes(\"ParamMouthA\")){\n      p = this.getParameterIndex(\"ParamMouthA\")\n    }\n\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    if (parameterIndex != p || user){\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n\n  }\n  setParameterValueById(parameterId, value, weight = 1,user=false) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight,user);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nclass CubismModelUserDataJson {\n  constructor(json, size) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getUserDataCount() {\n    return this._json.Meta.UserDataCount;\n  }\n  getTotalUserDataSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getUserDataTargetType(i) {\n    return this._json.UserData[i].Target;\n  }\n  getUserDataId(i) {\n    return this._json.UserData[i].Id;\n  }\n  getUserDataValue(i) {\n    return this._json.UserData[i].Value;\n  }\n}\nconst ArtMesh = \"ArtMesh\";\nclass CubismModelUserData {\n  static create(json, size) {\n    const ret = new CubismModelUserData();\n    ret.parseUserData(json, size);\n    return ret;\n  }\n  getArtMeshUserDatas() {\n    return this._artMeshUserDataNode;\n  }\n  parseUserData(data, size) {\n    let json = new CubismModelUserDataJson(data, size);\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount = json.getUserDataCount();\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i)\n      };\n      this._userDataNodes.push(addNode);\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n    json.release();\n  }\n  constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n  release() {\n    this._userDataNodes = null;\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass CubismMotionManager extends CubismMotionQueueManager {\n  constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n  getReservePriority() {\n    return this._reservePriority;\n  }\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0;\n    }\n    this._currentPriority = priority;\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0;\n    }\n    return updated;\n  }\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nconst HitAreaPrefix = \"HitArea\";\nconst HitAreaHead = \"Head\";\nconst HitAreaBody = \"Body\";\nconst PartsIdCore = \"Parts01Core\";\nconst PartsArmPrefix = \"Parts01Arm_\";\nconst PartsArmLPrefix = \"Parts01ArmL_\";\nconst PartsArmRPrefix = \"Parts01ArmR_\";\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeLOpen = \"ParamEyeLOpen\";\nconst ParamEyeLSmile = \"ParamEyeLSmile\";\nconst ParamEyeROpen = \"ParamEyeROpen\";\nconst ParamEyeRSmile = \"ParamEyeRSmile\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamEyeBallForm = \"ParamEyeBallForm\";\nconst ParamBrowLY = \"ParamBrowLY\";\nconst ParamBrowRY = \"ParamBrowRY\";\nconst ParamBrowLX = \"ParamBrowLX\";\nconst ParamBrowRX = \"ParamBrowRX\";\nconst ParamBrowLAngle = \"ParamBrowLAngle\";\nconst ParamBrowRAngle = \"ParamBrowRAngle\";\nconst ParamBrowLForm = \"ParamBrowLForm\";\nconst ParamBrowRForm = \"ParamBrowRForm\";\nconst ParamMouthForm = \"ParamMouthForm\";\nconst ParamMouthOpenY = \"ParamMouthOpenY\";\nconst ParamCheek = \"ParamCheek\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBodyAngleY = \"ParamBodyAngleY\";\nconst ParamBodyAngleZ = \"ParamBodyAngleZ\";\nconst ParamBreath = \"ParamBreath\";\nconst ParamArmLA = \"ParamArmLA\";\nconst ParamArmRA = \"ParamArmRA\";\nconst ParamArmLB = \"ParamArmLB\";\nconst ParamArmRB = \"ParamArmRB\";\nconst ParamHandL = \"ParamHandL\";\nconst ParamHandR = \"ParamHandR\";\nconst ParamHairFront = \"ParamHairFront\";\nconst ParamHairSide = \"ParamHairSide\";\nconst ParamHairBack = \"ParamHairBack\";\nconst ParamHairFluffy = \"ParamHairFluffy\";\nconst ParamShoulderY = \"ParamShoulderY\";\nconst ParamBustX = \"ParamBustX\";\nconst ParamBustY = \"ParamBustY\";\nconst ParamBaseX = \"ParamBaseX\";\nconst ParamBaseY = \"ParamBaseY\";\nconst ParamNONE = \"NONE:\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { ACubismMotion, BreathParameterData, CSM_ASSERT, Constant, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, CubismBlendMode, CubismBreath, CubismClippingContext, CubismClippingManager_WebGL, CubismConfig, CubismDebug, CubismExpressionMotion, CubismEyeBlink, CubismFramework, CubismLogDebug, CubismLogError, CubismLogInfo, CubismLogVerbose, CubismLogWarning, CubismMath, CubismMatrix44, CubismMoc, CubismModel, CubismModelSettingsJson, CubismModelUserData, CubismModelUserDataJson, CubismMotion, CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionJson, CubismMotionManager, CubismMotionPoint, CubismMotionQueueEntry, CubismMotionQueueManager, CubismMotionSegment, CubismMotionSegmentType, CubismPhysics, CubismPhysicsInput, CubismPhysicsJson, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType, CubismPose, CubismRenderTextureResource, CubismRenderer, CubismRenderer_WebGL, CubismShader_WebGL, CubismTextureColor, CubismVector2, EvaluationOptionFlag, ExpressionBlendType, ExpressionManager, EyeState, FileLoader, FocusController, HitAreaBody, HitAreaHead, HitAreaPrefix, InteractionMixin, InternalModel, InvalidMotionQueueEntryHandleValue, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DFactory, Live2DLoader, Live2DModel, Live2DTransform, LogLevel, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, Options, ParamAngleX, ParamAngleY, ParamAngleZ, ParamArmLA, ParamArmLB, ParamArmRA, ParamArmRB, ParamBaseX, ParamBaseY, ParamBodyAngleX, ParamBodyAngleY, ParamBodyAngleZ, ParamBreath, ParamBrowLAngle, ParamBrowLForm, ParamBrowLX, ParamBrowLY, ParamBrowRAngle, ParamBrowRForm, ParamBrowRX, ParamBrowRY, ParamBustX, ParamBustY, ParamCheek, ParamEyeBallForm, ParamEyeBallX, ParamEyeBallY, ParamEyeLOpen, ParamEyeLSmile, ParamEyeROpen, ParamEyeRSmile, ParamHairBack, ParamHairFluffy, ParamHairFront, ParamHairSide, ParamHandL, ParamHandR, ParamMouthForm, ParamMouthOpenY, ParamNONE, ParamShoulderY, PartData, PartsArmLPrefix, PartsArmPrefix, PartsArmRPrefix, PartsIdCore, PhysicsJsonEffectiveForces, ShaderNames, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, csmRect, cubism4Ready, folderName, fragmentShaderSrcMaskInvertedPremultipliedAlpha, fragmentShaderSrcMaskPremultipliedAlpha, fragmentShaderSrcPremultipliedAlpha, fragmentShaderSrcsetupMask, logger, rand, remove, startUpCubism4, vertexShaderSrc, vertexShaderSrcMasked, vertexShaderSrcSetupMask };\n","import * as PIXI from \"pixi.js\";\r\nimport {Live2DModel} from \"@/pixi-live2d-display/dist/cubism4.es\";\r\nimport axios from \"axios\";\r\n\r\nwindow.PIXI = PIXI;\r\n\r\nexport default async function createModel(store,live2d){\r\n//for the modelName\r\n    let modelName= await axios({\r\n      url:\"/get\",\r\n      method:\"get\"\r\n    }).catch( err => {\r\n      console.log(err)\r\n\r\n    }) || {};\r\n    //load the live2d model and add the  model on the state\r\n    store.model4 = await Live2DModel.from(\r\n        \"./model/\"+ (modelName.data || \"mao_pro_t02.model3.json\"),\r\n        { autoUpdate: true });\r\n    // this.set=this.model4.\r\n    //     internalModel.coreModel.\r\n    //     setParameterValueById\r\n\r\n    //set the scale of model\r\n    store.model4.scale.set(store.scale+0)\r\n\r\n    let app = new PIXI.Application({\r\n        view: live2d,\r\n        autoStart: true,\r\n        width:store.model4.width ,\r\n        height:store.model4.height ,\r\n        backgroundAlpha:0\r\n    });\r\n\r\n\r\n\r\n    app.stage.addChild(store.model4);\r\n\r\n\r\n\r\n\r\n//adapt defferent parameterIds of models\r\n   if (store.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthOpenY\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthOpenY\")\r\n    }\r\n\r\n    if (store.model4.internalModel.coreModel._parameterIds.includes(\"PARAM_MOUTH_OPEN_Y\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\r\n    }\r\n\r\n    if (store.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthA\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthA\")\r\n    }\r\n\r\n    return app\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","<template>\n  <div id=\"app\" style=\"text-align: center;\">\n    <Drawer\n    ></Drawer>\n    <canvas ref=\"live2d\"\n            @mousedown=\"handleMouseDown\"\n            @mousemove=\"handleMouseMove\"\n            @mouseup=\"handleMouseUp\"\n            style=\"position: relative;\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\n\n\nimport { config } from './pixi-live2d-display';\nimport Drawer from \"@/components/Drawer.vue\";\nimport initWebSocket from \"@/ws\";\nimport {getWav,createAnalyser} from \"@/openMouthY\";\nimport createModel from \"@/loadLive2d\"\n\n\n// log level\nconfig.logLevel = config.LOG_LEVEL_WARNING; // LOG_LEVEL_VERBOSE, LOG_LEVEL_ERROR, LOG_LEVEL_NONE\n\n\n\n\n\nexport default {\n  name:\"app\",\n  components: {Drawer},\n  data(){\n  return{\n\n    isDragging: false,\n    lastX: 0,\n    lastY: 0,\n  }\n  },\n  mounted() {\n    //load live2d model\n    (async () => {\n      this.$store.state.app = await createModel(this.$store.state,this.$refs.live2d)\n      //create analyser\n      createAnalyser()\n      window.onresize = () => {\n        this.$store.state.model4.x = this.$refs.live2d.clientWidth / 2 -this.$store.state.model4.width / 2\n      }\n    })()\n    //addlistener for the window resizing\n\n\n// put the canvas dom-element in the state\n    this.$store.state.live2d = this.$refs.live2d\n// test the mouthOpen\n//     this.$refs.live2d.onclick=()=>{\n//       getWav({\n//         voice :\"synthesize.wav\",\n//         VType:1\n//       },this.$store.state)\n\n    // }\n\n  }\n  ,\n  created() {\n    // init the ws\n    this.$store.state.websocket = initWebSocket()\n// async add a callback function for the message\n   setTimeout(()=>{\n     this.$store.state.websocket.onmessage =\n         (event) => {\n           let data=JSON.parse(event.data)\n           getWav(data,this.$store.state)\n\n         }\n    })\n  },\n  destroyed() {\n    this.$store.state.websocket.close(); //离开路由之后断开websocket连接\n  },\n  methods:{\n    //add drag\n    handleMouseDown(event) {\n      this.isDragging = true;\n      this.lastX = event.clientX;\n      this.lastY = event.clientY;\n    },\n    handleMouseMove(event) {\n      if (this.isDragging) {\n        const deltaX = event.clientX - this.lastX;\n        const deltaY = event.clientY - this.lastY;\n        this.$refs.live2d.style.left = parseInt(this.$refs.live2d.style.left || 0) + deltaX + \"px\";\n        this.$refs.live2d.style.top = parseInt(this.$refs.live2d.style.top || 0) + deltaY + \"px\";\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n      }\n    },\n    handleMouseUp() {\n      this.isDragging = false;\n      this.isDragging = false;\n      this.isDragging = false;\n    }\n\n\n\n},\n\n\n}\n\n\n</script>\n\n<style>\n\nbody {\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  background-color: #01FE00;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n\n\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6974a0dd&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=6974a0dd&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport {store} from \"core-js/internals/reflect-metadata\";\r\n\r\n\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        websocket :\"\",\r\n        model4:\"\",\r\n        parameterIndex:\"\",\r\n        percentage:localStorage.getItem(\"percentage\") || 60,\r\n        scale:localStorage.getItem(\"scale\") || 1 ,\r\n        app:\"\",\r\n        live2d:\"\"\r\n\r\n    },\r\n    mutations: {\r\n    },\r\n    actions: {\r\n        //increase the percentage when click the button\r\n        increase(context) {\r\n            context.state.percentage += 5;\r\n            if (context.state.percentage > 100) {\r\n                context.state.percentage = 100;\r\n            }\r\n        },\r\n       // decrease the percentage when click the button\r\n        decrease(context) {\r\n            context.state.percentage -= 5;\r\n            if (context.state.percentage <= 1) {\r\n                context.state.percentage = 1;\r\n            }\r\n        },\r\n        //reduce the scale of the live2d model when click the button\r\n        reduce(context,live2d){\r\n        // ensure the scale is a number\r\n            if (typeof localStorage.scale != \"number\" ){\r\n                localStorage.scale = parseFloat(localStorage.scale)\r\n            }\r\n\r\n\r\n            if(context.state.scale<=0.3){\r\n                context.state.scale=0.3\r\n            }\r\n            context.state.scale-=0.1\r\n            context.state.model4.scale.set(context.state.scale) // reset the scale of the model\r\n\r\n            //reset the width and height of canvas\r\n            // live2d.style.width=context.state.width/2\r\n            live2d.width=context.state.model4.width\r\n            live2d.height=context.state.model4.height\r\n            context.state.app.resizeTo=live2d\r\n        },\r\n\r\n        //amplify the scale of the live2d model when click the button\r\n        amplify(context,live2d){\r\n        // ensure the scale is a number\r\n            if (typeof localStorage.scale != \"number\" ){\r\n                localStorage.scale = parseFloat(localStorage.scale)\r\n            }\r\n\r\n            if (context.state.scale>=1.5){\r\n                context.state.scale=1.5\r\n            }\r\n            context.state.scale-=(-0.1)\r\n            context.state.model4.scale.set(context.state.scale) // reset the scale of the model\r\n\r\n            //reset the width and height of canvas\r\n            live2d.width=context.state.model4.width\r\n            live2d.height=context.state.model4.height\r\n            context.state.app.resizeTo=live2d\r\n        },\r\n\r\n\r\n    }\r\n});","import Vue from 'vue'\nimport App from './App.vue'\nimport {Button, ButtonGroup, Drawer, Input, Message, Progress} from \"element-ui\";\n\nimport store from './store'\n\n\nVue.config.productionTip = false\n\n// navigator.mediaDevices.getUserMedia({ audio: true });\nVue.use(Button)\nVue.use(Drawer)\nVue.use(Progress)\nVue.use(ButtonGroup)\nVue.use(Input)\n\n\n\n\nnew Vue({\n  render: h => h(App),\n  beforeCreate() {\n    Vue.prototype.$message = Message;\n  },\n  store,\n\n\n}).$mount('#app');\n\n\n\n\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n(function(global, factory) {\n  typeof exports === \"object\" && typeof module !== \"undefined\" ? factory(exports, require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\")) : typeof define === \"function\" && define.amd ? define([\"exports\", \"@pixi/utils\", \"@pixi/math\", \"@pixi/core\", \"@pixi/display\"], factory) : (global = typeof globalThis !== \"undefined\" ? globalThis : global || self, factory((global.PIXI = global.PIXI || {}, global.PIXI.live2d = global.PIXI.live2d || {}), global.PIXI.utils, global.PIXI, global.PIXI, global.PIXI));\n})(this, function(exports2, utils, math, core, display) {\n  \"use strict\";\n  const LOGICAL_WIDTH = 2;\n  const LOGICAL_HEIGHT = 2;\n  var CubismConfig;\n  ((CubismConfig2) => {\n    CubismConfig2.supportMoreMaskDivisions = true;\n    CubismConfig2.setOpacityFromMotion = false;\n  })(CubismConfig || (CubismConfig = {}));\n  exports2.config = void 0;\n  ((config2) => {\n    config2.LOG_LEVEL_VERBOSE = 0;\n    config2.LOG_LEVEL_WARNING = 1;\n    config2.LOG_LEVEL_ERROR = 2;\n    config2.LOG_LEVEL_NONE = 999;\n    config2.logLevel = config2.LOG_LEVEL_WARNING;\n    config2.sound = true;\n    config2.motionSync = true;\n    config2.motionFadingDuration = 500;\n    config2.idleMotionFadingDuration = 2e3;\n    config2.expressionFadingDuration = 500;\n    config2.preserveExpressionOnMotion = true;\n    config2.cubism4 = CubismConfig;\n  })(exports2.config || (exports2.config = {}));\n  const VERSION = \"0.4.0\";\n  const logger = {\n    log(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_VERBOSE) {\n        console.log(`[${tag}]`, ...messages);\n      }\n    },\n    warn(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_WARNING) {\n        console.warn(`[${tag}]`, ...messages);\n      }\n    },\n    error(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_ERROR) {\n        console.error(`[${tag}]`, ...messages);\n      }\n    }\n  };\n  function clamp(num, lower, upper) {\n    return num < lower ? lower : num > upper ? upper : num;\n  }\n  function rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  function copyProperty(type, from, to, fromKey, toKey) {\n    const value = from[fromKey];\n    if (value !== null && typeof value === type) {\n      to[toKey] = value;\n    }\n  }\n  function copyArray(type, from, to, fromKey, toKey) {\n    const array = from[fromKey];\n    if (Array.isArray(array)) {\n      to[toKey] = array.filter((item) => item !== null && typeof item === type);\n    }\n  }\n  function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n        if (name !== \"constructor\") {\n          Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n        }\n      });\n    });\n  }\n  function folderName(url) {\n    let lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex != -1) {\n      url = url.slice(0, lastSlashIndex);\n    }\n    lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex !== -1) {\n      url = url.slice(lastSlashIndex + 1);\n    }\n    return url;\n  }\n  function remove(array, item) {\n    const index = array.indexOf(item);\n    if (index !== -1) {\n      array.splice(index, 1);\n    }\n  }\n  class ExpressionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.expressions = [];\n      this.reserveExpressionIndex = -1;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `ExpressionManager(${settings.name})`;\n    }\n    init() {\n      this.defaultExpression = this.createExpression({}, void 0);\n      this.currentExpression = this.defaultExpression;\n      this.stopAllExpressions();\n    }\n    loadExpression(index) {\n      return __async(this, null, function* () {\n        if (!this.definitions[index]) {\n          logger.warn(this.tag, `Undefined expression at [${index}]`);\n          return void 0;\n        }\n        if (this.expressions[index] === null) {\n          logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.expressions[index]) {\n          return this.expressions[index];\n        }\n        const expression = yield this._loadExpression(index);\n        this.expressions[index] = expression;\n        return expression;\n      });\n    }\n    _loadExpression(index) {\n      throw new Error(\"Not implemented.\");\n    }\n    setRandomExpression() {\n      return __async(this, null, function* () {\n        if (this.definitions.length) {\n          const availableIndices = [];\n          for (let i = 0; i < this.definitions.length; i++) {\n            if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.setExpression(index);\n          }\n        }\n        return false;\n      });\n    }\n    resetExpression() {\n      this._setExpression(this.defaultExpression);\n    }\n    restoreExpression() {\n      this._setExpression(this.currentExpression);\n    }\n    setExpression(index) {\n      return __async(this, null, function* () {\n        if (typeof index !== \"number\") {\n          index = this.getExpressionIndex(index);\n        }\n        if (!(index > -1 && index < this.definitions.length)) {\n          return false;\n        }\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n          return false;\n        }\n        this.reserveExpressionIndex = index;\n        const expression = yield this.loadExpression(index);\n        if (!expression || this.reserveExpressionIndex !== index) {\n          return false;\n        }\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n        return true;\n      });\n    }\n    update(model, now) {\n      if (!this.isFinished()) {\n        return this.updateParameters(model, now);\n      }\n      return false;\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.expressions = void 0;\n    }\n  }\n  const EPSILON = 0.01;\n  const MAX_SPEED = 40 / 7.5;\n  const ACCELERATION_TIME = 1 / (0.15 * 1e3);\n  class FocusController {\n    constructor() {\n      this.targetX = 0;\n      this.targetY = 0;\n      this.x = 0;\n      this.y = 0;\n      this.vx = 0;\n      this.vy = 0;\n    }\n    focus(x, y, instant = false) {\n      this.targetX = clamp(x, -1, 1);\n      this.targetY = clamp(y, -1, 1);\n      if (instant) {\n        this.x = this.targetX;\n        this.y = this.targetY;\n      }\n    }\n    update(dt) {\n      const dx = this.targetX - this.x;\n      const dy = this.targetY - this.y;\n      if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n        return;\n      const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n      const maxSpeed = MAX_SPEED / (1e3 / dt);\n      let ax = maxSpeed * (dx / d) - this.vx;\n      let ay = maxSpeed * (dy / d) - this.vy;\n      const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n      const maxA = maxSpeed * ACCELERATION_TIME * dt;\n      if (a > maxA) {\n        ax *= maxA / a;\n        ay *= maxA / a;\n      }\n      this.vx += ax;\n      this.vy += ay;\n      const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n      const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n      if (v > maxV) {\n        this.vx *= maxV / v;\n        this.vy *= maxV / v;\n      }\n      this.x += this.vx;\n      this.y += this.vy;\n    }\n  }\n  class ModelSettings {\n    constructor(json) {\n      this.json = json;\n      let url2 = json.url;\n      if (typeof url2 !== \"string\") {\n        throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n      }\n      this.url = url2;\n      this.name = folderName(this.url);\n    }\n    resolveURL(path) {\n      return utils.url.resolve(this.url, path);\n    }\n    replaceFiles(replacer) {\n      this.moc = replacer(this.moc, \"moc\");\n      if (this.pose !== void 0) {\n        this.pose = replacer(this.pose, \"pose\");\n      }\n      if (this.physics !== void 0) {\n        this.physics = replacer(this.physics, \"physics\");\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n      }\n    }\n    getDefinedFiles() {\n      const files = [];\n      this.replaceFiles((file) => {\n        files.push(file);\n        return file;\n      });\n      return files;\n    }\n    validateFiles(files) {\n      const assertFileExists = (expectedFile, shouldThrow) => {\n        const actualPath = this.resolveURL(expectedFile);\n        if (!files.includes(actualPath)) {\n          if (shouldThrow) {\n            throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n          }\n          return false;\n        }\n        return true;\n      };\n      const essentialFiles = [this.moc, ...this.textures];\n      essentialFiles.forEach((texture) => assertFileExists(texture, true));\n      const definedFiles = this.getDefinedFiles();\n      return definedFiles.filter((file) => assertFileExists(file, false));\n    }\n  }\n  var MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n    MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n    MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n    MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n    MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n    return MotionPriority2;\n  })(MotionPriority || {});\n  class MotionState {\n    constructor() {\n      this.debug = false;\n      this.currentPriority = 0;\n      this.reservePriority = 0;\n    }\n    reserve(group, index, priority) {\n      if (priority <= 0) {\n        logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n        return false;\n      }\n      if (group === this.currentGroup && index === this.currentIndex) {\n        logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n        return false;\n      }\n      if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n        logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n        return false;\n      }\n      if (priority === 1) {\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n          return false;\n        }\n        if (this.reservedIdleGroup !== void 0) {\n          logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n          return false;\n        }\n        this.setReservedIdle(group, index);\n      } else {\n        if (priority < 3) {\n          if (priority <= this.currentPriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n          if (priority <= this.reservePriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n        }\n        this.setReserved(group, index, priority);\n      }\n      return true;\n    }\n    start(motion, group, index, priority) {\n      if (priority === 1) {\n        this.setReservedIdle(void 0, void 0);\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n          return false;\n        }\n      } else {\n        if (group !== this.reservedGroup || index !== this.reservedIndex) {\n          logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n          return false;\n        }\n        this.setReserved(void 0, void 0, 0);\n      }\n      if (!motion) {\n        return false;\n      }\n      this.setCurrent(group, index, priority);\n      return true;\n    }\n    complete() {\n      this.setCurrent(void 0, void 0, 0);\n    }\n    setCurrent(group, index, priority) {\n      this.currentPriority = priority;\n      this.currentGroup = group;\n      this.currentIndex = index;\n    }\n    setReserved(group, index, priority) {\n      this.reservePriority = priority;\n      this.reservedGroup = group;\n      this.reservedIndex = index;\n    }\n    setReservedIdle(group, index) {\n      this.reservedIdleGroup = group;\n      this.reservedIdleIndex = index;\n    }\n    isActive(group, index) {\n      return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n    }\n    reset() {\n      this.setCurrent(void 0, void 0, 0);\n      this.setReserved(void 0, void 0, 0);\n      this.setReservedIdle(void 0, void 0);\n    }\n    shouldRequestIdleMotion() {\n      return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n    }\n    shouldOverrideExpression() {\n      return !exports2.config.preserveExpressionOnMotion && this.currentPriority > 1;\n    }\n    dump(requestedGroup, requestedIndex) {\n      if (this.debug) {\n        const keys = [\n          \"currentPriority\",\n          \"reservePriority\",\n          \"currentGroup\",\n          \"currentIndex\",\n          \"reservedGroup\",\n          \"reservedIndex\",\n          \"reservedIdleGroup\",\n          \"reservedIdleIndex\"\n        ];\n        return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n      }\n      return \"\";\n    }\n  }\n  const TAG$2 = \"SoundManager\";\n  const VOLUME = 0.5;\n  class SoundManager {\n    static get volume() {\n      return this._volume;\n    }\n    static set volume(value) {\n      this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n      this.audios.forEach((audio) => audio.volume = this._volume);\n    }\n    static add(file, onFinish, onError) {\n      const audio = new Audio(file);\n      audio.volume = this._volume;\n      audio.preload = \"auto\";\n      audio.addEventListener(\"ended\", () => {\n        this.dispose(audio);\n        onFinish == null ? void 0 : onFinish();\n      });\n      audio.addEventListener(\"error\", (e) => {\n        this.dispose(audio);\n        logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n        onError == null ? void 0 : onError(e.error);\n      });\n      this.audios.push(audio);\n      return audio;\n    }\n    static play(audio) {\n      return new Promise((resolve, reject) => {\n        var _a;\n        (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n          audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n          reject(e);\n        });\n        if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n          resolve();\n        } else {\n          audio.addEventListener(\"canplaythrough\", resolve);\n        }\n      });\n    }\n    static dispose(audio) {\n      audio.pause();\n      audio.removeAttribute(\"src\");\n      remove(this.audios, audio);\n    }\n    static destroy() {\n      for (let i = this.audios.length - 1; i >= 0; i--) {\n        this.dispose(this.audios[i]);\n      }\n    }\n  }\n  SoundManager.audios = [];\n  SoundManager._volume = VOLUME;\n  var MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n    MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n    MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n    MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n    return MotionPreloadStrategy2;\n  })(MotionPreloadStrategy || {});\n  class MotionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.motionGroups = {};\n      this.state = new MotionState();\n      this.playing = false;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `MotionManager(${settings.name})`;\n      this.state.tag = this.tag;\n    }\n    init(options) {\n      if (options == null ? void 0 : options.idleMotionGroup) {\n        this.groups.idle = options.idleMotionGroup;\n      }\n      this.setupMotions(options);\n      this.stopAllMotions();\n    }\n    setupMotions(options) {\n      for (const group of Object.keys(this.definitions)) {\n        this.motionGroups[group] = [];\n      }\n      let groups;\n      switch (options == null ? void 0 : options.motionPreload) {\n        case \"NONE\":\n          return;\n        case \"ALL\":\n          groups = Object.keys(this.definitions);\n          break;\n        case \"IDLE\":\n        default:\n          groups = [this.groups.idle];\n          break;\n      }\n      for (const group of groups) {\n        if (this.definitions[group]) {\n          for (let i = 0; i < this.definitions[group].length; i++) {\n            this.loadMotion(group, i).then();\n          }\n        }\n      }\n    }\n    loadMotion(group, index) {\n      return __async(this, null, function* () {\n        var _a;\n        if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n          logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index] === null) {\n          logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index]) {\n          return this.motionGroups[group][index];\n        }\n        const motion = yield this._loadMotion(group, index);\n        if (this.destroyed) {\n          return;\n        }\n        this.motionGroups[group][index] = motion != null ? motion : null;\n        return motion;\n      });\n    }\n    _loadMotion(group, index) {\n      throw new Error(\"Not implemented.\");\n    }\n    startMotion(_0, _1) {\n      return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n        var _a;\n        if (!this.state.reserve(group, index, priority)) {\n          return false;\n        }\n        const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return false;\n        }\n        if (this.currentAudio) {\n          SoundManager.dispose(this.currentAudio);\n        }\n        let audio;\n        if (exports2.config.sound) {\n          const soundURL = this.getSoundFile(definition);\n          if (soundURL) {\n            try {\n              audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n              this.currentAudio = audio;\n            } catch (e) {\n              logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n            }\n          }\n        }\n        const motion = yield this.loadMotion(group, index);\n        if (audio) {\n          const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n          if (exports2.config.motionSync) {\n            yield readyToPlay;\n          }\n        }\n        if (!this.state.start(motion, group, index, priority)) {\n          if (audio) {\n            SoundManager.dispose(audio);\n            this.currentAudio = void 0;\n          }\n          return false;\n        }\n        logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n        this.emit(\"motionStart\", group, index, audio);\n        if (this.state.shouldOverrideExpression()) {\n          this.expressionManager && this.expressionManager.resetExpression();\n        }\n        this.playing = true;\n        this._startMotion(motion);\n        return true;\n      });\n    }\n    startRandomMotion(group, priority) {\n      return __async(this, null, function* () {\n        const groupDefs = this.definitions[group];\n        if (groupDefs == null ? void 0 : groupDefs.length) {\n          const availableIndices = [];\n          for (let i = 0; i < groupDefs.length; i++) {\n            if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.startMotion(group, availableIndices[index], priority);\n          }\n        }\n        return false;\n      });\n    }\n    stopAllMotions() {\n      this._stopAllMotions();\n      this.state.reset();\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n        this.currentAudio = void 0;\n      }\n    }\n    update(model, now) {\n      var _a;\n      if (this.isFinished()) {\n        if (this.playing) {\n          this.playing = false;\n          this.emit(\"motionFinish\");\n        }\n        if (this.state.shouldOverrideExpression()) {\n          (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n        }\n        this.state.complete();\n        if (this.state.shouldRequestIdleMotion()) {\n          this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n        }\n      }\n      return this.updateParameters(model, now);\n    }\n    destroy() {\n      var _a;\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.stopAllMotions();\n      (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.motionGroups = void 0;\n    }\n  }\n  const tempBounds = { x: 0, y: 0, width: 0, height: 0 };\n  class InternalModel extends utils.EventEmitter {\n    constructor() {\n      super(...arguments);\n      this.focusController = new FocusController();\n      this.originalWidth = 0;\n      this.originalHeight = 0;\n      this.width = 0;\n      this.height = 0;\n      this.localTransform = new math.Matrix();\n      this.drawingMatrix = new math.Matrix();\n      this.hitAreas = {};\n      this.textureFlipY = false;\n      this.viewport = [0, 0, 0, 0];\n      this.destroyed = false;\n    }\n    init() {\n      this.setupLayout();\n      this.setupHitAreas();\n    }\n    setupLayout() {\n      const self2 = this;\n      const size = this.getSize();\n      self2.originalWidth = size[0];\n      self2.originalHeight = size[1];\n      const layout = Object.assign({\n        width: LOGICAL_WIDTH,\n        height: LOGICAL_HEIGHT\n      }, this.getLayout());\n      this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n      self2.width = this.originalWidth * this.localTransform.a;\n      self2.height = this.originalHeight * this.localTransform.d;\n      const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n      const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n      this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n    setupHitAreas() {\n      const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n      for (const def of definitions) {\n        this.hitAreas[def.name] = def;\n      }\n    }\n    hitTest(x, y) {\n      return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n    }\n    isHit(hitAreaName, x, y) {\n      if (!this.hitAreas[hitAreaName]) {\n        return false;\n      }\n      const drawIndex = this.hitAreas[hitAreaName].index;\n      const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n      return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n    getDrawableBounds(index, bounds) {\n      const vertices = this.getDrawableVertices(index);\n      let left = vertices[0];\n      let right = vertices[0];\n      let top = vertices[1];\n      let bottom = vertices[1];\n      for (let i = 0; i < vertices.length; i += 2) {\n        const vx = vertices[i];\n        const vy = vertices[i + 1];\n        left = Math.min(vx, left);\n        right = Math.max(vx, right);\n        top = Math.min(vy, top);\n        bottom = Math.max(vy, bottom);\n      }\n      bounds != null ? bounds : bounds = {};\n      bounds.x = left;\n      bounds.y = top;\n      bounds.width = right - left;\n      bounds.height = bottom - top;\n      return bounds;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n    update(dt, now) {\n      this.focusController.update(dt);\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.motionManager.destroy();\n      this.motionManager = void 0;\n    }\n  }\n  const TAG$1 = \"XHRLoader\";\n  class NetworkError extends Error {\n    constructor(message, url, status, aborted = false) {\n      super(message);\n      this.url = url;\n      this.status = status;\n      this.aborted = aborted;\n    }\n  }\n  const _XHRLoader = class {\n    static createXHR(target, url, type, onload, onerror) {\n      const xhr = new XMLHttpRequest();\n      _XHRLoader.allXhrSet.add(xhr);\n      if (target) {\n        let xhrSet = _XHRLoader.xhrMap.get(target);\n        if (!xhrSet) {\n          xhrSet = /* @__PURE__ */ new Set([xhr]);\n          _XHRLoader.xhrMap.set(target, xhrSet);\n        } else {\n          xhrSet.add(xhr);\n        }\n        if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n          target.once(\"destroy\", _XHRLoader.cancelXHRs);\n        }\n      }\n      xhr.open(\"GET\", url);\n      xhr.responseType = type;\n      xhr.onload = () => {\n        if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n          onload(xhr.response);\n        } else {\n          xhr.onerror();\n        }\n      };\n      xhr.onerror = () => {\n        logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n        onerror(new NetworkError(\"Network error.\", url, xhr.status));\n      };\n      xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url, xhr.status, true));\n      xhr.onloadend = () => {\n        var _a;\n        _XHRLoader.allXhrSet.delete(xhr);\n        if (target) {\n          (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n        }\n      };\n      return xhr;\n    }\n    static cancelXHRs() {\n      var _a;\n      (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n        xhr.abort();\n        _XHRLoader.allXhrSet.delete(xhr);\n      });\n      _XHRLoader.xhrMap.delete(this);\n    }\n    static release() {\n      _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n      _XHRLoader.allXhrSet.clear();\n      _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n    }\n  };\n  let XHRLoader = _XHRLoader;\n  XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  XHRLoader.allXhrSet = /* @__PURE__ */ new Set();\n  XHRLoader.loader = (context, next) => {\n    return new Promise((resolve, reject) => {\n      const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n        context.result = data;\n        resolve();\n      }, reject);\n      xhr.send();\n    });\n  };\n  function runMiddlewares(middleware, context) {\n    let index = -1;\n    return dispatch(0);\n    function dispatch(i, err) {\n      if (err)\n        return Promise.reject(err);\n      if (i <= index)\n        return Promise.reject(new Error(\"next() called multiple times\"));\n      index = i;\n      const fn = middleware[i];\n      if (!fn)\n        return Promise.resolve();\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err2) {\n        return Promise.reject(err2);\n      }\n    }\n  }\n  class Live2DLoader {\n    static load(context) {\n      return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n  }\n  Live2DLoader.middlewares = [XHRLoader.loader];\n  function createTexture(url, options = {}) {\n    var _a;\n    const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n    if (core.Texture.fromURL) {\n      return core.Texture.fromURL(url, textureOptions).catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        }\n        const err = new Error(\"Texture loading error\");\n        err.event = e;\n        throw err;\n      });\n    }\n    textureOptions.resourceOptions.autoLoad = false;\n    const texture = core.Texture.from(url, textureOptions);\n    if (texture.baseTexture.valid) {\n      return Promise.resolve(texture);\n    }\n    const resource = texture.baseTexture.resource;\n    (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n      const errorHandler = (event) => {\n        resource.source.removeEventListener(\"error\", errorHandler);\n        const err = new Error(\"Texture loading error\");\n        err.event = event;\n        reject(err);\n      };\n      resource.source.addEventListener(\"error\", errorHandler);\n      resource.load().then(() => resolve(texture)).catch(errorHandler);\n    });\n    return resource._live2d_load;\n  }\n  const TAG = \"Live2DFactory\";\n  const urlToJSON = (context, next) => __async(this, null, function* () {\n    if (typeof context.source === \"string\") {\n      const data = yield Live2DLoader.load({\n        url: context.source,\n        type: \"json\",\n        target: context.live2dModel\n      });\n      data.url = context.source;\n      context.source = data;\n      context.live2dModel.emit(\"settingsJSONLoaded\", data);\n    }\n    return next();\n  });\n  const jsonToSettings = (context, next) => __async(this, null, function* () {\n    if (context.source instanceof ModelSettings) {\n      context.settings = context.source;\n      return next();\n    } else if (typeof context.source === \"object\") {\n      const runtime = Live2DFactory.findRuntime(context.source);\n      if (runtime) {\n        const settings = runtime.createModelSettings(context.source);\n        context.settings = settings;\n        context.live2dModel.emit(\"settingsLoaded\", settings);\n        return next();\n      }\n    }\n    throw new TypeError(\"Unknown settings format.\");\n  });\n  const waitUntilReady = (context, next) => {\n    if (context.settings) {\n      const runtime = Live2DFactory.findRuntime(context.settings);\n      if (runtime) {\n        return runtime.ready().then(next);\n      }\n    }\n    return next();\n  };\n  const setupOptionals = (context, next) => __async(this, null, function* () {\n    yield next();\n    const internalModel = context.internalModel;\n    if (internalModel) {\n      const settings = context.settings;\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (runtime) {\n        const tasks = [];\n        if (settings.pose) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.pose,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n            context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n          }).catch((e) => {\n            context.live2dModel.emit(\"poseLoadError\", e);\n            logger.warn(TAG, \"Failed to load pose.\", e);\n          }));\n        }\n        if (settings.physics) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.physics,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n            context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n          }).catch((e) => {\n            context.live2dModel.emit(\"physicsLoadError\", e);\n            logger.warn(TAG, \"Failed to load physics.\", e);\n          }));\n        }\n        if (tasks.length) {\n          yield Promise.all(tasks);\n        }\n      }\n    }\n  });\n  const setupEssentials = (context, next) => __async(this, null, function* () {\n    if (context.settings) {\n      const live2DModel = context.live2dModel;\n      const textureLoadings = context.settings.textures.map((tex) => {\n        const url = context.settings.resolveURL(tex);\n        return createTexture(url, { crossOrigin: context.options.crossOrigin });\n      });\n      yield next();\n      if (context.internalModel) {\n        live2DModel.internalModel = context.internalModel;\n        live2DModel.emit(\"modelLoaded\", context.internalModel);\n      } else {\n        throw new TypeError(\"Missing internal model.\");\n      }\n      live2DModel.textures = yield Promise.all(textureLoadings);\n      live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n    } else {\n      throw new TypeError(\"Missing settings.\");\n    }\n  });\n  const createInternalModel = (context, next) => __async(this, null, function* () {\n    const settings = context.settings;\n    if (settings instanceof ModelSettings) {\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (!runtime) {\n        throw new TypeError(\"Unknown model settings.\");\n      }\n      const modelData = yield Live2DLoader.load({\n        settings,\n        url: settings.moc,\n        type: \"arraybuffer\",\n        target: context.live2dModel\n      });\n      if (!runtime.isValidMoc(modelData)) {\n        throw new Error(\"Invalid moc data\");\n      }\n      const coreModel = runtime.createCoreModel(modelData);\n      context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n      return next();\n    }\n    throw new TypeError(\"Missing settings.\");\n  });\n  const _Live2DFactory = class {\n    static registerRuntime(runtime) {\n      _Live2DFactory.runtimes.push(runtime);\n      _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n    static findRuntime(source) {\n      for (const runtime of _Live2DFactory.runtimes) {\n        if (runtime.test(source)) {\n          return runtime;\n        }\n      }\n    }\n    static setupLive2DModel(live2dModel, source, options) {\n      return __async(this, null, function* () {\n        const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n        const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n        yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n          live2dModel,\n          source,\n          options: options || {}\n        });\n        yield readyEventEmitted;\n        live2dModel.emit(\"load\");\n      });\n    }\n    static loadMotion(motionManager, group, index) {\n      var _a, _b;\n      const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n      try {\n        const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n        if (!tasks) {\n          tasks = {};\n          _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n        }\n        let taskGroup = tasks[group];\n        if (!taskGroup) {\n          taskGroup = [];\n          tasks[group] = taskGroup;\n        }\n        const path = motionManager.getMotionFile(definition);\n        (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n          url: path,\n          settings: motionManager.settings,\n          type: motionManager.motionDataType,\n          target: motionManager\n        }).then((data) => {\n          var _a2;\n          const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n          if (taskGroup2) {\n            delete taskGroup2[index];\n          }\n          const motion = motionManager.createMotion(data, group, definition);\n          motionManager.emit(\"motionLoaded\", group, index, motion);\n          return motion;\n        }).catch((e) => {\n          logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n          handleError(e);\n        });\n        return taskGroup[index];\n      } catch (e) {\n        logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static loadExpression(expressionManager, index) {\n      var _a;\n      const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n      try {\n        const definition = expressionManager.definitions[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (!tasks) {\n          tasks = [];\n          _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n        }\n        const path = expressionManager.getExpressionFile(definition);\n        (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n          url: path,\n          settings: expressionManager.settings,\n          type: \"json\",\n          target: expressionManager\n        }).then((data) => {\n          const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n          if (tasks2) {\n            delete tasks2[index];\n          }\n          const expression = expressionManager.createExpression(data, definition);\n          expressionManager.emit(\"expressionLoaded\", index, expression);\n          return expression;\n        }).catch((e) => {\n          logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n          handleError(e);\n        });\n        return tasks[index];\n      } catch (e) {\n        logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static releaseTasks() {\n      if (this instanceof MotionManager) {\n        _Live2DFactory.motionTasksMap.delete(this);\n      } else {\n        _Live2DFactory.expressionTasksMap.delete(this);\n      }\n    }\n  };\n  let Live2DFactory = _Live2DFactory;\n  Live2DFactory.runtimes = [];\n  Live2DFactory.urlToJSON = urlToJSON;\n  Live2DFactory.jsonToSettings = jsonToSettings;\n  Live2DFactory.waitUntilReady = waitUntilReady;\n  Live2DFactory.setupOptionals = setupOptionals;\n  Live2DFactory.setupEssentials = setupEssentials;\n  Live2DFactory.createInternalModel = createInternalModel;\n  Live2DFactory.live2DModelMiddlewares = [\n    urlToJSON,\n    jsonToSettings,\n    waitUntilReady,\n    setupOptionals,\n    setupEssentials,\n    createInternalModel\n  ];\n  Live2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\n  Live2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\n  MotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n    return Live2DFactory.loadMotion(this, group, index);\n  };\n  ExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n    return Live2DFactory.loadExpression(this, index);\n  };\n  class InteractionMixin {\n    constructor() {\n      this._autoInteract = false;\n    }\n    get autoInteract() {\n      return this._autoInteract;\n    }\n    set autoInteract(autoInteract) {\n      if (autoInteract !== this._autoInteract) {\n        if (autoInteract) {\n          this.on(\"pointertap\", onTap, this);\n        } else {\n          this.off(\"pointertap\", onTap, this);\n        }\n        this._autoInteract = autoInteract;\n      }\n    }\n    registerInteraction(manager) {\n      if (manager !== this.interactionManager) {\n        this.unregisterInteraction();\n        if (this._autoInteract && manager) {\n          this.interactionManager = manager;\n          manager.on(\"pointermove\", onPointerMove, this);\n        }\n      }\n    }\n    unregisterInteraction() {\n      var _a;\n      if (this.interactionManager) {\n        (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n        this.interactionManager = void 0;\n      }\n    }\n  }\n  function onTap(event) {\n    this.tap(event.data.global.x, event.data.global.y);\n  }\n  function onPointerMove(event) {\n    this.focus(event.data.global.x, event.data.global.y);\n  }\n  class Live2DTransform extends math.Transform {\n  }\n  const tempPoint = new math.Point();\n  const tempMatrix$1 = new math.Matrix();\n  let tickerRef;\n  class Live2DModel extends display.Container {\n    constructor(options) {\n      super();\n      this.tag = \"Live2DModel(uninitialized)\";\n      this.textures = [];\n      this.transform = new Live2DTransform();\n      this.anchor = new math.ObservablePoint(this.onAnchorChange, this, 0, 0);\n      this.glContextID = -1;\n      this.elapsedTime = performance.now();\n      this.deltaTime = 0;\n      this._autoUpdate = false;\n      this.once(\"modelLoaded\", () => this.init(options));\n    }\n    static from(source, options) {\n      const model = new this(options);\n      return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n    static fromSync(source, options) {\n      const model = new this(options);\n      Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n      return model;\n    }\n    static registerTicker(tickerClass) {\n      tickerRef = tickerClass;\n    }\n    get autoUpdate() {\n      return this._autoUpdate;\n    }\n    set autoUpdate(autoUpdate) {\n      var _a;\n      tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n      if (autoUpdate) {\n        if (!this._destroyed) {\n          if (tickerRef) {\n            tickerRef.shared.add(this.onTickerUpdate, this);\n            this._autoUpdate = true;\n          } else {\n            logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n          }\n        }\n      } else {\n        tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n        this._autoUpdate = false;\n      }\n    }\n    init(options) {\n      this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n      const _options = Object.assign({\n        autoUpdate: true,\n        autoInteract: true\n      }, options);\n      if (_options.autoInteract) {\n        this.interactive = true;\n      }\n      this.autoInteract = _options.autoInteract;\n      this.autoUpdate = _options.autoUpdate;\n    }\n    onAnchorChange() {\n      this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n    motion(group, index, priority) {\n      return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n    expression(id) {\n      if (this.internalModel.motionManager.expressionManager) {\n        return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n      }\n      return Promise.resolve(false);\n    }\n    focus(x, y, instant = false) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint, true);\n      let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n      let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n      let radian = Math.atan2(ty, tx);\n      this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n    }\n    tap(x, y) {\n      const hitAreaNames = this.hitTest(x, y);\n      if (hitAreaNames.length) {\n        logger.log(this.tag, `Hit`, hitAreaNames);\n        this.emit(\"hit\", hitAreaNames);\n      }\n    }\n    hitTest(x, y) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint);\n      return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n    toModelPosition(position, result = position.clone(), skipUpdate) {\n      if (!skipUpdate) {\n        this._recursivePostUpdateTransform();\n        if (!this.parent) {\n          this.parent = this._tempDisplayObjectParent;\n          this.displayObjectUpdateTransform();\n          this.parent = null;\n        } else {\n          this.displayObjectUpdateTransform();\n        }\n      }\n      this.transform.worldTransform.applyInverse(position, result);\n      this.internalModel.localTransform.applyInverse(result, result);\n      return result;\n    }\n    containsPoint(point) {\n      return this.getBounds(true).contains(point.x, point.y);\n    }\n    _calculateBounds() {\n      this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n    onTickerUpdate() {\n      this.update(tickerRef.shared.deltaMS);\n    }\n    update(dt) {\n      this.deltaTime += dt;\n      this.elapsedTime += dt;\n    }\n    _render(renderer) {\n      this.registerInteraction(renderer.plugins.interaction);\n      renderer.batch.reset();\n      renderer.geometry.reset();\n      renderer.shader.reset();\n      renderer.state.reset();\n      let shouldUpdateTexture = false;\n      if (this.glContextID !== renderer.CONTEXT_UID) {\n        this.glContextID = renderer.CONTEXT_UID;\n        this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n        shouldUpdateTexture = true;\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        const texture = this.textures[i];\n        if (!texture.valid) {\n          continue;\n        }\n        if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n          renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n          renderer.texture.bind(texture.baseTexture, 0);\n        }\n        this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n        texture.baseTexture.touched = renderer.textureGC.count;\n      }\n      const viewport = renderer.framebuffer.viewport;\n      this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n      if (this.deltaTime) {\n        this.internalModel.update(this.deltaTime, this.elapsedTime);\n        this.deltaTime = 0;\n      }\n      const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n      this.internalModel.updateTransform(internalTransform);\n      this.internalModel.draw(renderer.gl);\n      renderer.state.reset();\n      renderer.texture.reset();\n    }\n    destroy(options) {\n      this.emit(\"destroy\");\n      this.autoUpdate = false;\n      this.unregisterInteraction();\n      if (options == null ? void 0 : options.texture) {\n        this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n      }\n      this.internalModel.destroy();\n      super.destroy(options);\n    }\n  }\n  applyMixins(Live2DModel, [InteractionMixin]);\n  const _FileLoader = class {\n    static resolveURL(settingsURL, filePath) {\n      var _a;\n      const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n      if (resolved === void 0) {\n        throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n      }\n      return resolved;\n    }\n    static upload(files, settings) {\n      return __async(this, null, function* () {\n        const fileMap = {};\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n          if (actualFile) {\n            fileMap[definedFile] = URL.createObjectURL(actualFile);\n          }\n        }\n        _FileLoader.filesMap[settings._objectURL] = fileMap;\n      });\n    }\n    static createSettings(files) {\n      return __async(this, null, function* () {\n        const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n        if (!settingsFile) {\n          throw new TypeError(\"Settings file not found\");\n        }\n        const settingsText = yield _FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFile.webkitRelativePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        const settings = runtime.createModelSettings(settingsJSON);\n        settings._objectURL = URL.createObjectURL(settingsFile);\n        return settings;\n      });\n    }\n    static readText(file) {\n      return __async(this, null, function* () {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsText(file, \"utf8\");\n        });\n      });\n    }\n  };\n  let FileLoader = _FileLoader;\n  FileLoader.filesMap = {};\n  FileLoader.factory = (context, next) => __async(this, null, function* () {\n    if (Array.isArray(context.source) && context.source[0] instanceof File) {\n      const files = context.source;\n      let settings = files.settings;\n      if (!settings) {\n        settings = yield _FileLoader.createSettings(files);\n      } else if (!settings._objectURL) {\n        throw new Error('\"_objectURL\" must be specified in ModelSettings');\n      }\n      settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n      yield _FileLoader.upload(files, settings);\n      settings.resolveURL = function(url) {\n        return _FileLoader.resolveURL(this._objectURL, url);\n      };\n      context.source = settings;\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          const objectURL = this.settings._objectURL;\n          URL.revokeObjectURL(objectURL);\n          if (_FileLoader.filesMap[objectURL]) {\n            for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n              URL.revokeObjectURL(resourceObjectURL);\n            }\n          }\n          delete _FileLoader.filesMap[objectURL];\n        });\n      });\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n  const _ZipLoader = class {\n    static unzip(reader, settings) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const requiredFilePaths = [];\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          if (filePaths.includes(actualPath)) {\n            requiredFilePaths.push(actualPath);\n          }\n        }\n        const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n        for (let i = 0; i < files.length; i++) {\n          const path = requiredFilePaths[i];\n          const file = files[i];\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: path\n          });\n        }\n        return files;\n      });\n    }\n    static createSettings(reader) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n        if (!settingsFilePath) {\n          throw new Error(\"Settings file not found\");\n        }\n        const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n        if (!settingsText) {\n          throw new Error(\"Empty settings file: \" + settingsFilePath);\n        }\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFilePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        return runtime.createModelSettings(settingsJSON);\n      });\n    }\n    static zipReader(data, url) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFilePaths(reader) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFiles(reader, paths) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static readText(reader, path) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static releaseReader(reader) {\n    }\n  };\n  let ZipLoader = _ZipLoader;\n  ZipLoader.ZIP_PROTOCOL = \"zip://\";\n  ZipLoader.uid = 0;\n  ZipLoader.factory = (context, next) => __async(this, null, function* () {\n    const source = context.source;\n    let sourceURL;\n    let zipBlob;\n    let settings;\n    if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n      if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n        sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n      } else {\n        sourceURL = source;\n      }\n      zipBlob = yield Live2DLoader.load({\n        url: sourceURL,\n        type: \"blob\",\n        target: context.live2dModel\n      });\n    } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n      zipBlob = source[0];\n      sourceURL = URL.createObjectURL(zipBlob);\n      settings = source.settings;\n    }\n    if (zipBlob) {\n      if (!zipBlob.size) {\n        throw new Error(\"Empty zip file\");\n      }\n      const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n      if (!settings) {\n        settings = yield _ZipLoader.createSettings(reader);\n      }\n      settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n      const files = yield _ZipLoader.unzip(reader, settings);\n      files.settings = settings;\n      context.source = files;\n      if (sourceURL.startsWith(\"blob:\")) {\n        context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n          internalModel.once(\"destroy\", function() {\n            URL.revokeObjectURL(sourceURL);\n          });\n        });\n      }\n      _ZipLoader.releaseReader(reader);\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n  if (!window.Live2D) {\n    throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n  }\n  const originalUpdateParam = Live2DMotion.prototype.updateParam;\n  Live2DMotion.prototype.updateParam = function(model, entry) {\n    originalUpdateParam.call(this, model, entry);\n    if (entry.isFinished() && this.onFinishHandler) {\n      this.onFinishHandler(this);\n      delete this.onFinishHandler;\n    }\n  };\n  class Live2DExpression extends AMotion {\n    constructor(json) {\n      super();\n      this.params = [];\n      this.setFadeIn(json.fade_in > 0 ? json.fade_in : exports2.config.expressionFadingDuration);\n      this.setFadeOut(json.fade_out > 0 ? json.fade_out : exports2.config.expressionFadingDuration);\n      if (Array.isArray(json.params)) {\n        json.params.forEach((param) => {\n          const calc = param.calc || \"add\";\n          if (calc === \"add\") {\n            const defaultValue = param.def || 0;\n            param.val -= defaultValue;\n          } else if (calc === \"mult\") {\n            const defaultValue = param.def || 1;\n            param.val /= defaultValue;\n          }\n          this.params.push({\n            calc,\n            val: param.val,\n            id: param.id\n          });\n        });\n      }\n    }\n    updateParamExe(model, time, weight, motionQueueEnt) {\n      this.params.forEach((param) => {\n        model.setParamFloat(param.id, param.val * weight);\n      });\n    }\n  }\n  class Cubism2ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new MotionQueueManager();\n      this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.file;\n    }\n    createExpression(data, definition) {\n      return new Live2DExpression(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion);\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, dt) {\n      return this.queueManager.updateParam(model);\n    }\n  }\n  class Cubism2MotionManager extends MotionManager {\n    constructor(settings, options) {\n      super(settings, options);\n      this.groups = { idle: \"idle\" };\n      this.motionDataType = \"arraybuffer\";\n      this.queueManager = new MotionQueueManager();\n      this.definitions = this.settings.motions;\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n      }\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    createMotion(data, group, definition) {\n      const motion = Live2DMotion.loadMotion(data);\n      const defaultFadingDuration = group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration;\n      motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n      motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.file;\n    }\n    getMotionName(definition) {\n      return definition.file;\n    }\n    getSoundFile(definition) {\n      return definition.sound;\n    }\n    _startMotion(motion, onFinish) {\n      motion.onFinishHandler = onFinish;\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion);\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.updateParam(model);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager = void 0;\n    }\n  }\n  class Live2DEyeBlink {\n    constructor(coreModel) {\n      this.coreModel = coreModel;\n      this.blinkInterval = 4e3;\n      this.closingDuration = 100;\n      this.closedDuration = 50;\n      this.openingDuration = 150;\n      this.eyeState = 0;\n      this.eyeParamValue = 1;\n      this.closedTimer = 0;\n      this.nextBlinkTimeLeft = this.blinkInterval;\n      this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n      this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n    }\n    setEyeParams(value) {\n      this.eyeParamValue = clamp(value, 0, 1);\n      this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n      this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n    }\n    update(dt) {\n      switch (this.eyeState) {\n        case 0:\n          this.nextBlinkTimeLeft -= dt;\n          if (this.nextBlinkTimeLeft < 0) {\n            this.eyeState = 1;\n            this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n          }\n          break;\n        case 1:\n          this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n          if (this.eyeParamValue <= 0) {\n            this.eyeState = 2;\n            this.closedTimer = 0;\n          }\n          break;\n        case 2:\n          this.closedTimer += dt;\n          if (this.closedTimer >= this.closedDuration) {\n            this.eyeState = 3;\n          }\n          break;\n        case 3:\n          this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n          if (this.eyeParamValue >= 1) {\n            this.eyeState = 0;\n          }\n      }\n    }\n  }\n  const tempMatrixArray = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  class Cubism2InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.textureFlipY = true;\n      this.drawDataCount = 0;\n      this.disableCulling = false;\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism2MotionManager(settings, options);\n      this.eyeBlink = new Live2DEyeBlink(coreModel);\n      this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n      this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n      this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n      this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n      this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n      this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n      this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n      this.init();\n    }\n    init() {\n      super.init();\n      if (this.settings.initParams) {\n        this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n      }\n      if (this.settings.initOpacities) {\n        this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n      }\n      this.coreModel.saveParam();\n      const arr = this.coreModel.getModelContext()._$aS;\n      if (arr == null ? void 0 : arr.length) {\n        this.drawDataCount = arr.length;\n      }\n      let culling = this.coreModel.drawParamWebGL.culling;\n      Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n        set: (v) => culling = v,\n        get: () => this.disableCulling ? false : culling\n      });\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      const originalSetupClip = clipManager.setupClip;\n      clipManager.setupClip = (modelContext, drawParam) => {\n        originalSetupClip.call(clipManager, modelContext, drawParam);\n        drawParam.gl.viewport(...this.viewport);\n      };\n    }\n    getSize() {\n      return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          let commonKey = key;\n          if (key === \"center_x\") {\n            commonKey = \"centerX\";\n          } else if (key === \"center_y\") {\n            commonKey = \"centerY\";\n          }\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    updateWebGLContext(gl, glContextID) {\n      const drawParamWebGL = this.coreModel.drawParamWebGL;\n      drawParamWebGL.firstDraw = true;\n      drawParamWebGL.setGL(gl);\n      drawParamWebGL.glno = glContextID;\n      for (const prop in drawParamWebGL) {\n        if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n          drawParamWebGL[prop] = null;\n        }\n      }\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      clipManager.curFrameNo = glContextID;\n      const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n      clipManager.getMaskRenderTexture();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    bindTexture(index, texture) {\n      this.coreModel.setTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a;\n      return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.id,\n        name: hitArea.name,\n        index: this.coreModel.getDrawDataIndex(hitArea.id)\n      }))) || [];\n    }\n    getDrawableIDs() {\n      const modelContext = this.coreModel.getModelContext();\n      const ids = [];\n      for (let i = 0; i < this.drawDataCount; i++) {\n        const drawData = modelContext.getDrawData(i);\n        if (drawData) {\n          ids.push(drawData.getDrawDataID().id);\n        }\n      }\n      return ids;\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawDataIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      return this.coreModel.getTransformedPoints(drawIndex).slice();\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParam();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt, now);\n      (_c = this.physics) == null ? void 0 : _c.update(now);\n      (_d = this.pose) == null ? void 0 : _d.update(dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParam();\n    }\n    updateFocus() {\n      this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n      this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n      this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      const t = now / 1e3 * 2 * Math.PI;\n      this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n      this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n    }\n    draw(gl) {\n      const disableCulling = this.disableCulling;\n      if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n        this.disableCulling = true;\n      }\n      const matrix = this.drawingMatrix;\n      tempMatrixArray[0] = matrix.a;\n      tempMatrixArray[1] = matrix.b;\n      tempMatrixArray[4] = matrix.c;\n      tempMatrixArray[5] = matrix.d;\n      tempMatrixArray[12] = matrix.tx;\n      tempMatrixArray[13] = matrix.ty;\n      this.coreModel.setMatrix(tempMatrixArray);\n      this.coreModel.draw();\n      this.disableCulling = disableCulling;\n    }\n    destroy() {\n      super.destroy();\n      this.coreModel = void 0;\n    }\n  }\n  class Cubism2ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      this.motions = {};\n      if (!Cubism2ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      this.moc = json.model;\n      copyArray(\"string\", json, this, \"textures\", \"textures\");\n      this.copy(json);\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every((item) => typeof item === \"string\");\n    }\n    copy(json) {\n      copyProperty(\"string\", json, this, \"name\", \"name\");\n      copyProperty(\"string\", json, this, \"pose\", \"pose\");\n      copyProperty(\"string\", json, this, \"physics\", \"physics\");\n      copyProperty(\"object\", json, this, \"layout\", \"layout\");\n      copyProperty(\"object\", json, this, \"motions\", \"motions\");\n      copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n      copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n      copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n      copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n          if (motions[i].sound !== void 0) {\n            motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n        }\n      }\n    }\n  }\n  const SRC_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  const TARGET_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  class Live2DPhysics {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.physicsHairs = [];\n      if (json.physics_hair) {\n        this.physicsHairs = json.physics_hair.map((definition) => {\n          const physicsHair = new PhysicsHair();\n          physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n          definition.src.forEach(({ id, ptype, scale, weight }) => {\n            const type = SRC_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addSrcParam(type, id, scale, weight);\n            }\n          });\n          definition.targets.forEach(({ id, ptype, scale, weight }) => {\n            const type = TARGET_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addTargetParam(type, id, scale, weight);\n            }\n          });\n          return physicsHair;\n        });\n      }\n    }\n    update(elapsed) {\n      this.physicsHairs.forEach((physicsHair) => physicsHair.update(this.coreModel, elapsed));\n    }\n  }\n  class Live2DPartsParam {\n    constructor(id) {\n      this.id = id;\n      this.paramIndex = -1;\n      this.partsIndex = -1;\n      this.link = [];\n    }\n    initIndex(model) {\n      this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n      this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n      model.setParamFloat(this.paramIndex, 1);\n    }\n  }\n  class Live2DPose {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.opacityAnimDuration = 500;\n      this.partsGroups = [];\n      if (json.parts_visible) {\n        this.partsGroups = json.parts_visible.map(({ group }) => group.map(({ id, link }) => {\n          const parts = new Live2DPartsParam(id);\n          if (link) {\n            parts.link = link.map((l) => new Live2DPartsParam(l));\n          }\n          return parts;\n        }));\n        this.init();\n      }\n    }\n    init() {\n      this.partsGroups.forEach((group) => {\n        group.forEach((parts) => {\n          parts.initIndex(this.coreModel);\n          if (parts.paramIndex >= 0) {\n            const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n            this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n            this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n            if (parts.link.length > 0) {\n              parts.link.forEach((p) => p.initIndex(this.coreModel));\n            }\n          }\n        });\n      });\n    }\n    normalizePartsOpacityGroup(partsGroup, dt) {\n      const model = this.coreModel;\n      const phi = 0.5;\n      const maxBackOpacity = 0.15;\n      let visibleOpacity = 1;\n      let visibleIndex = partsGroup.findIndex(({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n      if (visibleIndex >= 0) {\n        const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n        visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n      } else {\n        visibleIndex = 0;\n        visibleOpacity = 1;\n      }\n      partsGroup.forEach(({ partsIndex }, index) => {\n        if (partsIndex >= 0) {\n          if (visibleIndex == index) {\n            model.setPartsOpacity(partsIndex, visibleOpacity);\n          } else {\n            let opacity = model.getPartsOpacity(partsIndex);\n            let a1;\n            if (visibleOpacity < phi) {\n              a1 = visibleOpacity * (phi - 1) / phi + 1;\n            } else {\n              a1 = (1 - visibleOpacity) * phi / (1 - phi);\n            }\n            let backOp = (1 - a1) * (1 - visibleOpacity);\n            if (backOp > maxBackOpacity) {\n              a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n            }\n            if (opacity > a1) {\n              opacity = a1;\n            }\n            model.setPartsOpacity(partsIndex, opacity);\n          }\n        }\n      });\n    }\n    copyOpacity(partsGroup) {\n      const model = this.coreModel;\n      partsGroup.forEach(({ partsIndex, link }) => {\n        if (partsIndex >= 0 && link) {\n          const opacity = model.getPartsOpacity(partsIndex);\n          link.forEach(({ partsIndex: partsIndex2 }) => {\n            if (partsIndex2 >= 0) {\n              model.setPartsOpacity(partsIndex2, opacity);\n            }\n          });\n        }\n      });\n    }\n    update(dt) {\n      this.partsGroups.forEach((partGroup) => {\n        this.normalizePartsOpacityGroup(partGroup, dt);\n        this.copyOpacity(partGroup);\n      });\n    }\n  }\n  Live2DFactory.registerRuntime({\n    version: 2,\n    test(source) {\n      return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n    },\n    ready() {\n      return Promise.resolve();\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 3) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 3);\n      return String.fromCharCode(...view) === \"moc\";\n    },\n    createModelSettings(json) {\n      return new Cubism2ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const model = Live2DModelWebGL.loadModel(data);\n      const error = Live2D.getError();\n      if (error)\n        throw error;\n      return model;\n    },\n    createInternalModel(coreModel, settings, options) {\n      return new Cubism2InternalModel(coreModel, settings, options);\n    },\n    createPose(coreModel, data) {\n      return new Live2DPose(coreModel, data);\n    },\n    createPhysics(coreModel, data) {\n      return new Live2DPhysics(coreModel, data);\n    }\n  });\n  if (!window.Live2DCubismCore) {\n    throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n  }\n  class CubismVector2 {\n    constructor(x, y) {\n      this.x = x || 0;\n      this.y = y || 0;\n    }\n    add(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x + vector2.x;\n      ret.y = this.y + vector2.y;\n      return ret;\n    }\n    substract(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x - vector2.x;\n      ret.y = this.y - vector2.y;\n      return ret;\n    }\n    multiply(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x * vector2.x;\n      ret.y = this.y * vector2.y;\n      return ret;\n    }\n    multiplyByScaler(scalar) {\n      return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    division(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x / vector2.x;\n      ret.y = this.y / vector2.y;\n      return ret;\n    }\n    divisionByScalar(scalar) {\n      return this.division(new CubismVector2(scalar, scalar));\n    }\n    getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    getDistanceWith(a) {\n      return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    dot(a) {\n      return this.x * a.x + this.y * a.y;\n    }\n    normalize() {\n      const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n      this.x = this.x / length;\n      this.y = this.y / length;\n    }\n    isEqual(rhs) {\n      return this.x == rhs.x && this.y == rhs.y;\n    }\n    isNotEqual(rhs) {\n      return !this.isEqual(rhs);\n    }\n  }\n  const _CubismMath = class {\n    static range(value, min, max) {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n    static sin(x) {\n      return Math.sin(x);\n    }\n    static cos(x) {\n      return Math.cos(x);\n    }\n    static abs(x) {\n      return Math.abs(x);\n    }\n    static sqrt(x) {\n      return Math.sqrt(x);\n    }\n    static cbrt(x) {\n      if (x === 0) {\n        return x;\n      }\n      let cx = x;\n      const isNegativeNumber = cx < 0;\n      if (isNegativeNumber) {\n        cx = -cx;\n      }\n      let ret;\n      if (cx === Infinity) {\n        ret = Infinity;\n      } else {\n        ret = Math.exp(Math.log(cx) / 3);\n        ret = (cx / (ret * ret) + 2 * ret) / 3;\n      }\n      return isNegativeNumber ? -ret : ret;\n    }\n    static getEasingSine(value) {\n      if (value < 0) {\n        return 0;\n      } else if (value > 1) {\n        return 1;\n      }\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    static max(left, right) {\n      return left > right ? left : right;\n    }\n    static min(left, right) {\n      return left > right ? right : left;\n    }\n    static degreesToRadian(degrees) {\n      return degrees / 180 * Math.PI;\n    }\n    static radianToDegrees(radian) {\n      return radian * 180 / Math.PI;\n    }\n    static directionToRadian(from, to) {\n      const q1 = Math.atan2(to.y, to.x);\n      const q2 = Math.atan2(from.y, from.x);\n      let ret = q1 - q2;\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2;\n      }\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2;\n      }\n      return ret;\n    }\n    static directionToDegrees(from, to) {\n      const radian = this.directionToRadian(from, to);\n      let degree = this.radianToDegrees(radian);\n      if (to.x - from.x > 0) {\n        degree = -degree;\n      }\n      return degree;\n    }\n    static radianToDirection(totalAngle) {\n      const ret = new CubismVector2();\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n      return ret;\n    }\n    static quadraticEquation(a, b, c) {\n      if (this.abs(a) < _CubismMath.Epsilon) {\n        if (this.abs(b) < _CubismMath.Epsilon) {\n          return -c;\n        }\n        return -c / b;\n      }\n      return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n    }\n    static cardanoAlgorithmForBezier(a, b, c, d) {\n      if (this.sqrt(a) < _CubismMath.Epsilon) {\n        return this.range(this.quadraticEquation(b, c, d), 0, 1);\n      }\n      const ba = b / a;\n      const ca = c / a;\n      const da = d / a;\n      const p = (3 * ca - ba * ba) / 3;\n      const p3 = p / 3;\n      const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n      const q2 = q / 2;\n      const discriminant = q2 * q2 + p3 * p3 * p3;\n      const center = 0.5;\n      const threshold = center + 0.01;\n      if (discriminant < 0) {\n        const mp3 = -p / 3;\n        const mp33 = mp3 * mp3 * mp3;\n        const r = this.sqrt(mp33);\n        const t = -q / (2 * r);\n        const cosphi = this.range(t, -1, 1);\n        const phi = Math.acos(cosphi);\n        const crtr = this.cbrt(r);\n        const t1 = 2 * crtr;\n        const root12 = t1 * this.cos(phi / 3) - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n        if (this.abs(root2 - center) < threshold) {\n          return this.range(root2, 0, 1);\n        }\n        const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n        return this.range(root3, 0, 1);\n      }\n      if (discriminant == 0) {\n        let u12;\n        if (q2 < 0) {\n          u12 = this.cbrt(-q2);\n        } else {\n          u12 = -this.cbrt(q2);\n        }\n        const root12 = 2 * u12 - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = -u12 - ba / 3;\n        return this.range(root2, 0, 1);\n      }\n      const sd = this.sqrt(discriminant);\n      const u1 = this.cbrt(sd - q2);\n      const v1 = this.cbrt(sd + q2);\n      const root1 = u1 - v1 - ba / 3;\n      return this.range(root1, 0, 1);\n    }\n    constructor() {\n    }\n  };\n  let CubismMath = _CubismMath;\n  CubismMath.Epsilon = 1e-5;\n  class CubismMatrix44 {\n    constructor() {\n      this._tr = new Float32Array(16);\n      this.loadIdentity();\n    }\n    static multiply(a, b, dst) {\n      const c = new Float32Array([\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ]);\n      const n = 4;\n      for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < n; ++j) {\n          for (let k = 0; k < n; ++k) {\n            c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n          }\n        }\n      }\n      for (let i = 0; i < 16; ++i) {\n        dst[i] = c[i];\n      }\n    }\n    loadIdentity() {\n      const c = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      this.setMatrix(c);\n    }\n    setMatrix(tr) {\n      for (let i = 0; i < 16; ++i) {\n        this._tr[i] = tr[i];\n      }\n    }\n    getArray() {\n      return this._tr;\n    }\n    getScaleX() {\n      return this._tr[0];\n    }\n    getScaleY() {\n      return this._tr[5];\n    }\n    getTranslateX() {\n      return this._tr[12];\n    }\n    getTranslateY() {\n      return this._tr[13];\n    }\n    transformX(src) {\n      return this._tr[0] * src + this._tr[12];\n    }\n    transformY(src) {\n      return this._tr[5] * src + this._tr[13];\n    }\n    invertTransformX(src) {\n      return (src - this._tr[12]) / this._tr[0];\n    }\n    invertTransformY(src) {\n      return (src - this._tr[13]) / this._tr[5];\n    }\n    translateRelative(x, y) {\n      const tr1 = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        x,\n        y,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    translate(x, y) {\n      this._tr[12] = x;\n      this._tr[13] = y;\n    }\n    translateX(x) {\n      this._tr[12] = x;\n    }\n    translateY(y) {\n      this._tr[13] = y;\n    }\n    scaleRelative(x, y) {\n      const tr1 = new Float32Array([\n        x,\n        0,\n        0,\n        0,\n        0,\n        y,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    scale(x, y) {\n      this._tr[0] = x;\n      this._tr[5] = y;\n    }\n    multiplyByMatrix(m) {\n      CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    clone() {\n      const cloneMatrix = new CubismMatrix44();\n      for (let i = 0; i < this._tr.length; i++) {\n        cloneMatrix._tr[i] = this._tr[i];\n      }\n      return cloneMatrix;\n    }\n  }\n  class CubismRenderer {\n    initialize(model) {\n      this._model = model;\n    }\n    drawModel() {\n      if (this.getModel() == null)\n        return;\n      this.doDrawModel();\n    }\n    setMvpMatrix(matrix44) {\n      this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    getMvpMatrix() {\n      return this._mvpMatrix4x4;\n    }\n    setModelColor(red, green, blue, alpha) {\n      if (red < 0) {\n        red = 0;\n      } else if (red > 1) {\n        red = 1;\n      }\n      if (green < 0) {\n        green = 0;\n      } else if (green > 1) {\n        green = 1;\n      }\n      if (blue < 0) {\n        blue = 0;\n      } else if (blue > 1) {\n        blue = 1;\n      }\n      if (alpha < 0) {\n        alpha = 0;\n      } else if (alpha > 1) {\n        alpha = 1;\n      }\n      this._modelColor.R = red;\n      this._modelColor.G = green;\n      this._modelColor.B = blue;\n      this._modelColor.A = alpha;\n    }\n    getModelColor() {\n      return Object.assign({}, this._modelColor);\n    }\n    setIsPremultipliedAlpha(enable) {\n      this._isPremultipliedAlpha = enable;\n    }\n    isPremultipliedAlpha() {\n      return this._isPremultipliedAlpha;\n    }\n    setIsCulling(culling) {\n      this._isCulling = culling;\n    }\n    isCulling() {\n      return this._isCulling;\n    }\n    setAnisotropy(n) {\n      this._anisortopy = n;\n    }\n    getAnisotropy() {\n      return this._anisortopy;\n    }\n    getModel() {\n      return this._model;\n    }\n    constructor() {\n      this._isCulling = false;\n      this._isPremultipliedAlpha = false;\n      this._anisortopy = 0;\n      this._modelColor = new CubismTextureColor();\n      this._mvpMatrix4x4 = new CubismMatrix44();\n      this._mvpMatrix4x4.loadIdentity();\n    }\n  }\n  var CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n    return CubismBlendMode2;\n  })(CubismBlendMode || {});\n  class CubismTextureColor {\n    constructor() {\n      this.R = 1;\n      this.G = 1;\n      this.B = 1;\n      this.A = 1;\n    }\n  }\n  let s_isStarted = false;\n  let s_isInitialized = false;\n  let s_option = void 0;\n  const Constant = {\n    vertexOffset: 0,\n    vertexStep: 2\n  };\n  class CubismFramework {\n    static startUp(option) {\n      if (s_isStarted) {\n        CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n        return s_isStarted;\n      }\n      if (Live2DCubismCore._isStarted) {\n        s_isStarted = true;\n        return true;\n      }\n      Live2DCubismCore._isStarted = true;\n      s_option = option;\n      if (s_option) {\n        Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n      }\n      s_isStarted = true;\n      if (s_isStarted) {\n        const version = Live2DCubismCore.Version.csmGetVersion();\n        const major = (version & 4278190080) >> 24;\n        const minor = (version & 16711680) >> 16;\n        const patch = version & 65535;\n        const versionNumber = version;\n        CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n      }\n      CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n      return s_isStarted;\n    }\n    static cleanUp() {\n      s_isStarted = false;\n      s_isInitialized = false;\n      s_option = void 0;\n    }\n    static initialize() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n        return;\n      }\n      s_isInitialized = true;\n      CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n    }\n    static dispose() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (!s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n        return;\n      }\n      CubismRenderer.staticRelease();\n      s_isInitialized = false;\n      CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n    }\n    static isStarted() {\n      return s_isStarted;\n    }\n    static isInitialized() {\n      return s_isInitialized;\n    }\n    static coreLogFunction(message) {\n      if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n        return;\n      }\n      Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    static getLoggingLevel() {\n      if (s_option != null) {\n        return s_option.loggingLevel;\n      }\n      return LogLevel.LogLevel_Off;\n    }\n    constructor() {\n    }\n  }\n  var LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n    LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n    return LogLevel2;\n  })(LogLevel || {});\n  const CSM_ASSERT = () => {\n  };\n  function CubismLogDebug(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogInfo(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogWarning(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogError(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n  }\n  class CubismDebug {\n    static print(logLevel, format, args) {\n      if (logLevel < CubismFramework.getLoggingLevel()) {\n        return;\n      }\n      const logPrint = CubismFramework.coreLogFunction;\n      if (!logPrint)\n        return;\n      const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n        return args[k];\n      });\n      logPrint(buffer);\n    }\n    static dumpBytes(logLevel, data, length) {\n      for (let i = 0; i < length; i++) {\n        if (i % 16 == 0 && i > 0)\n          this.print(logLevel, \"\\n\");\n        else if (i % 8 == 0 && i > 0)\n          this.print(logLevel, \"  \");\n        this.print(logLevel, \"{0} \", [data[i] & 255]);\n      }\n      this.print(logLevel, \"\\n\");\n    }\n    constructor() {\n    }\n  }\n  class ACubismMotion {\n    constructor() {\n      this._fadeInSeconds = -1;\n      this._fadeOutSeconds = -1;\n      this._weight = 1;\n      this._offsetSeconds = 0;\n      this._firedEventValues = [];\n    }\n    release() {\n      this._weight = 0;\n    }\n    updateParameters(model, motionQueueEntry, userTimeSeconds) {\n      if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n        return;\n      }\n      if (!motionQueueEntry.isStarted()) {\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        const duration = this.getDuration();\n        if (motionQueueEntry.getEndTime() < 0) {\n          motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n        }\n      }\n      let fadeWeight = this._weight;\n      const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      fadeWeight = fadeWeight * fadeIn * fadeOut;\n      motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n      this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n      if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    setFadeInTime(fadeInSeconds) {\n      this._fadeInSeconds = fadeInSeconds;\n    }\n    setFadeOutTime(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n    }\n    getFadeOutTime() {\n      return this._fadeOutSeconds;\n    }\n    getFadeInTime() {\n      return this._fadeInSeconds;\n    }\n    setWeight(weight) {\n      this._weight = weight;\n    }\n    getWeight() {\n      return this._weight;\n    }\n    getDuration() {\n      return -1;\n    }\n    getLoopDuration() {\n      return -1;\n    }\n    setOffsetTime(offsetSeconds) {\n      this._offsetSeconds = offsetSeconds;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      return this._firedEventValues;\n    }\n    setFinishedMotionHandler(onFinishedMotionHandler) {\n      this._onFinishedMotion = onFinishedMotionHandler;\n    }\n    getFinishedMotionHandler() {\n      return this._onFinishedMotion;\n    }\n  }\n  const DefaultFadeTime = 1;\n  class CubismExpressionMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._parameters = [];\n    }\n    static create(json) {\n      const expression = new CubismExpressionMotion();\n      const fadeInTime = json.FadeInTime;\n      const fadeOutTime = json.FadeOutTime;\n      expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n      expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n      const parameters = json.Parameters || [];\n      for (let i = 0; i < parameters.length; ++i) {\n        const param = parameters[i];\n        const parameterId = param.Id;\n        const value = param.Value;\n        let blendType;\n        switch (param.Blend) {\n          case \"Multiply\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n            break;\n          case \"Overwrite\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n            break;\n          case \"Add\":\n          default:\n            blendType = ExpressionBlendType.ExpressionBlendType_Add;\n            break;\n        }\n        const item = {\n          parameterId,\n          blendType,\n          value\n        };\n        expression._parameters.push(item);\n      }\n      return expression;\n    }\n    doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n      for (let i = 0; i < this._parameters.length; ++i) {\n        const parameter = this._parameters[i];\n        switch (parameter.blendType) {\n          case ExpressionBlendType.ExpressionBlendType_Add: {\n            model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Multiply: {\n            model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n            model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        }\n      }\n    }\n  }\n  var ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n    return ExpressionBlendType2;\n  })(ExpressionBlendType || {});\n  class CubismMotionQueueEntry {\n    constructor() {\n      this._autoDelete = false;\n      this._available = true;\n      this._finished = false;\n      this._started = false;\n      this._startTimeSeconds = -1;\n      this._fadeInStartTimeSeconds = 0;\n      this._endTimeSeconds = -1;\n      this._stateTimeSeconds = 0;\n      this._stateWeight = 0;\n      this._lastEventCheckSeconds = 0;\n      this._motionQueueEntryHandle = this;\n      this._fadeOutSeconds = 0;\n      this._isTriggeredFadeOut = false;\n    }\n    release() {\n      if (this._autoDelete && this._motion) {\n        this._motion.release();\n      }\n    }\n    setFadeOut(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n    }\n    startFadeOut(fadeOutSeconds, userTimeSeconds) {\n      const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n      if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n        this._endTimeSeconds = newEndTimeSeconds;\n      }\n    }\n    isFinished() {\n      return this._finished;\n    }\n    isStarted() {\n      return this._started;\n    }\n    getStartTime() {\n      return this._startTimeSeconds;\n    }\n    getFadeInStartTime() {\n      return this._fadeInStartTimeSeconds;\n    }\n    getEndTime() {\n      return this._endTimeSeconds;\n    }\n    setStartTime(startTime) {\n      this._startTimeSeconds = startTime;\n    }\n    setFadeInStartTime(startTime) {\n      this._fadeInStartTimeSeconds = startTime;\n    }\n    setEndTime(endTime) {\n      this._endTimeSeconds = endTime;\n    }\n    setIsFinished(f) {\n      this._finished = f;\n    }\n    setIsStarted(f) {\n      this._started = f;\n    }\n    isAvailable() {\n      return this._available;\n    }\n    setIsAvailable(v) {\n      this._available = v;\n    }\n    setState(timeSeconds, weight) {\n      this._stateTimeSeconds = timeSeconds;\n      this._stateWeight = weight;\n    }\n    getStateTime() {\n      return this._stateTimeSeconds;\n    }\n    getStateWeight() {\n      return this._stateWeight;\n    }\n    getLastCheckEventSeconds() {\n      return this._lastEventCheckSeconds;\n    }\n    setLastCheckEventSeconds(checkSeconds) {\n      this._lastEventCheckSeconds = checkSeconds;\n    }\n    isTriggeredFadeOut() {\n      return this._isTriggeredFadeOut;\n    }\n    getFadeOutSeconds() {\n      return this._fadeOutSeconds;\n    }\n  }\n  class CubismMotionQueueManager {\n    constructor() {\n      this._userTimeSeconds = 0;\n      this._eventCustomData = null;\n      this._motions = [];\n    }\n    release() {\n      for (let i = 0; i < this._motions.length; ++i) {\n        if (this._motions[i]) {\n          this._motions[i].release();\n        }\n      }\n      this._motions = void 0;\n    }\n    startMotion(motion, autoDelete, userTimeSeconds) {\n      if (motion == null) {\n        return InvalidMotionQueueEntryHandleValue;\n      }\n      let motionQueueEntry;\n      for (let i = 0; i < this._motions.length; ++i) {\n        motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n      }\n      motionQueueEntry = new CubismMotionQueueEntry();\n      motionQueueEntry._autoDelete = autoDelete;\n      motionQueueEntry._motion = motion;\n      this._motions.push(motionQueueEntry);\n      return motionQueueEntry._motionQueueEntryHandle;\n    }\n    isFinished() {\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        if (!motionQueueEntry.isFinished()) {\n          return false;\n        }\n        i++;\n      }\n      return true;\n    }\n    isFinishedByHandle(motionQueueEntryNumber) {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    stopAllMotions() {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry != null) {\n          motionQueueEntry.release();\n        }\n      }\n      this._motions = [];\n    }\n    getCubismMotionQueueEntry(motionQueueEntryNumber) {\n      return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n    }\n    setEventCallback(callback, customData = null) {\n      this._eventCallBack = callback;\n      this._eventCustomData = customData;\n    }\n    doUpdateMotion(model, userTimeSeconds) {\n      let updated = false;\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n        updated = true;\n        const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n        for (let i2 = 0; i2 < firedList.length; ++i2) {\n          this._eventCallBack(this, firedList[i2], this._eventCustomData);\n        }\n        motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n        if (motionQueueEntry.isFinished()) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n        } else {\n          if (motionQueueEntry.isTriggeredFadeOut()) {\n            motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n          }\n          i++;\n        }\n      }\n      return updated;\n    }\n  }\n  const InvalidMotionQueueEntryHandleValue = -1;\n  class Cubism4ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.Name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.File;\n    }\n    createExpression(data, definition) {\n      return CubismExpressionMotion.create(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n  }\n  class CubismModelSettingsJson {\n    constructor(json) {\n      this.groups = json.Groups;\n      this.hitAreas = json.HitAreas;\n      this.layout = json.Layout;\n      this.moc = json.FileReferences.Moc;\n      this.expressions = json.FileReferences.Expressions;\n      this.motions = json.FileReferences.Motions;\n      this.textures = json.FileReferences.Textures;\n      this.physics = json.FileReferences.Physics;\n      this.pose = json.FileReferences.Pose;\n    }\n    getEyeBlinkParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n    }\n    getLipSyncParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n    }\n  }\n  class Cubism4ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      if (!Cubism4ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      Object.assign(this, new CubismModelSettingsJson(json));\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      if (this.motions) {\n        for (const [group, motions] of Object.entries(this.motions)) {\n          for (let i = 0; i < motions.length; i++) {\n            motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n            if (motions[i].Sound !== void 0) {\n              motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n            }\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n        }\n      }\n    }\n  }\n  applyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\n  var CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n    return CubismMotionCurveTarget2;\n  })(CubismMotionCurveTarget || {});\n  var CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n    return CubismMotionSegmentType2;\n  })(CubismMotionSegmentType || {});\n  class CubismMotionPoint {\n    constructor(time = 0, value = 0) {\n      this.time = time;\n      this.value = value;\n    }\n  }\n  class CubismMotionSegment {\n    constructor() {\n      this.basePointIndex = 0;\n      this.segmentType = 0;\n    }\n  }\n  class CubismMotionCurve {\n    constructor() {\n      this.id = \"\";\n      this.type = 0;\n      this.segmentCount = 0;\n      this.baseSegmentIndex = 0;\n      this.fadeInTime = 0;\n      this.fadeOutTime = 0;\n    }\n  }\n  class CubismMotionEvent {\n    constructor() {\n      this.fireTime = 0;\n      this.value = \"\";\n    }\n  }\n  class CubismMotionData {\n    constructor() {\n      this.duration = 0;\n      this.loop = false;\n      this.curveCount = 0;\n      this.eventCount = 0;\n      this.fps = 0;\n      this.curves = [];\n      this.segments = [];\n      this.points = [];\n      this.events = [];\n    }\n  }\n  class CubismMotionJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getMotionDuration() {\n      return this._json.Meta.Duration;\n    }\n    isMotionLoop() {\n      return this._json.Meta.Loop || false;\n    }\n    getEvaluationOptionFlag(flagType) {\n      if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n        return !!this._json.Meta.AreBeziersRestricted;\n      }\n      return false;\n    }\n    getMotionCurveCount() {\n      return this._json.Meta.CurveCount;\n    }\n    getMotionFps() {\n      return this._json.Meta.Fps;\n    }\n    getMotionTotalSegmentCount() {\n      return this._json.Meta.TotalSegmentCount;\n    }\n    getMotionTotalPointCount() {\n      return this._json.Meta.TotalPointCount;\n    }\n    getMotionFadeInTime() {\n      return this._json.Meta.FadeInTime;\n    }\n    getMotionFadeOutTime() {\n      return this._json.Meta.FadeOutTime;\n    }\n    getMotionCurveTarget(curveIndex) {\n      return this._json.Curves[curveIndex].Target;\n    }\n    getMotionCurveId(curveIndex) {\n      return this._json.Curves[curveIndex].Id;\n    }\n    getMotionCurveFadeInTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeInTime;\n    }\n    getMotionCurveFadeOutTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeOutTime;\n    }\n    getMotionCurveSegmentCount(curveIndex) {\n      return this._json.Curves[curveIndex].Segments.length;\n    }\n    getMotionCurveSegment(curveIndex, segmentIndex) {\n      return this._json.Curves[curveIndex].Segments[segmentIndex];\n    }\n    getEventCount() {\n      return this._json.Meta.UserDataCount || 0;\n    }\n    getTotalEventValueSize() {\n      return this._json.Meta.TotalUserDataSize;\n    }\n    getEventTime(userDataIndex) {\n      return this._json.UserData[userDataIndex].Time;\n    }\n    getEventValue(userDataIndex) {\n      return this._json.UserData[userDataIndex].Value;\n    }\n  }\n  var EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n    EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n    return EvaluationOptionFlag2;\n  })(EvaluationOptionFlag || {});\n  const EffectNameEyeBlink = \"EyeBlink\";\n  const EffectNameLipSync = \"LipSync\";\n  const TargetNameModel = \"Model\";\n  const TargetNameParameter = \"Parameter\";\n  const TargetNamePartOpacity = \"PartOpacity\";\n  const UseOldBeziersCurveMotion = false;\n  function lerpPoints(a, b, t) {\n    const result = new CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n  }\n  function linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n  }\n  function bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n    const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n    const c = 3 * cx1 - 3 * x1;\n    const d = x1 - x;\n    const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function steppedEvaluate(points, time) {\n    return points[0].value;\n  }\n  function inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n  }\n  function evaluateCurve(motionData, index, time) {\n    const curve = motionData.curves[index];\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n      pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n      if (motionData.points[pointPosition].time > time) {\n        target = i;\n        break;\n      }\n    }\n    if (target == -1) {\n      return motionData.points[pointPosition].value;\n    }\n    const segment = motionData.segments[target];\n    return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n  }\n  class CubismMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._eyeBlinkParameterIds = [];\n      this._lipSyncParameterIds = [];\n      this._sourceFrameRate = 30;\n      this._loopDurationSeconds = -1;\n      this._isLoop = false;\n      this._isLoopFadeIn = true;\n      this._lastWeight = 0;\n    }\n    static create(json, onFinishedMotionHandler) {\n      const ret = new CubismMotion();\n      ret.parse(json);\n      ret._sourceFrameRate = ret._motionData.fps;\n      ret._loopDurationSeconds = ret._motionData.duration;\n      ret._onFinishedMotion = onFinishedMotionHandler;\n      return ret;\n    }\n    doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n      if (this._modelCurveIdEyeBlink == null) {\n        this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n      }\n      if (this._modelCurveIdLipSync == null) {\n        this._modelCurveIdLipSync = EffectNameLipSync;\n      }\n      let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n      if (timeOffsetSeconds < 0) {\n        timeOffsetSeconds = 0;\n      }\n      let lipSyncValue = Number.MAX_VALUE;\n      let eyeBlinkValue = Number.MAX_VALUE;\n      const MaxTargetSize = 64;\n      let lipSyncFlags = 0;\n      let eyeBlinkFlags = 0;\n      if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n      }\n      if (this._lipSyncParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n      }\n      const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      let value;\n      let c, parameterIndex;\n      let time = timeOffsetSeconds;\n      if (this._isLoop) {\n        while (time > this._motionData.duration) {\n          time -= this._motionData.duration;\n        }\n      }\n      const curves = this._motionData.curves;\n      for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (curves[c].id == this._modelCurveIdEyeBlink) {\n          eyeBlinkValue = value;\n        } else if (curves[c].id == this._modelCurveIdLipSync) {\n          lipSyncValue = value;\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        const sourceValue = model.getParameterValueByIndex(parameterIndex);\n        value = evaluateCurve(this._motionData, c, time);\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n              value *= eyeBlinkValue;\n              eyeBlinkFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._lipSyncParameterIds[i] == curves[c].id) {\n              value += lipSyncValue;\n              lipSyncFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        let v;\n        if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n          v = sourceValue + (value - sourceValue) * fadeWeight;\n        } else {\n          let fin;\n          let fout;\n          if (curves[c].fadeInTime < 0) {\n            fin = tmpFadeIn;\n          } else {\n            fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n          }\n          if (curves[c].fadeOutTime < 0) {\n            fout = tmpFadeOut;\n          } else {\n            fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n          }\n          const paramWeight = this._weight * fin * fout;\n          v = sourceValue + (value - sourceValue) * paramWeight;\n        }\n        model.setParameterValueByIndex(parameterIndex, v, 1);\n      }\n      {\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n            if (eyeBlinkFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n            if (lipSyncFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._lipSyncParameterIds[i], v);\n          }\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (CubismConfig.setOpacityFromMotion) {\n          model.setPartOpacityById(curves[c].id, value);\n        } else {\n          parameterIndex = model.getParameterIndex(curves[c].id);\n          if (parameterIndex == -1) {\n            continue;\n          }\n          model.setParameterValueByIndex(parameterIndex, value);\n        }\n      }\n      if (timeOffsetSeconds >= this._motionData.duration) {\n        if (this._isLoop) {\n          motionQueueEntry.setStartTime(userTimeSeconds);\n          if (this._isLoopFadeIn) {\n            motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n          }\n        } else {\n          if (this._onFinishedMotion) {\n            this._onFinishedMotion(this);\n          }\n          motionQueueEntry.setIsFinished(true);\n        }\n      }\n      this._lastWeight = fadeWeight;\n    }\n    setIsLoop(loop) {\n      this._isLoop = loop;\n    }\n    isLoop() {\n      return this._isLoop;\n    }\n    setIsLoopFadeIn(loopFadeIn) {\n      this._isLoopFadeIn = loopFadeIn;\n    }\n    isLoopFadeIn() {\n      return this._isLoopFadeIn;\n    }\n    getDuration() {\n      return this._isLoop ? -1 : this._loopDurationSeconds;\n    }\n    getLoopDuration() {\n      return this._loopDurationSeconds;\n    }\n    setParameterFadeInTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeInTime = value;\n          return;\n        }\n      }\n    }\n    setParameterFadeOutTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeOutTime = value;\n          return;\n        }\n      }\n    }\n    getParameterFadeInTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeInTime;\n        }\n      }\n      return -1;\n    }\n    getParameterFadeOutTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeOutTime;\n        }\n      }\n      return -1;\n    }\n    setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n      this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n      this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    release() {\n      this._motionData = void 0;\n    }\n    parse(motionJson) {\n      this._motionData = new CubismMotionData();\n      let json = new CubismMotionJson(motionJson);\n      this._motionData.duration = json.getMotionDuration();\n      this._motionData.loop = json.isMotionLoop();\n      this._motionData.curveCount = json.getMotionCurveCount();\n      this._motionData.fps = json.getMotionFps();\n      this._motionData.eventCount = json.getEventCount();\n      const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n      const fadeInSeconds = json.getMotionFadeInTime();\n      const fadeOutSeconds = json.getMotionFadeOutTime();\n      if (fadeInSeconds !== void 0) {\n        this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n      } else {\n        this._fadeInSeconds = 1;\n      }\n      if (fadeOutSeconds !== void 0) {\n        this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n      } else {\n        this._fadeOutSeconds = 1;\n      }\n      this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n      this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n      this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n      this._motionData.points = [];\n      let totalPointCount = 0;\n      let totalSegmentCount = 0;\n      for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n        const curve = this._motionData.curves[curveCount];\n        switch (json.getMotionCurveTarget(curveCount)) {\n          case TargetNameModel:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            break;\n          case TargetNameParameter:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            break;\n          case TargetNamePartOpacity:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            break;\n          default:\n            CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n        }\n        curve.id = json.getMotionCurveId(curveCount);\n        curve.baseSegmentIndex = totalSegmentCount;\n        const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n        const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n        curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n        curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n        for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n          if (segmentPosition == 0) {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n            totalPointCount += 1;\n            segmentPosition += 2;\n          } else {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n          }\n          const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n          switch (segment) {\n            case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n              } else {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n              }\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n              this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n              totalPointCount += 3;\n              segmentPosition += 7;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          }\n          ++curve.segmentCount;\n          ++totalSegmentCount;\n        }\n        this._motionData.curves.push(curve);\n      }\n      for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n        this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n        this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n      }\n      json.release();\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      this._firedEventValues.length = 0;\n      for (let u = 0; u < this._motionData.eventCount; ++u) {\n        if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n          this._firedEventValues.push(this._motionData.events[u].value);\n        }\n      }\n      return this._firedEventValues;\n    }\n  }\n  class Cubism4MotionManager extends MotionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.groups = { idle: \"Idle\" };\n      this.motionDataType = \"json\";\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.motions) != null ? _a : {};\n      this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n      this.lipSyncIds = settings.getLipSyncParameters() || [];\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n      }\n      this.queueManager.setEventCallback((caller, eventValue, customData) => {\n        this.emit(\"motion:\" + eventValue);\n      });\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    _startMotion(motion, onFinish) {\n      motion.setFinishedMotionHandler(onFinish);\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    createMotion(data, group, definition) {\n      const motion = CubismMotion.create(data);\n      const json = new CubismMotionJson(data);\n      const defaultFadingDuration = (group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration) / 1e3;\n      if (json.getMotionFadeInTime() === void 0) {\n        motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n      }\n      if (json.getMotionFadeOutTime() === void 0) {\n        motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n      }\n      motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.File;\n    }\n    getMotionName(definition) {\n      return definition.File;\n    }\n    getSoundFile(definition) {\n      return definition.Sound;\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager.release();\n      this.queueManager = void 0;\n    }\n  }\n  const ParamAngleX = \"ParamAngleX\";\n  const ParamAngleY = \"ParamAngleY\";\n  const ParamAngleZ = \"ParamAngleZ\";\n  const ParamEyeBallX = \"ParamEyeBallX\";\n  const ParamEyeBallY = \"ParamEyeBallY\";\n  const ParamBodyAngleX = \"ParamBodyAngleX\";\n  const ParamBreath = \"ParamBreath\";\n  class CubismBreath {\n    constructor() {\n      this._breathParameters = [];\n      this._currentTime = 0;\n    }\n    static create() {\n      return new CubismBreath();\n    }\n    setParameters(breathParameters) {\n      this._breathParameters = breathParameters;\n    }\n    getParameters() {\n      return this._breathParameters;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._currentTime += deltaTimeSeconds;\n      const t = this._currentTime * 2 * 3.14159;\n      for (let i = 0; i < this._breathParameters.length; ++i) {\n        const data = this._breathParameters[i];\n        model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n      }\n    }\n  }\n  class BreathParameterData {\n    constructor(parameterId, offset, peak, cycle, weight) {\n      this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n      this.offset = offset == void 0 ? 0 : offset;\n      this.peak = peak == void 0 ? 0 : peak;\n      this.cycle = cycle == void 0 ? 0 : cycle;\n      this.weight = weight == void 0 ? 0 : weight;\n    }\n  }\n  const _CubismEyeBlink = class {\n    static create(modelSetting) {\n      return new _CubismEyeBlink(modelSetting);\n    }\n    setBlinkingInterval(blinkingInterval) {\n      this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    setBlinkingSetting(closing, closed, opening) {\n      this._closingSeconds = closing;\n      this._closedSeconds = closed;\n      this._openingSeconds = opening;\n    }\n    setParameterIds(parameterIds) {\n      this._parameterIds = parameterIds;\n    }\n    getParameterIds() {\n      return this._parameterIds;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._userTimeSeconds += deltaTimeSeconds;\n      let parameterValue;\n      let t = 0;\n      switch (this._blinkingState) {\n        case EyeState.EyeState_Closing:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Closed;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1 - t;\n          break;\n        case EyeState.EyeState_Closed:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n          if (t >= 1) {\n            this._blinkingState = EyeState.EyeState_Opening;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 0;\n          break;\n        case EyeState.EyeState_Opening:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Interval;\n            this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          }\n          parameterValue = t;\n          break;\n        case EyeState.EyeState_Interval:\n          if (this._nextBlinkingTime < this._userTimeSeconds) {\n            this._blinkingState = EyeState.EyeState_Closing;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1;\n          break;\n        case EyeState.EyeState_First:\n        default:\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          parameterValue = 1;\n          break;\n      }\n      if (!_CubismEyeBlink.CloseIfZero) {\n        parameterValue = -parameterValue;\n      }\n      for (let i = 0; i < this._parameterIds.length; ++i) {\n        model.setParameterValueById(this._parameterIds[i], parameterValue);\n      }\n    }\n    constructor(modelSetting) {\n      var _a, _b;\n      this._blinkingState = EyeState.EyeState_First;\n      this._nextBlinkingTime = 0;\n      this._stateStartTimeSeconds = 0;\n      this._blinkingIntervalSeconds = 4;\n      this._closingSeconds = 0.1;\n      this._closedSeconds = 0.05;\n      this._openingSeconds = 0.15;\n      this._userTimeSeconds = 0;\n      this._parameterIds = [];\n      if (modelSetting == null) {\n        return;\n      }\n      this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n    }\n    determinNextBlinkingTiming() {\n      const r = Math.random();\n      return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n    }\n  };\n  let CubismEyeBlink = _CubismEyeBlink;\n  CubismEyeBlink.CloseIfZero = true;\n  var EyeState = /* @__PURE__ */ ((EyeState2) => {\n    EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n    return EyeState2;\n  })(EyeState || {});\n  class csmRect {\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n      this.x = x;\n      this.y = y;\n      this.width = w;\n      this.height = h;\n    }\n    getCenterX() {\n      return this.x + 0.5 * this.width;\n    }\n    getCenterY() {\n      return this.y + 0.5 * this.height;\n    }\n    getRight() {\n      return this.x + this.width;\n    }\n    getBottom() {\n      return this.y + this.height;\n    }\n    setRect(r) {\n      this.x = r.x;\n      this.y = r.y;\n      this.width = r.width;\n      this.height = r.height;\n    }\n    expand(w, h) {\n      this.x -= w;\n      this.y -= h;\n      this.width += w * 2;\n      this.height += h * 2;\n    }\n  }\n  const ColorChannelCount = 4;\n  const shaderCount = 10;\n  let s_instance;\n  let s_viewport;\n  let s_fbo;\n  class CubismClippingManager_WebGL {\n    getChannelFlagAsColor(channelNo) {\n      return this._channelColors[channelNo];\n    }\n    getMaskRenderTexture() {\n      let ret = 0;\n      if (this._maskTexture && this._maskTexture.texture != 0) {\n        this._maskTexture.frameNo = this._currentFrameNo;\n        ret = this._maskTexture.texture;\n      }\n      if (ret == 0) {\n        const size = this._clippingMaskBufferSize;\n        this._colorBuffer = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n        ret = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n      }\n      return ret;\n    }\n    setGL(gl) {\n      this.gl = gl;\n    }\n    calcClippedDrawTotalBounds(model, clippingContext) {\n      let clippedDrawTotalMinX = Number.MAX_VALUE;\n      let clippedDrawTotalMinY = Number.MAX_VALUE;\n      let clippedDrawTotalMaxX = Number.MIN_VALUE;\n      let clippedDrawTotalMaxY = Number.MIN_VALUE;\n      const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n      for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n        const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n        const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n        const drawableVertexes = model.getDrawableVertices(drawableIndex);\n        let minX = Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxX = Number.MIN_VALUE;\n        let maxY = Number.MIN_VALUE;\n        const loop = drawableVertexCount * Constant.vertexStep;\n        for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n          const x = drawableVertexes[pi];\n          const y = drawableVertexes[pi + 1];\n          if (x < minX) {\n            minX = x;\n          }\n          if (x > maxX) {\n            maxX = x;\n          }\n          if (y < minY) {\n            minY = y;\n          }\n          if (y > maxY) {\n            maxY = y;\n          }\n        }\n        if (minX == Number.MAX_VALUE) {\n          continue;\n        }\n        if (minX < clippedDrawTotalMinX) {\n          clippedDrawTotalMinX = minX;\n        }\n        if (minY < clippedDrawTotalMinY) {\n          clippedDrawTotalMinY = minY;\n        }\n        if (maxX > clippedDrawTotalMaxX) {\n          clippedDrawTotalMaxX = maxX;\n        }\n        if (maxY > clippedDrawTotalMaxY) {\n          clippedDrawTotalMaxY = maxY;\n        }\n        if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n          clippingContext._allClippedDrawRect.x = 0;\n          clippingContext._allClippedDrawRect.y = 0;\n          clippingContext._allClippedDrawRect.width = 0;\n          clippingContext._allClippedDrawRect.height = 0;\n          clippingContext._isUsing = false;\n        } else {\n          clippingContext._isUsing = true;\n          const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n          const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n          clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.width = w;\n          clippingContext._allClippedDrawRect.height = h;\n        }\n      }\n    }\n    constructor() {\n      this._maskRenderTexture = null;\n      this._colorBuffer = null;\n      this._currentFrameNo = 0;\n      this._clippingMaskBufferSize = 256;\n      this._clippingContextListForMask = [];\n      this._clippingContextListForDraw = [];\n      this._channelColors = [];\n      this._tmpBoundsOnModel = new csmRect();\n      this._tmpMatrix = new CubismMatrix44();\n      this._tmpMatrixForMask = new CubismMatrix44();\n      this._tmpMatrixForDraw = new CubismMatrix44();\n      let tmp = new CubismTextureColor();\n      tmp.R = 1;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 1;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 1;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 1;\n      this._channelColors.push(tmp);\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        if (this._clippingContextListForMask[i]) {\n          (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n        }\n      }\n      self2._clippingContextListForMask = void 0;\n      self2._clippingContextListForDraw = void 0;\n      if (this._maskTexture) {\n        (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n        self2._maskTexture = void 0;\n      }\n      self2._channelColors = void 0;\n      (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n      this._colorBuffer = null;\n    }\n    initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < drawableCount; i++) {\n        if (drawableMaskCounts[i] <= 0) {\n          this._clippingContextListForDraw.push(null);\n          continue;\n        }\n        let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n        if (clippingContext == null) {\n          clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n          this._clippingContextListForMask.push(clippingContext);\n        }\n        clippingContext.addClippedDrawable(i);\n        this._clippingContextListForDraw.push(clippingContext);\n      }\n    }\n    setupClippingContext(model, renderer) {\n      this._currentFrameNo++;\n      let usingClipCount = 0;\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const cc = this._clippingContextListForMask[clipIndex];\n        this.calcClippedDrawTotalBounds(model, cc);\n        if (cc._isUsing) {\n          usingClipCount++;\n        }\n      }\n      if (usingClipCount > 0) {\n        this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n        this._maskRenderTexture = this.getMaskRenderTexture();\n        renderer.getMvpMatrix();\n        renderer.preDraw();\n        this.setupLayoutBounds(usingClipCount);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n        this.gl.clearColor(1, 1, 1, 1);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n          const clipContext = this._clippingContextListForMask[clipIndex];\n          const allClipedDrawRect = clipContext._allClippedDrawRect;\n          const layoutBoundsOnTex01 = clipContext._layoutBounds;\n          const MARGIN = 0.05;\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n          this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n          const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n          const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(-1, -1);\n              this._tmpMatrix.scaleRelative(2, 2);\n            }\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n          }\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n          }\n          clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n          clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n          const clipDrawCount = clipContext._clippingIdCount;\n          for (let i = 0; i < clipDrawCount; i++) {\n            const clipDrawIndex = clipContext._clippingIdList[i];\n            if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n              continue;\n            }\n            renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n            renderer.setClippingContextBufferForMask(clipContext);\n            renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n          }\n        }\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        renderer.setClippingContextBufferForMask(null);\n        this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n      }\n    }\n    findSameClip(drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        const clippingContext = this._clippingContextListForMask[i];\n        const count = clippingContext._clippingIdCount;\n        if (count != drawableMaskCounts) {\n          continue;\n        }\n        let sameCount = 0;\n        for (let j = 0; j < count; j++) {\n          const clipId = clippingContext._clippingIdList[j];\n          for (let k = 0; k < count; k++) {\n            if (drawableMasks[k] == clipId) {\n              sameCount++;\n              break;\n            }\n          }\n        }\n        if (sameCount == count) {\n          return clippingContext;\n        }\n      }\n      return null;\n    }\n    setupLayoutBounds(usingClipCount) {\n      let div = usingClipCount / ColorChannelCount;\n      let mod = usingClipCount % ColorChannelCount;\n      div = ~~div;\n      mod = ~~mod;\n      let curClipIndex = 0;\n      for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n        const layoutCount = div + (channelNo < mod ? 1 : 0);\n        if (layoutCount == 0)\n          ;\n        else if (layoutCount == 1) {\n          const clipContext = this._clippingContextListForMask[curClipIndex++];\n          clipContext._layoutChannelNo = channelNo;\n          clipContext._layoutBounds.x = 0;\n          clipContext._layoutBounds.y = 0;\n          clipContext._layoutBounds.width = 1;\n          clipContext._layoutBounds.height = 1;\n        } else if (layoutCount == 2) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            xpos = ~~xpos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = 0;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 1;\n          }\n        } else if (layoutCount <= 4) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            let ypos = i / 2;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = ypos * 0.5;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 0.5;\n          }\n        } else if (layoutCount <= 9) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 3;\n            let ypos = i / 3;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 3;\n            cc._layoutBounds.y = ypos / 3;\n            cc._layoutBounds.width = 1 / 3;\n            cc._layoutBounds.height = 1 / 3;\n          }\n        } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 4;\n            let ypos = i / 4;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 4;\n            cc._layoutBounds.y = ypos / 4;\n            cc._layoutBounds.width = 1 / 4;\n            cc._layoutBounds.height = 1 / 4;\n          }\n        } else {\n          CubismLogError(\"not supported mask count : {0}\", layoutCount);\n        }\n      }\n    }\n    getColorBuffer() {\n      return this._colorBuffer;\n    }\n    getClippingContextListForDraw() {\n      return this._clippingContextListForDraw;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingMaskBufferSize = size;\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingMaskBufferSize;\n    }\n  }\n  class CubismRenderTextureResource {\n    constructor(frameNo, texture) {\n      this.frameNo = frameNo;\n      this.texture = texture;\n    }\n  }\n  class CubismClippingContext {\n    constructor(manager, clippingDrawableIndices, clipCount) {\n      this._isUsing = false;\n      this._owner = manager;\n      this._clippingIdList = clippingDrawableIndices;\n      this._clippingIdCount = clipCount;\n      this._allClippedDrawRect = new csmRect();\n      this._layoutBounds = new csmRect();\n      this._clippedDrawableIndexList = [];\n      this._matrixForMask = new CubismMatrix44();\n      this._matrixForDraw = new CubismMatrix44();\n    }\n    release() {\n      const self2 = this;\n      self2._layoutBounds = void 0;\n      self2._allClippedDrawRect = void 0;\n      self2._clippedDrawableIndexList = void 0;\n    }\n    addClippedDrawable(drawableIndex) {\n      this._clippedDrawableIndexList.push(drawableIndex);\n    }\n    getClippingManager() {\n      return this._owner;\n    }\n    setGl(gl) {\n      this._owner.setGL(gl);\n    }\n  }\n  class CubismShader_WebGL {\n    static getInstance() {\n      if (s_instance == null) {\n        s_instance = new CubismShader_WebGL();\n        return s_instance;\n      }\n      return s_instance;\n    }\n    static deleteInstance() {\n      if (s_instance) {\n        s_instance.release();\n        s_instance = void 0;\n      }\n    }\n    constructor() {\n      this._shaderSets = [];\n    }\n    release() {\n      this.releaseShaderProgram();\n    }\n    setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n      if (!isPremultipliedAlpha) {\n        CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n      }\n      if (this._shaderSets.length == 0) {\n        this.generateShaders();\n      }\n      let SRC_COLOR;\n      let DST_COLOR;\n      let SRC_ALPHA;\n      let DST_ALPHA;\n      const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n      if (clippingContextBufferForMask != null) {\n        const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n        this.gl.useProgram(shaderSet.shaderProgram);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        const channelNo = clippingContextBufferForMask._layoutChannelNo;\n        const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n        const rect = clippingContextBufferForMask._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n        SRC_COLOR = this.gl.ZERO;\n        DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n        SRC_ALPHA = this.gl.ZERO;\n        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n      } else {\n        const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n        const masked = clippingContextBufferForDraw != null;\n        const offset = masked ? invertedMask ? 2 : 1 : 0;\n        let shaderSet;\n        switch (colorBlendMode) {\n          case CubismBlendMode.CubismBlendMode_Normal:\n          default:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ONE;\n            DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n            break;\n          case CubismBlendMode.CubismBlendMode_Additive:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n          case CubismBlendMode.CubismBlendMode_Multiplicative:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.DST_COLOR;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (clippingContextBufferForDraw != null) {\n          this.gl.activeTexture(this.gl.TEXTURE1);\n          const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n          this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n          this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n          this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n          const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n          const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n          this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        }\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n      }\n      if (bufferData.index == null) {\n        bufferData.index = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n    }\n    releaseShaderProgram() {\n      for (let i = 0; i < this._shaderSets.length; i++) {\n        this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n        this._shaderSets[i].shaderProgram = 0;\n      }\n      this._shaderSets = [];\n    }\n    generateShaders() {\n      for (let i = 0; i < shaderCount; i++) {\n        this._shaderSets.push({});\n      }\n      this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n      this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n      this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n      this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n      this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n      this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n      this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n      this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n      this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n      this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n      this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n      this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n      this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n      this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n      this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n      this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n      this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n      this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n      this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n      this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n      this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n      this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n      this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n      this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n      this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n      this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n      this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n      this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n      this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n      this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n      this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n      this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n      this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n      this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n      this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n      this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n      this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n      this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n      this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n      this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n      this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n      this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n      this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n      this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n      this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n      this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n      this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n      this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n      this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n      this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n      this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n      this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n      this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n      this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n      this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n      this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n      this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n      this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n      this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n    }\n    loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n      let shaderProgram = this.gl.createProgram();\n      let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n      if (!vertShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n      if (!fragShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      this.gl.attachShader(shaderProgram, vertShader);\n      this.gl.attachShader(shaderProgram, fragShader);\n      this.gl.linkProgram(shaderProgram);\n      const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n      if (!linkStatus) {\n        CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        if (shaderProgram) {\n          this.gl.deleteProgram(shaderProgram);\n        }\n        return 0;\n      }\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      return shaderProgram;\n    }\n    compileShaderSource(shaderType, shaderSource) {\n      const source = shaderSource;\n      const shader = this.gl.createShader(shaderType);\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!shader) {\n        const log = this.gl.getShaderInfoLog(shader);\n        CubismLogError(\"Shader compile log: {0} \", log);\n      }\n      const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n      if (!status) {\n        this.gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    }\n    setGl(gl) {\n      this.gl = gl;\n    }\n  }\n  var ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n    ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n    return ShaderNames2;\n  })(ShaderNames || {});\n  const vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\n  const vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\n  const fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\n  const fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\n  class CubismRenderer_WebGL extends CubismRenderer {\n    constructor() {\n      super();\n      this._clippingContextBufferForMask = null;\n      this._clippingContextBufferForDraw = null;\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this.firstDraw = true;\n      this._textures = {};\n      this._sortedDrawableIndexList = [];\n      this._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n    }\n    initialize(model) {\n      if (model.isUsingMasking()) {\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n      }\n      for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n        this._sortedDrawableIndexList[i] = 0;\n      }\n      super.initialize(model);\n    }\n    bindTexture(modelTextureNo, glTexture) {\n      this._textures[modelTextureNo] = glTexture;\n    }\n    getBindedTextures() {\n      return this._textures;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingManager.release();\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.setClippingMaskBufferSize(size);\n      this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingManager.getClippingMaskBufferSize();\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      this._clippingManager.release();\n      self2._clippingManager = void 0;\n      (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n      this._bufferData.vertex = null;\n      (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n      this._bufferData.uv = null;\n      (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n      this._bufferData.index = null;\n      self2._bufferData = void 0;\n      self2._textures = void 0;\n    }\n    doDrawModel() {\n      this.preDraw();\n      if (this._clippingManager != null) {\n        this._clippingManager.setupClippingContext(this.getModel(), this);\n      }\n      const drawableCount = this.getModel().getDrawableCount();\n      const renderOrder = this.getModel().getDrawableRenderOrders();\n      for (let i = 0; i < drawableCount; ++i) {\n        const order = renderOrder[i];\n        this._sortedDrawableIndexList[order] = i;\n      }\n      for (let i = 0; i < drawableCount; ++i) {\n        const drawableIndex = this._sortedDrawableIndexList[i];\n        if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n          continue;\n        }\n        this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n        this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n        this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n      }\n    }\n    drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n      if (this.isCulling()) {\n        this.gl.enable(this.gl.CULL_FACE);\n      } else {\n        this.gl.disable(this.gl.CULL_FACE);\n      }\n      this.gl.frontFace(this.gl.CCW);\n      const modelColorRGBA = this.getModelColor();\n      if (this.getClippingContextBufferForMask() == null) {\n        modelColorRGBA.A *= opacity;\n        if (this.isPremultipliedAlpha()) {\n          modelColorRGBA.R *= modelColorRGBA.A;\n          modelColorRGBA.G *= modelColorRGBA.A;\n          modelColorRGBA.B *= modelColorRGBA.A;\n        }\n      }\n      let drawtexture = null;\n      if (this._textures[textureNo] != null) {\n        drawtexture = this._textures[textureNo];\n      }\n      CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n      this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n      this.gl.useProgram(null);\n      this.setClippingContextBufferForDraw(null);\n      this.setClippingContextBufferForMask(null);\n    }\n    static doStaticRelease() {\n      CubismShader_WebGL.deleteInstance();\n    }\n    setRenderState(fbo, viewport) {\n      s_fbo = fbo;\n      s_viewport = viewport;\n    }\n    preDraw() {\n      if (this.firstDraw) {\n        this.firstDraw = false;\n        this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n      }\n      this.gl.disable(this.gl.SCISSOR_TEST);\n      this.gl.disable(this.gl.STENCIL_TEST);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.frontFace(this.gl.CW);\n      this.gl.enable(this.gl.BLEND);\n      this.gl.colorMask(true, true, true, true);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    setClippingContextBufferForMask(clip) {\n      this._clippingContextBufferForMask = clip;\n    }\n    getClippingContextBufferForMask() {\n      return this._clippingContextBufferForMask;\n    }\n    setClippingContextBufferForDraw(clip) {\n      this._clippingContextBufferForDraw = clip;\n    }\n    getClippingContextBufferForDraw() {\n      return this._clippingContextBufferForDraw;\n    }\n    startUp(gl) {\n      this.gl = gl;\n      this._clippingManager.setGL(gl);\n      CubismShader_WebGL.getInstance().setGl(gl);\n    }\n  }\n  CubismRenderer.staticRelease = () => {\n    CubismRenderer_WebGL.doStaticRelease();\n  };\n  const tempMatrix = new CubismMatrix44();\n  class Cubism4InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.lipSync = true;\n      this.breath = CubismBreath.create();\n      this.renderer = new CubismRenderer_WebGL();\n      this.idParamAngleX = ParamAngleX;\n      this.idParamAngleY = ParamAngleY;\n      this.idParamAngleZ = ParamAngleZ;\n      this.idParamEyeBallX = ParamEyeBallX;\n      this.idParamEyeBallY = ParamEyeBallY;\n      this.idParamBodyAngleX = ParamBodyAngleX;\n      this.idParamBreath = ParamBreath;\n      this.pixelsPerUnit = 1;\n      this.centeringTransform = new math.Matrix();\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism4MotionManager(settings, options);\n      this.init();\n    }\n    init() {\n      var _a;\n      super.init();\n      if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n        this.eyeBlink = CubismEyeBlink.create(this.settings);\n      }\n      this.breath.setParameters([\n        new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n        new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n        new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n        new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n        new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n      ]);\n      this.renderer.initialize(this.coreModel);\n      this.renderer.setIsPremultipliedAlpha(true);\n    }\n    getSize() {\n      return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    setupLayout() {\n      super.setupLayout();\n      this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n      this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n    }\n    updateWebGLContext(gl, glContextID) {\n      this.renderer.firstDraw = true;\n      this.renderer._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n      this.renderer.startUp(gl);\n      this.renderer._clippingManager._currentFrameNo = glContextID;\n      this.renderer._clippingManager._maskTexture = void 0;\n      CubismShader_WebGL.getInstance()._shaderSets = [];\n    }\n    bindTexture(index, texture) {\n      this.renderer.bindTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a, _b;\n      return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.Id,\n        name: hitArea.Name,\n        index: this.coreModel.getDrawableIndex(hitArea.Id)\n      }))) != null ? _b : [];\n    }\n    getDrawableIDs() {\n      return this.coreModel.getDrawableIds();\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawableIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n      for (let i = 0; i < arr.length; i += 2) {\n        arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n        arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n      }\n      return arr;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      dt /= 1e3;\n      now /= 1e3;\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParameters();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt * 1e3, now * 1e3);\n      (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n      (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParameters();\n    }\n    updateFocus() {\n      this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n      this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n      this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      var _a;\n      (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n    }\n    draw(gl) {\n      const matrix = this.drawingMatrix;\n      const array = tempMatrix.getArray();\n      array[0] = matrix.a;\n      array[1] = matrix.b;\n      array[4] = -matrix.c;\n      array[5] = -matrix.d;\n      array[12] = matrix.tx;\n      array[13] = matrix.ty;\n      this.renderer.setMvpMatrix(tempMatrix);\n      this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n      this.renderer.drawModel();\n    }\n    destroy() {\n      super.destroy();\n      this.renderer.release();\n      this.coreModel.release();\n      this.renderer = void 0;\n      this.coreModel = void 0;\n    }\n  }\n  let startupPromise;\n  let startupRetries = 20;\n  function cubism4Ready() {\n    if (CubismFramework.isStarted()) {\n      return Promise.resolve();\n    }\n    startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n      function startUpWithRetry() {\n        try {\n          startUpCubism4();\n          resolve();\n        } catch (e) {\n          startupRetries--;\n          if (startupRetries < 0) {\n            const err = new Error(\"Failed to start up Cubism 4 framework.\");\n            err.cause = e;\n            reject(err);\n            return;\n          }\n          logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n          setTimeout(startUpWithRetry, 10);\n        }\n      }\n      startUpWithRetry();\n    });\n    return startupPromise;\n  }\n  function startUpCubism4(options) {\n    options = Object.assign({\n      logFunction: console.log,\n      loggingLevel: LogLevel.LogLevel_Verbose\n    }, options);\n    CubismFramework.startUp(options);\n    CubismFramework.initialize();\n  }\n  const Epsilon = 1e-3;\n  const DefaultFadeInSeconds = 0.5;\n  class CubismPose {\n    static create(pose3json) {\n      const ret = new CubismPose();\n      if (typeof pose3json.FadeInTime === \"number\") {\n        ret._fadeTimeSeconds = pose3json.FadeInTime;\n        if (ret._fadeTimeSeconds <= 0) {\n          ret._fadeTimeSeconds = DefaultFadeInSeconds;\n        }\n      }\n      const poseListInfo = pose3json.Groups;\n      const poseCount = poseListInfo.length;\n      for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n        const idListInfo = poseListInfo[poseIndex];\n        const idCount = idListInfo.length;\n        let groupCount = 0;\n        for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n          const partInfo = idListInfo[groupIndex];\n          const partData = new PartData();\n          partData.partId = partInfo.Id;\n          const linkListInfo = partInfo.Link;\n          if (linkListInfo) {\n            const linkCount = linkListInfo.length;\n            for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n              const linkPart = new PartData();\n              linkPart.partId = linkListInfo[linkIndex];\n              partData.link.push(linkPart);\n            }\n          }\n          ret._partGroups.push(partData);\n          ++groupCount;\n        }\n        ret._partGroupCounts.push(groupCount);\n      }\n      return ret;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      if (model != this._lastModel) {\n        this.reset(model);\n      }\n      this._lastModel = model;\n      if (deltaTimeSeconds < 0) {\n        deltaTimeSeconds = 0;\n      }\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; i++) {\n        const partGroupCount = this._partGroupCounts[i];\n        this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n        beginIndex += partGroupCount;\n      }\n      this.copyPartOpacities(model);\n    }\n    reset(model) {\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; ++i) {\n        const groupCount = this._partGroupCounts[i];\n        for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n          this._partGroups[j].initialize(model);\n          const partsIndex = this._partGroups[j].partIndex;\n          const paramIndex = this._partGroups[j].parameterIndex;\n          if (partsIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n          model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n          for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n            this._partGroups[j].link[k].initialize(model);\n          }\n        }\n        beginIndex += groupCount;\n      }\n    }\n    copyPartOpacities(model) {\n      for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n        const partData = this._partGroups[groupIndex];\n        if (partData.link.length == 0) {\n          continue;\n        }\n        const partIndex = this._partGroups[groupIndex].partIndex;\n        const opacity = model.getPartOpacityByIndex(partIndex);\n        for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n          const linkPart = partData.link[linkIndex];\n          const linkPartIndex = linkPart.partIndex;\n          if (linkPartIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(linkPartIndex, opacity);\n        }\n      }\n    }\n    doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n      let visiblePartIndex = -1;\n      let newOpacity = 1;\n      const phi = 0.5;\n      const backOpacityThreshold = 0.15;\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partIndex = this._partGroups[i].partIndex;\n        const paramIndex = this._partGroups[i].parameterIndex;\n        if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n          if (visiblePartIndex >= 0) {\n            break;\n          }\n          visiblePartIndex = i;\n          newOpacity = model.getPartOpacityByIndex(partIndex);\n          newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n          if (newOpacity > 1) {\n            newOpacity = 1;\n          }\n        }\n      }\n      if (visiblePartIndex < 0) {\n        visiblePartIndex = 0;\n        newOpacity = 1;\n      }\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partsIndex = this._partGroups[i].partIndex;\n        if (visiblePartIndex == i) {\n          model.setPartOpacityByIndex(partsIndex, newOpacity);\n        } else {\n          let opacity = model.getPartOpacityByIndex(partsIndex);\n          let a1;\n          if (newOpacity < phi) {\n            a1 = newOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - newOpacity) * phi / (1 - phi);\n          }\n          const backOpacity = (1 - a1) * (1 - newOpacity);\n          if (backOpacity > backOpacityThreshold) {\n            a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartOpacityByIndex(partsIndex, opacity);\n        }\n      }\n    }\n    constructor() {\n      this._fadeTimeSeconds = DefaultFadeInSeconds;\n      this._lastModel = void 0;\n      this._partGroups = [];\n      this._partGroupCounts = [];\n    }\n  }\n  class PartData {\n    constructor(v) {\n      this.parameterIndex = 0;\n      this.partIndex = 0;\n      this.partId = \"\";\n      this.link = [];\n      if (v != void 0) {\n        this.assignment(v);\n      }\n    }\n    assignment(v) {\n      this.partId = v.partId;\n      this.link = v.link.map((link) => link.clone());\n      return this;\n    }\n    initialize(model) {\n      this.parameterIndex = model.getParameterIndex(this.partId);\n      this.partIndex = model.getPartIndex(this.partId);\n      model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    clone() {\n      const clonePartData = new PartData();\n      clonePartData.partId = this.partId;\n      clonePartData.parameterIndex = this.parameterIndex;\n      clonePartData.partIndex = this.partIndex;\n      clonePartData.link = this.link.map((link) => link.clone());\n      return clonePartData;\n    }\n  }\n  class CubismModel {\n    update() {\n      this._model.update();\n      this._model.drawables.resetDynamicFlags();\n    }\n    getCanvasWidth() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n    }\n    getCanvasHeight() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n    }\n    saveParameters() {\n      const parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      for (let i = 0; i < parameterCount; ++i) {\n        if (i < savedParameterCount) {\n          this._savedParameters[i] = this._parameterValues[i];\n        } else {\n          this._savedParameters.push(this._parameterValues[i]);\n        }\n      }\n    }\n    getModel() {\n      return this._model;\n    }\n    getPartIndex(partId) {\n      let partIndex;\n      const partCount = this._model.parts.count;\n      for (partIndex = 0; partIndex < partCount; ++partIndex) {\n        if (partId == this._partIds[partIndex]) {\n          return partIndex;\n        }\n      }\n      if (partId in this._notExistPartId) {\n        return this._notExistPartId[partId];\n      }\n      partIndex = partCount + this._notExistPartId.length;\n      this._notExistPartId[partId] = partIndex;\n      this._notExistPartOpacities[partIndex] = 0;\n      return partIndex;\n    }\n    getPartCount() {\n      return this._model.parts.count;\n    }\n    setPartOpacityByIndex(partIndex, opacity) {\n      if (partIndex in this._notExistPartOpacities) {\n        this._notExistPartOpacities[partIndex] = opacity;\n        return;\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      this._partOpacities[partIndex] = opacity;\n    }\n    setPartOpacityById(partId, opacity) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return;\n      }\n      this.setPartOpacityByIndex(index, opacity);\n    }\n    getPartOpacityByIndex(partIndex) {\n      if (partIndex in this._notExistPartOpacities) {\n        return this._notExistPartOpacities[partIndex];\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      return this._partOpacities[partIndex];\n    }\n    getPartOpacityById(partId) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return 0;\n      }\n      return this.getPartOpacityByIndex(index);\n    }\n    getParameterIndex(parameterId) {\n      let parameterIndex;\n      const idCount = this._model.parameters.count;\n      for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n        if (parameterId != this._parameterIds[parameterIndex]) {\n          continue;\n        }\n        return parameterIndex;\n      }\n      if (parameterId in this._notExistParameterId) {\n        return this._notExistParameterId[parameterId];\n      }\n      parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n      this._notExistParameterId[parameterId] = parameterIndex;\n      this._notExistParameterValues[parameterIndex] = 0;\n      return parameterIndex;\n    }\n    getParameterCount() {\n      return this._model.parameters.count;\n    }\n    getParameterMaximumValue(parameterIndex) {\n      return this._model.parameters.maximumValues[parameterIndex];\n    }\n    getParameterMinimumValue(parameterIndex) {\n      return this._model.parameters.minimumValues[parameterIndex];\n    }\n    getParameterDefaultValue(parameterIndex) {\n      return this._model.parameters.defaultValues[parameterIndex];\n    }\n    getParameterValueByIndex(parameterIndex) {\n      if (parameterIndex in this._notExistParameterValues) {\n        return this._notExistParameterValues[parameterIndex];\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      return this._parameterValues[parameterIndex];\n    }\n    getParameterValueById(parameterId) {\n      const parameterIndex = this.getParameterIndex(parameterId);\n      return this.getParameterValueByIndex(parameterIndex);\n    }\n    setParameterValueByIndex(parameterIndex, value, weight = 1) {\n      if (parameterIndex in this._notExistParameterValues) {\n        this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n        return;\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      if (this._model.parameters.maximumValues[parameterIndex] < value) {\n        value = this._model.parameters.maximumValues[parameterIndex];\n      }\n      if (this._model.parameters.minimumValues[parameterIndex] > value) {\n        value = this._model.parameters.minimumValues[parameterIndex];\n      }\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n    setParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.setParameterValueByIndex(index, value, weight);\n    }\n    addParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    addParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.addParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n    }\n    getDrawableIds() {\n      return this._drawableIds.slice();\n    }\n    getDrawableIndex(drawableId) {\n      const drawableCount = this._model.drawables.count;\n      for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n        if (this._drawableIds[drawableIndex] == drawableId) {\n          return drawableIndex;\n        }\n      }\n      return -1;\n    }\n    getDrawableCount() {\n      return this._model.drawables.count;\n    }\n    getDrawableId(drawableIndex) {\n      return this._model.drawables.ids[drawableIndex];\n    }\n    getDrawableRenderOrders() {\n      return this._model.drawables.renderOrders;\n    }\n    getDrawableTextureIndices(drawableIndex) {\n      return this._model.drawables.textureIndices[drawableIndex];\n    }\n    getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableVertexIndexCount(drawableIndex) {\n      return this._model.drawables.indexCounts[drawableIndex];\n    }\n    getDrawableVertexCount(drawableIndex) {\n      return this._model.drawables.vertexCounts[drawableIndex];\n    }\n    getDrawableVertices(drawableIndex) {\n      return this.getDrawableVertexPositions(drawableIndex);\n    }\n    getDrawableVertexIndices(drawableIndex) {\n      return this._model.drawables.indices[drawableIndex];\n    }\n    getDrawableVertexPositions(drawableIndex) {\n      return this._model.drawables.vertexPositions[drawableIndex];\n    }\n    getDrawableVertexUvs(drawableIndex) {\n      return this._model.drawables.vertexUvs[drawableIndex];\n    }\n    getDrawableOpacity(drawableIndex) {\n      return this._model.drawables.opacities[drawableIndex];\n    }\n    getDrawableCulling(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    getDrawableBlendMode(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n    }\n    getDrawableInvertedMaskBit(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    getDrawableMasks() {\n      return this._model.drawables.masks;\n    }\n    getDrawableMaskCounts() {\n      return this._model.drawables.maskCounts;\n    }\n    isUsingMasking() {\n      for (let d = 0; d < this._model.drawables.count; ++d) {\n        if (this._model.drawables.maskCounts[d] <= 0) {\n          continue;\n        }\n        return true;\n      }\n      return false;\n    }\n    getDrawableDynamicFlagIsVisible(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    loadParameters() {\n      let parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      if (parameterCount > savedParameterCount) {\n        parameterCount = savedParameterCount;\n      }\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterValues[i] = this._savedParameters[i];\n      }\n    }\n    initialize() {\n      this._parameterValues = this._model.parameters.values;\n      this._partOpacities = this._model.parts.opacities;\n      this._parameterMaximumValues = this._model.parameters.maximumValues;\n      this._parameterMinimumValues = this._model.parameters.minimumValues;\n      {\n        const parameterIds = this._model.parameters.ids;\n        const parameterCount = this._model.parameters.count;\n        for (let i = 0; i < parameterCount; ++i) {\n          this._parameterIds.push(parameterIds[i]);\n        }\n      }\n      {\n        const partIds = this._model.parts.ids;\n        const partCount = this._model.parts.count;\n        for (let i = 0; i < partCount; ++i) {\n          this._partIds.push(partIds[i]);\n        }\n      }\n      {\n        const drawableIds = this._model.drawables.ids;\n        const drawableCount = this._model.drawables.count;\n        for (let i = 0; i < drawableCount; ++i) {\n          this._drawableIds.push(drawableIds[i]);\n        }\n      }\n    }\n    constructor(model) {\n      this._model = model;\n      this._savedParameters = [];\n      this._parameterIds = [];\n      this._drawableIds = [];\n      this._partIds = [];\n      this._notExistPartId = {};\n      this._notExistParameterId = {};\n      this._notExistParameterValues = {};\n      this._notExistPartOpacities = {};\n      this.initialize();\n    }\n    release() {\n      this._model.release();\n      this._model = void 0;\n    }\n  }\n  class CubismMoc {\n    static create(mocBytes) {\n      const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n      if (moc) {\n        return new CubismMoc(moc);\n      }\n      throw new Error(\"Unknown error\");\n    }\n    createModel() {\n      let cubismModel;\n      const model = Live2DCubismCore.Model.fromMoc(this._moc);\n      if (model) {\n        cubismModel = new CubismModel(model);\n        ++this._modelCount;\n        return cubismModel;\n      }\n      throw new Error(\"Unknown error\");\n    }\n    deleteModel(model) {\n      if (model != null) {\n        --this._modelCount;\n      }\n    }\n    constructor(moc) {\n      this._moc = moc;\n      this._modelCount = 0;\n    }\n    release() {\n      this._moc._release();\n      this._moc = void 0;\n    }\n  }\n  var CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n    CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n    return CubismPhysicsTargetType2;\n  })(CubismPhysicsTargetType || {});\n  var CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n    return CubismPhysicsSource2;\n  })(CubismPhysicsSource || {});\n  class CubismPhysicsParticle {\n    constructor() {\n      this.initialPosition = new CubismVector2(0, 0);\n      this.position = new CubismVector2(0, 0);\n      this.lastPosition = new CubismVector2(0, 0);\n      this.lastGravity = new CubismVector2(0, 0);\n      this.force = new CubismVector2(0, 0);\n      this.velocity = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsSubRig {\n    constructor() {\n      this.normalizationPosition = {};\n      this.normalizationAngle = {};\n    }\n  }\n  class CubismPhysicsInput {\n    constructor() {\n      this.source = {};\n    }\n  }\n  class CubismPhysicsOutput {\n    constructor() {\n      this.destination = {};\n      this.translationScale = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsRig {\n    constructor() {\n      this.settings = [];\n      this.inputs = [];\n      this.outputs = [];\n      this.particles = [];\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getGravity() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n      ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n      return ret;\n    }\n    getWind() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Wind.X;\n      ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n      return ret;\n    }\n    getSubRigCount() {\n      return this._json.Meta.PhysicsSettingCount;\n    }\n    getTotalInputCount() {\n      return this._json.Meta.TotalInputCount;\n    }\n    getTotalOutputCount() {\n      return this._json.Meta.TotalOutputCount;\n    }\n    getVertexCount() {\n      return this._json.Meta.VertexCount;\n    }\n    getNormalizationPositionMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n    }\n    getNormalizationPositionMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n    }\n    getNormalizationPositionDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n    }\n    getNormalizationAngleMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n    }\n    getNormalizationAngleMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n    }\n    getNormalizationAngleDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n    }\n    getInputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n    }\n    getInputWeight(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n    }\n    getInputReflect(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n    }\n    getInputType(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n    }\n    getInputSourceId(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n    }\n    getOutputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n    }\n    getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n    }\n    getOutputAngleScale(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n    }\n    getOutputWeight(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n    }\n    getOutputDestinationId(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n    }\n    getOutputType(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n    }\n    getOutputReflect(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n    }\n    getParticleCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n    }\n    getParticleMobility(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n    }\n    getParticleDelay(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n    }\n    getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n    }\n    getParticleRadius(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n    }\n    getParticlePosition(physicsSettingIndex, vertexIndex) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n      ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n      return ret;\n    }\n  }\n  const PhysicsTypeTagX = \"X\";\n  const PhysicsTypeTagY = \"Y\";\n  const PhysicsTypeTagAngle = \"Angle\";\n  const AirResistance = 5;\n  const MaximumWeight = 100;\n  const MovementThreshold = 1e-3;\n  class CubismPhysics {\n    static create(json) {\n      const ret = new CubismPhysics();\n      ret.parse(json);\n      ret._physicsRig.gravity.y = 0;\n      return ret;\n    }\n    evaluate(model, deltaTimeSeconds) {\n      let totalAngle;\n      let weight;\n      let radAngle;\n      let outputValue;\n      const totalTranslation = new CubismVector2();\n      let currentSetting;\n      let currentInput;\n      let currentOutput;\n      let currentParticles;\n      let parameterValue;\n      let parameterMaximumValue;\n      let parameterMinimumValue;\n      let parameterDefaultValue;\n      parameterValue = model.getModel().parameters.values;\n      parameterMaximumValue = model.getModel().parameters.maximumValues;\n      parameterMinimumValue = model.getModel().parameters.minimumValues;\n      parameterDefaultValue = model.getModel().parameters.defaultValues;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        totalAngle = { angle: 0 };\n        totalTranslation.x = 0;\n        totalTranslation.y = 0;\n        currentSetting = this._physicsRig.settings[settingIndex];\n        currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n        currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n        currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        for (let i = 0; i < currentSetting.inputCount; ++i) {\n          weight = currentInput[i].weight / MaximumWeight;\n          if (currentInput[i].sourceParameterIndex == -1) {\n            currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n          }\n          currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n        }\n        radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n        totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n        totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n        updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\n          const particleIndex = currentOutput[i].vertexIndex;\n          if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n            break;\n          }\n          if (currentOutput[i].destinationParameterIndex == -1) {\n            currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n          }\n          const translation = new CubismVector2();\n          translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n          translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n          outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n          const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n          const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n          updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n          for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n            parameterValue[offset] = outParameterValue[outParamIndex];\n          }\n        }\n      }\n    }\n    setOptions(options) {\n      this._options = options;\n    }\n    getOption() {\n      return this._options;\n    }\n    constructor() {\n      this._options = new Options();\n      this._options.gravity.y = -1;\n      this._options.gravity.x = 0;\n      this._options.wind.x = 0;\n      this._options.wind.y = 0;\n    }\n    release() {\n      this._physicsRig = void 0;\n    }\n    parse(physicsJson) {\n      this._physicsRig = new CubismPhysicsRig();\n      let json = new CubismPhysicsJson(physicsJson);\n      this._physicsRig.gravity = json.getGravity();\n      this._physicsRig.wind = json.getWind();\n      this._physicsRig.subRigCount = json.getSubRigCount();\n      let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n      for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n        const setting = new CubismPhysicsSubRig();\n        setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n        setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n        setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n        setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n        setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n        setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n        setting.inputCount = json.getInputCount(i);\n        setting.baseInputIndex = inputIndex;\n        inputIndex += setting.inputCount;\n        for (let j = 0; j < setting.inputCount; ++j) {\n          const input = new CubismPhysicsInput();\n          input.sourceParameterIndex = -1;\n          input.weight = json.getInputWeight(i, j);\n          input.reflect = json.getInputReflect(i, j);\n          switch (json.getInputType(i, j)) {\n            case PhysicsTypeTagX:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n              break;\n            case PhysicsTypeTagY:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n              break;\n            case PhysicsTypeTagAngle:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n              break;\n          }\n          input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          input.source.id = json.getInputSourceId(i, j);\n          this._physicsRig.inputs.push(input);\n        }\n        setting.outputCount = json.getOutputCount(i);\n        setting.baseOutputIndex = outputIndex;\n        outputIndex += setting.outputCount;\n        for (let j = 0; j < setting.outputCount; ++j) {\n          const output = new CubismPhysicsOutput();\n          output.destinationParameterIndex = -1;\n          output.vertexIndex = json.getOutputVertexIndex(i, j);\n          output.angleScale = json.getOutputAngleScale(i, j);\n          output.weight = json.getOutputWeight(i, j);\n          output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          output.destination.id = json.getOutputDestinationId(i, j);\n          switch (json.getOutputType(i, j)) {\n            case PhysicsTypeTagX:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              output.getValue = getOutputTranslationX;\n              output.getScale = getOutputScaleTranslationX;\n              break;\n            case PhysicsTypeTagY:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              output.getValue = getOutputTranslationY;\n              output.getScale = getOutputScaleTranslationY;\n              break;\n            case PhysicsTypeTagAngle:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              output.getValue = getOutputAngle;\n              output.getScale = getOutputScaleAngle;\n              break;\n          }\n          output.reflect = json.getOutputReflect(i, j);\n          this._physicsRig.outputs.push(output);\n        }\n        setting.particleCount = json.getParticleCount(i);\n        setting.baseParticleIndex = particleIndex;\n        particleIndex += setting.particleCount;\n        for (let j = 0; j < setting.particleCount; ++j) {\n          const particle = new CubismPhysicsParticle();\n          particle.mobility = json.getParticleMobility(i, j);\n          particle.delay = json.getParticleDelay(i, j);\n          particle.acceleration = json.getParticleAcceleration(i, j);\n          particle.radius = json.getParticleRadius(i, j);\n          particle.position = json.getParticlePosition(i, j);\n          this._physicsRig.particles.push(particle);\n        }\n        this._physicsRig.settings.push(setting);\n      }\n      this.initialize();\n      json.release();\n    }\n    initialize() {\n      let strand;\n      let currentSetting;\n      let radius;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        currentSetting = this._physicsRig.settings[settingIndex];\n        strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        strand[0].initialPosition = new CubismVector2(0, 0);\n        strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n        strand[0].lastGravity = new CubismVector2(0, -1);\n        strand[0].lastGravity.y *= -1;\n        strand[0].velocity = new CubismVector2(0, 0);\n        strand[0].force = new CubismVector2(0, 0);\n        for (let i = 1; i < currentSetting.particleCount; ++i) {\n          radius = new CubismVector2(0, 0);\n          radius.y = strand[i].radius;\n          strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n          strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastGravity = new CubismVector2(0, -1);\n          strand[i].lastGravity.y *= -1;\n          strand[i].velocity = new CubismVector2(0, 0);\n          strand[i].force = new CubismVector2(0, 0);\n        }\n      }\n    }\n  }\n  class Options {\n    constructor() {\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  function getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n  }\n  function getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n      parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    } else {\n      parentGravity = parentGravity.multiplyByScaler(-1);\n    }\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getRangeValue(min, max) {\n    return Math.abs(Math.max(min, max) - Math.min(min, max));\n  }\n  function getDefaultValue(min, max) {\n    const minValue = Math.min(min, max);\n    return minValue + getRangeValue(min, max) / 2;\n  }\n  function getOutputScaleTranslationX(translationScale, angleScale) {\n    return translationScale.x;\n  }\n  function getOutputScaleTranslationY(translationScale, angleScale) {\n    return translationScale.y;\n  }\n  function getOutputScaleAngle(translationScale, angleScale) {\n    return angleScale;\n  }\n  function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let totalRadian;\n    let delay;\n    let radian;\n    let currentGravity;\n    let direction = new CubismVector2(0, 0);\n    let velocity = new CubismVector2(0, 0);\n    let force = new CubismVector2(0, 0);\n    let newDirection = new CubismVector2(0, 0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    totalRadian = CubismMath.degreesToRadian(totalAngle);\n    currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n      strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n      strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n      delay = strand[i].delay * deltaTimeSeconds * 30;\n      direction = strand[i].position.substract(strand[i - 1].position);\n      radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n      direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n      direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n      strand[i].position = strand[i - 1].position.add(direction);\n      velocity = strand[i].velocity.multiplyByScaler(delay);\n      force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n      strand[i].position = strand[i].position.add(velocity).add(force);\n      newDirection = strand[i].position.substract(strand[i - 1].position);\n      newDirection.normalize();\n      strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n      if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n        strand[i].position.x = 0;\n      }\n      if (delay != 0) {\n        strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n        strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n        strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n      }\n      strand[i].force = new CubismVector2(0, 0);\n      strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n  }\n  function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let outputScale;\n    let value;\n    let weight;\n    outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n      if (value < output.valueBelowMinimum) {\n        output.valueBelowMinimum = value;\n      }\n      value = parameterValueMinimum;\n    } else if (value > parameterValueMaximum) {\n      if (value > output.valueExceededMaximum) {\n        output.valueExceededMaximum = value;\n      }\n      value = parameterValueMaximum;\n    }\n    weight = output.weight / MaximumWeight;\n    if (weight >= 1) {\n      parameterValue[0] = value;\n    } else {\n      value = parameterValue[0] * (1 - weight) + value * weight;\n      parameterValue[0] = value;\n    }\n  }\n  function normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0;\n    const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n      value = maxValue;\n    }\n    const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n      value = minValue;\n    }\n    const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch (Math.sign(paramValue)) {\n      case 1: {\n        const nLength = maxNormValue - middleNormValue;\n        const pLength = maxValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case -1: {\n        const nLength = minNormValue - middleNormValue;\n        const pLength = minValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case 0: {\n        result = middleNormValue;\n        break;\n      }\n    }\n    return isInverted ? result : result * -1;\n  }\n  Live2DFactory.registerRuntime({\n    version: 4,\n    ready: cubism4Ready,\n    test(source) {\n      return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 4) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 4);\n      return String.fromCharCode(...view) === \"MOC3\";\n    },\n    createModelSettings(json) {\n      return new Cubism4ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const moc = CubismMoc.create(data);\n      try {\n        const model = moc.createModel();\n        model.__moc = moc;\n        return model;\n      } catch (e) {\n        try {\n          moc.release();\n        } catch (ignored) {\n        }\n        throw e;\n      }\n    },\n    createInternalModel(coreModel, settings, options) {\n      const model = new Cubism4InternalModel(coreModel, settings, options);\n      const coreModelWithMoc = coreModel;\n      if (coreModelWithMoc.__moc) {\n        model.__moc = coreModelWithMoc.__moc;\n        delete coreModelWithMoc.__moc;\n        model.once(\"destroy\", releaseMoc);\n      }\n      return model;\n    },\n    createPhysics(coreModel, data) {\n      return CubismPhysics.create(data);\n    },\n    createPose(coreModel, data) {\n      return CubismPose.create(data);\n    }\n  });\n  function releaseMoc() {\n    var _a;\n    (_a = this.__moc) == null ? void 0 : _a.release();\n  }\n  exports2.Cubism2ExpressionManager = Cubism2ExpressionManager;\n  exports2.Cubism2InternalModel = Cubism2InternalModel;\n  exports2.Cubism2ModelSettings = Cubism2ModelSettings;\n  exports2.Cubism2MotionManager = Cubism2MotionManager;\n  exports2.Cubism4ExpressionManager = Cubism4ExpressionManager;\n  exports2.Cubism4InternalModel = Cubism4InternalModel;\n  exports2.Cubism4ModelSettings = Cubism4ModelSettings;\n  exports2.Cubism4MotionManager = Cubism4MotionManager;\n  exports2.ExpressionManager = ExpressionManager;\n  exports2.FileLoader = FileLoader;\n  exports2.FocusController = FocusController;\n  exports2.InteractionMixin = InteractionMixin;\n  exports2.InternalModel = InternalModel;\n  exports2.LOGICAL_HEIGHT = LOGICAL_HEIGHT;\n  exports2.LOGICAL_WIDTH = LOGICAL_WIDTH;\n  exports2.Live2DExpression = Live2DExpression;\n  exports2.Live2DEyeBlink = Live2DEyeBlink;\n  exports2.Live2DFactory = Live2DFactory;\n  exports2.Live2DLoader = Live2DLoader;\n  exports2.Live2DModel = Live2DModel;\n  exports2.Live2DPhysics = Live2DPhysics;\n  exports2.Live2DPose = Live2DPose;\n  exports2.Live2DTransform = Live2DTransform;\n  exports2.ModelSettings = ModelSettings;\n  exports2.MotionManager = MotionManager;\n  exports2.MotionPreloadStrategy = MotionPreloadStrategy;\n  exports2.MotionPriority = MotionPriority;\n  exports2.MotionState = MotionState;\n  exports2.SoundManager = SoundManager;\n  exports2.VERSION = VERSION;\n  exports2.XHRLoader = XHRLoader;\n  exports2.ZipLoader = ZipLoader;\n  exports2.applyMixins = applyMixins;\n  exports2.clamp = clamp;\n  exports2.copyArray = copyArray;\n  exports2.copyProperty = copyProperty;\n  exports2.cubism4Ready = cubism4Ready;\n  exports2.folderName = folderName;\n  exports2.logger = logger;\n  exports2.rand = rand;\n  exports2.remove = remove;\n  exports2.startUpCubism4 = startUpCubism4;\n  Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: \"Module\" } });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklive2d\"] = self[\"webpackChunklive2d\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9445); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","ref","on","handleMouseDown","handleMouseMove","handleMouseUp","staticRenderFns","_setupProxy","staticClass","handlerClick","drawer","$event","$store","dispatch","live2d","_v","mouseDown","model","value","state","percentage","callback","$$v","$set","expression","defineComponent","name","data","customColor","x","dragging","methods","setTimeout","$refs","per","style","width","e","offsetX","parentElement","clientWidth","clientX","computed","scale","watch","handler","newValue","window","localStorage","setItem","mounted","document","addEventListener","events","code","amplify","reduce","component","websocket","initWebSocket","wsuri","location","host","WebSocket","onopen","websocketonopen","onerror","websocketonerror","onclose","websocketclose","_Message","message","type","base64ToArrayBuffer","base64","binary_string","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","arrayAdd","a","audioCtx","analyser","frequencyData","playing","o","async","getWav","store","response","axios","url","voice","method","responseType","run","getByteFrequencyData","arr","push","setMouthOpenY","v","Math","max","min","console","log","model4","internalModel","coreModel","setParameterValueByIndex","parameterIndex","audioData","decodeAudioData","source","createBufferSource","connect","destination","start","motion","onended","send","catch","error","createAnalyser","protocol","navigator","userAgent","indexOf","mediaDevices","getUserMedia","audio","then","stream","AudioContext","frequencyBinCount","err","alert","__pow","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","throw","done","apply","CubismBreath","constructor","_breathParameters","_currentTime","static","setParameters","breathParameters","getParameters","updateParameters","deltaTimeSeconds","t","addParameterValueById","parameterId","offset","peak","sin","cycle","weight","BreathParameterData","_CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_userTimeSeconds","_blinkingState","EyeState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","_a","_b","getEyeBlinkParameters","slice","r","random","CubismEyeBlink","EyeState2","Epsilon","DefaultFadeInSeconds","CubismPose","pose3json","ret","FadeInTime","_fadeTimeSeconds","poseListInfo","Groups","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","Id","linkListInfo","Link","linkCount","linkIndex","linkPart","link","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","j","initialize","partsIndex","partIndex","paramIndex","setPartOpacityByIndex","k","opacity","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","backOpacityThreshold","getParameterValueByIndex","a1","backOpacity","assignment","map","clone","getParameterIndex","getPartIndex","clonePartData","CubismVector2","y","add","vector2","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","sqrt","getDistanceWith","dot","normalize","isEqual","rhs","isNotEqual","_CubismMath","cos","abs","cx","isNegativeNumber","Infinity","exp","PI","left","right","degrees","radian","from","to","q1","atan2","q2","directionToRadian","degree","radianToDegrees","totalAngle","b","c","d","range","quadraticEquation","ba","ca","da","p","p3","q","discriminant","center","threshold","mp3","mp33","cosphi","acos","crtr","cbrt","t1","root12","root2","root3","u12","sd","u1","v1","root1","CubismMath","CubismMatrix44","_tr","Float32Array","loadIdentity","dst","n","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translate","translateX","translateY","scaleRelative","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","R","G","B","A","getModelColor","Object","assign","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","_anisortopy","getAnisotropy","CubismTextureColor","CubismBlendMode","CubismBlendMode2","s_option","s_isStarted","s_isInitialized","Constant","vertexOffset","vertexStep","CubismFramework","option","CubismLogInfo","Live2DCubismCore","_isStarted","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","major","minor","patch","versionNumber","CubismLogWarning","staticRelease","csmGetLogFunction","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CSM_ASSERT","CubismLogDebug","fmt","_len2","arguments","args","Array","_key2","CubismDebug","print","LogLevel_Debug","_len3","_key3","LogLevel_Info","_len4","_key4","LogLevel_Warning","CubismLogError","_len5","_key5","LogLevel_Error","logLevel","format","getLoggingLevel","logPrint","coreLogFunction","replace","CubismModel","update","drawables","resetDynamicFlags","getCanvasWidth","canvasinfo","CanvasWidth","PixelsPerUnit","getCanvasHeight","CanvasHeight","saveParameters","parameterCount","parameters","count","savedParameterCount","_savedParameters","_parameterValues","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartCount","_partOpacities","setPartOpacityById","index","getPartOpacityById","_notExistParameterId","keys","_notExistParameterValues","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","getParameterValueById","undefined","user","ids","includes","addParameterValueByIndex","multiplyParameterValueById","multiplyParameterValueByIndex","getDrawableIds","_drawableIds","getDrawableIndex","drawableId","drawableCount","drawableIndex","getDrawableCount","getDrawableId","getDrawableRenderOrders","renderOrders","getDrawableTextureIndices","textureIndices","getDrawableDynamicFlagVertexPositionsDidChange","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","getDrawableVertexIndexCount","indexCounts","getDrawableVertexCount","vertexCounts","getDrawableVertices","getDrawableVertexPositions","getDrawableVertexIndices","indices","vertexPositions","getDrawableVertexUvs","vertexUvs","getDrawableOpacity","opacities","getDrawableCulling","constantFlags","hasIsDoubleSidedBit","getDrawableBlendMode","hasBlendAdditiveBit","CubismBlendMode_Additive","hasBlendMultiplicativeBit","CubismBlendMode_Multiplicative","CubismBlendMode_Normal","getDrawableInvertedMaskBit","hasIsInvertedMaskBit","getDrawableMasks","masks","getDrawableMaskCounts","maskCounts","isUsingMasking","getDrawableDynamicFlagIsVisible","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","loadParameters","values","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","release","CubismMoc","mocBytes","moc","Moc","fromArrayBuffer","Error","createModel","cubismModel","Model","fromMoc","_moc","_modelCount","deleteModel","_release","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","fadeIn","getEasingSine","getFadeInStartTime","fadeOut","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","DefaultFadeTime","CubismExpressionMotion","super","_parameters","json","fadeInTime","fadeOutTime","FadeOutTime","Parameters","param","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","item","parameter","CubismConfig","ExpressionBlendType2","CubismConfig2","supportMoreMaskDivisions","setOpacityFromMotion","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","time","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","id","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","EvaluationOptionFlag2","EffectNameEyeBlink","EffectNameLipSync","TargetNameModel","TargetNameParameter","TargetNamePartOpacity","UseOldBeziersCurveMotion","lerpPoints","result","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","cardanoAlgorithmForBezier","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","target","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","parse","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","sourceValue","fin","fout","paramWeight","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","areBeziersRestructed","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_eventCustomData","_motions","startMotion","autoDelete","InvalidMotionQueueEntryHandleValue","splice","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntry","find","entry","setEventCallback","customData","_eventCallBack","doUpdateMotion","updated","firedList","i2","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","CubismPhysicsParticle","initialPosition","position","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagX","PhysicsTypeTagY","PhysicsTypeTagAngle","AirResistance","MaximumWeight","MovementThreshold","CubismPhysics","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","angle","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","_options","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","prototype","JSON","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","options","getOption","Options","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getRangeValue","getDefaultValue","minValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","nLength","pLength","csmRect","w","h","height","getCenterX","getCenterY","getRight","getBottom","setRect","expand","ColorChannelCount","shaderCount","s_instance","s_viewport","s_fbo","CubismClippingManager_WebGL","getChannelFlagAsColor","channelNo","_channelColors","getMaskRenderTexture","_maskTexture","texture","frameNo","_currentFrameNo","size","_clippingMaskBufferSize","_colorBuffer","gl","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","_maskRenderTexture","_clippingContextListForMask","_clippingContextListForDraw","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","self","deleteFramebuffer","deleteTexture","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","renderer","usingClipCount","clipIndex","cc","viewport","preDraw","setupLayoutBounds","clearColor","clear","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","setClippingContextBufferForMask","drawMesh","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","manager","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","masked","ShaderNames_NormalPremultipliedAlpha","ONE","ShaderNames_AddPremultipliedAlpha","ShaderNames_MultPremultipliedAlpha","TEXTURE1","tex","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","linkStatus","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","status","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","firstDraw","_textures","_sortedDrawableIndexList","_bufferData","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","order","setClippingContextBufferForDraw","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","getInstance","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteInstance","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","startUp","doStaticRelease","CubismModelSettingsJson","groups","hitAreas","HitAreas","layout","Layout","FileReferences","expressions","Expressions","motions","Motions","textures","Textures","physics","Physics","pose","Pose","group","Name","Ids","getLipSyncParameters","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeBallX","ParamEyeBallY","ParamBodyAngleX","ParamBreath","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","config2","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","logger","tag","_len6","messages","_key6","warn","_len7","_key7","_len8","_key8","clamp","num","lower","upper","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","folderName","url2","lastSlashIndex","lastIndexOf","remove","array","ExpressionManager","EventEmitter","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","_loadExpression","setRandomExpression","availableIndices","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","now","destroy","emit","EPSILON","MAX_SPEED","ACCELERATION_TIME","FocusController","targetX","targetY","vx","vy","focus","instant","dt","dx","dy","maxSpeed","ax","ay","maxA","maxV","ModelSettings","TypeError","resolveURL","path","replaceFiles","replacer","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","essentialFiles","definedFiles","filter","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","reserve","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","setCurrent","complete","isActive","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","key","join","TAG$2","VOLUME","SoundManager","volume","_volume","audios","onFinish","onError","Audio","preload","dispose","play","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionManager","motionGroups","idleMotionGroup","idle","setupMotions","motionPreload","loadMotion","_loadMotion","_0","_1","_this","NORMAL","definition","currentAudio","soundURL","getSoundFile","readyToPlay","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","IDLE","tempBounds","InternalModel","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","textureFlipY","setupLayout","setupHitAreas","getSize","getLayout","centerX","offsetY","centerY","top","bottom","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","updateTransform","transform","copyFrom","append","motionManager","TAG$1","NetworkError","aborted","_XHRLoader","onload","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","get","Set","set","listeners","cancelXHRs","once","open","onabort","onloadend","delete","abort","WeakMap","XHRLoader","runMiddlewares","middleware","context","fn","bind","err2","loader","createXHR","Live2DLoader","middlewares","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","load","TAG","urlToJSON","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","tasks","createPose","createPhysics","all","setupEssentials","live2DModel","textureLoadings","createInternalModel","modelData","isValidMoc","createCoreModel","_Live2DFactory","runtimes","sort","test","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","onTap","off","registerInteraction","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","Transform","tempPoint","Point","tempMatrix$1","tickerRef","Live2DModel","Container","anchor","ObservablePoint","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","setupLive2DModel","onLoad","tickerClass","autoUpdate","PIXI","Ticker","_destroyed","shared","onTickerUpdate","interactive","pivot","toModelPosition","tx","ty","hitAreaNames","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","plugins","interaction","batch","geometry","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","_FileLoader","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","reader","FileReader","readAsText","FileLoader","factory","isArray","File","createSettings","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","unshift","_ZipLoader","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","paths","ZipLoader","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","Cubism4ExpressionManager","queueManager","findIndex","create","Cubism4ModelSettings","isValidJSON","every","entries","Sound","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","defaultFadingDuration","tempMatrix","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","eyeBlink","commonKey","charAt","toLowerCase","getDrawableIDs","prepend","_d","motionUpdated","updateFocus","updateNaturalMovements","matrix","getParameter","FRAMEBUFFER_BINDING","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","LogLevel_Verbose","releaseMoc","__moc","modelName","app","view","autoStart","backgroundAlpha","stage","addChild","registerRuntime","byteLength","Int8Array","String","fromCharCode","ignored","coreModelWithMoc","components","Drawer","isDragging","lastX","lastY","onresize","created","onmessage","close","clientY","deltaX","deltaY","parseInt","Vue","Vuex","getItem","mutations","actions","increase","decrease","parseFloat","resizeTo","App","beforeCreate","$mount","exports","require","exports2","utils","math","core","display","VERSION","_len","_key","rand","copyProperty","fromKey","toKey","copyArray","self2","MotionPreloadStrategy","MotionPreloadStrategy2","fromURL","Live2D","originalUpdateParam","Live2DMotion","updateParam","call","onFinishHandler","Live2DExpression","AMotion","params","setFadeIn","fade_in","fade_out","calc","defaultValue","val","updateParamExe","motionQueueEnt","setParamFloat","Cubism2ExpressionManager","MotionQueueManager","Cubism2MotionManager","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","tempMatrixArray","Cubism2InternalModel","drawDataCount","disableCulling","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","_ref","initOpacities","_ref2","setPartsOpacity","saveParam","getModelContext","_$aS","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","glno","prop","hasOwnProperty","WebGLBuffer","curFrameNo","setTexture","getDrawDataIndex","drawData","getDrawData","getDrawDataID","getTransformedPoints","loadParam","addToParamFloat","Cubism2ModelSettings","copy","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","_ref3","ptype","addSrcParam","targets","_ref4","addTargetParam","elapsed","Live2DPartsParam","initIndex","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","_ref5","_ref6","l","visible","getParamFloat","normalizePartsOpacityGroup","partsGroup","maxBackOpacity","visibleOpacity","visibleIndex","_ref7","originalOpacity","getPartsOpacity","_ref8","backOp","copyOpacity","_ref9","_ref10","partsIndex2","partGroup","Live2DModelWebGL","loadModel","getError","defineProperties","__esModule","Symbol","toStringTag","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","deferred","O","chunkIds","notFulfilled","getter","enumerable","g","globalThis","Function","obj","nmd","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}