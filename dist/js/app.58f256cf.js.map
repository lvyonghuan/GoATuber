{"version":3,"file":"js/app.58f256cf.js","mappings":"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","sources":["webpack://live2d/./src/App.vue","webpack://live2d/./src/components/Drawer.vue","webpack://live2d/src/components/Drawer.vue","webpack://live2d/./src/components/Drawer.vue?0738","webpack://live2d/./src/components/Drawer.vue?af4e","webpack://live2d/./src/ws/index.js","webpack://live2d/./src/utils/index.js","webpack://live2d/./src/openMouthY/index.js","webpack://live2d/./src/pixi-live2d-display/dist/cubism4.es.js","webpack://live2d/./src/loadLive2d/index.js","webpack://live2d/src/App.vue","webpack://live2d/./src/App.vue?51dd","webpack://live2d/./src/App.vue?0e40","webpack://live2d/./src/store/index.js","webpack://live2d/./src/main.js","webpack://live2d/./src/pixi-live2d-display/dist/index.js","webpack://live2d/webpack/bootstrap","webpack://live2d/webpack/runtime/chunk loaded","webpack://live2d/webpack/runtime/compat get default export","webpack://live2d/webpack/runtime/define property getters","webpack://live2d/webpack/runtime/global","webpack://live2d/webpack/runtime/hasOwnProperty shorthand","webpack://live2d/webpack/runtime/make namespace object","webpack://live2d/webpack/runtime/node module decorator","webpack://live2d/webpack/runtime/jsonp chunk loading","webpack://live2d/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"app\"}},[_c('Drawer'),_c('canvas',{ref:\"live2d\",staticStyle:{\"position\":\"relative\"},on:{\"mousedown\":_vm.handleMouseDown,\"mousemove\":_vm.handleMouseMove,\"mouseup\":_vm.handleMouseUp}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"show_setting\",on:{\"click\":_vm.handlerClick}},[_c('i',{staticClass:\"el-icon-arrow-right\"})]),_c('el-drawer',{attrs:{\"visible\":_vm.drawer,\"with-header\":false,\"direction\":\"ltr\"},on:{\"update:visible\":function($event){_vm.drawer=$event}}},[_c('div',{staticClass:\"button\"},[_c('el-button',{staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.$store.dispatch('amplify',_vm.live2d)}}},[_vm._v(\"放大\")]),_c('el-button',{staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.$store.dispatch('reduce',_vm.live2d)}}},[_vm._v(\"缩小\")])],1),_c('div',{staticClass:\"percentage\",on:{\"mousedown\":_vm.mouseDown}},[_c('div',{ref:\"per\",staticClass:\"in-percentage\"})]),_c('el-button-group',[_c('el-button',{staticStyle:{\"height\":\"5vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-minus\"},on:{\"click\":function($event){return _vm.$store.dispatch('decrease')}}}),_c('el-button',{staticStyle:{\"height\":\"5vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){return _vm.$store.dispatch('increase')}}})],1),_c('br'),_c('el-input',{staticStyle:{\"height\":\"4vh\",\"width\":\"20vw\",\"margin-top\":\"2vh\"},attrs:{\"placeholder\":\"要改变的数值\"},model:{value:(_vm.$store.state.percentage),callback:function ($$v) {_vm.$set(_vm.$store.state, \"percentage\", $$v)},expression:\"$store.state.percentage\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport {defineComponent} from 'vue'\r\n\r\n\r\n\r\nexport default defineComponent({\r\n  name: \"Drawer\",\r\n  data(){\r\n    return {\r\n      drawer: false,\r\n      customColor: '#409eff',\r\n      x:\"\",\r\n      dragging :false\r\n    }\r\n  },\r\n  methods:{\r\n    handlerClick(){\r\n      this.drawer = true\r\n      setTimeout(()=>{\r\n        this.$refs.per.style.width = `${this.percentage}%`\r\n      })\r\n    },\r\n    //添加进度条的点击事件\r\n    mouseDown(e){\r\n\r\n      this.$store.state.percentage = e.offsetX/this.$refs.per.parentElement.clientWidth * 100\r\n\r\n      this.x = e.clientX;\r\n    }\r\n\r\n  },\r\n\r\n  computed:{\r\n    percentage(){\r\n      return this.$store.state.percentage\r\n    },\r\n    scale(){\r\n      return this.$store.state.scale\r\n    },\r\n    live2d(){\r\n      return this.$store.state.live2d\r\n    }\r\n  },\r\n\r\n\r\n  watch:{\r\n    percentage:{\r\n      handler(newValue){\r\n        if (typeof newValue != 'number'){\r\n          this.percentage = 60\r\n        }\r\n        this.$refs.per.style.width = `${this.percentage}%`\r\n        window.localStorage.setItem(\"percentage\",newValue)\r\n\r\n      }\r\n    },\r\n    scale:{\r\n      handler(newValue){\r\n\r\n        if (typeof newValue != 'number'){\r\n          this.percentage = 1\r\n        }\r\n\r\n        window.localStorage.setItem(\"scale\",newValue)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"keydown\", (events) => {\r\n          if(events.code==\"ArrowLeft\"){\r\n            this.drawer=false\r\n          }\r\n          if(events.code==\"ArrowRight\"){\r\n            this.drawer=true\r\n          }\r\n          if(events.code==\"ArrowUp\"){\r\n            this.amplify()\r\n          }\r\n          if(events.code==\"ArrowDown\"){\r\n            this.reduce()\r\n          }\r\n        }\r\n    )\r\n  }\r\n\r\n\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"show_setting\" @click=\"handlerClick\">\r\n      <i class=\"el-icon-arrow-right\"></i>\r\n    </div>\r\n\r\n    <el-drawer\r\n        :visible.sync=\"drawer\"\r\n        :with-header=\"false\"\r\n        direction=\"ltr\"\r\n    >\r\n\r\n      <div class=\"button\" >\r\n        <el-button  @click=\"$store.dispatch('amplify',live2d)\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\" >放大</el-button>\r\n        <el-button  @click=\"$store.dispatch('reduce',live2d)\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\">缩小</el-button>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"percentage\"\r\n           @mousedown=\"mouseDown\"\r\n\r\n      >\r\n        <div class=\"in-percentage\"\r\n             ref=\"per\"\r\n\r\n\r\n        ></div>\r\n      </div>\r\n\r\n      <el-button-group>\r\n        <el-button icon=\"el-icon-minus\"\r\n                   @click=\"$store.dispatch('decrease')\"\r\n                   style=\"height: 5vh;\r\n                   width: 4vw;\r\n                   font-size: 2vh;\r\n                   line-height: 0vh;\" ></el-button>\r\n        <el-button icon=\"el-icon-plus\"\r\n                   @click=\"$store.dispatch('increase')\"\r\n                   style=\"height: 5vh;\r\n                   width: 4vw;\r\n                   font-size: 2vh;\r\n                   line-height: 0vh;\"></el-button>\r\n      </el-button-group>\r\n      <br>\r\n      <el-input v-model=\"$store.state.percentage\" placeholder=\"要改变的数值\" style=\"height: 4vh; width: 20vw;margin-top: 2vh\"></el-input>\r\n    </el-drawer>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n\r\n.button {\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  margin-top: 8vh;\r\n}\r\n\r\n.el-drawer__body {\r\n  background-image: url(\"@/../public/drawer.webp\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.show_setting {\r\n  position: relative;\r\n  width: 1.5vw;\r\n  height: 4vw;\r\n  background:rgba(139,139,139,0.6);\r\n  top: 50vh;\r\n  transform: translateY(-4vw);\r\n  font-size: 3vh;\r\n  line-height: 4vw;\r\n  text-align: center;\r\n  z-index: 10;\r\n\r\n}\r\n\r\n.percentage {\r\n\r\n  width: 25vw;\r\n  height: 1vh;\r\n  background: white;\r\n  margin-top: 10vh;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-radius: 0.5vh;\r\n  overflow: hidden;\r\n  margin-bottom: 3vh;\r\n\r\n}\r\n\r\n.in-percentage{\r\n  height: 1vh;\r\n  background:rgba(64,158,255,1);\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Drawer.vue?vue&type=template&id=eb56ff50&\"\nimport script from \"./Drawer.vue?vue&type=script&lang=js&\"\nexport * from \"./Drawer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Drawer.vue?vue&type=style&index=0&id=eb56ff50&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","let websocket\r\n\r\nimport {Message} from \"element-ui\";\r\nexport  default  function  initWebSocket() {\r\n    //初始化weosocket\r\n    const wsuri = `ws://${location.host}/live2d`;\r\n\r\n    websocket = new WebSocket(wsuri);\r\n\r\n\r\n    // 连接建立时触发\r\n    websocket.onopen = websocketonopen;\r\n    // 通信发生错误时触发\r\n    websocket.onerror = websocketonerror;\r\n    // 连接关闭时触发\r\n    websocket.onclose = websocketclose;\r\n\r\n    return websocket\r\n}\r\n\r\n\r\nfunction websocketonopen(){\r\n    Message({\r\n        message: '成功建立连接 ₍ᐢ..ᐢ₎♡ ',\r\n        type: 'success'\r\n    });\r\n}\r\nfunction websocketonerror(){\r\n    Message({\r\n        message: '连接发生了错误! ̊ଳ ̊ᵎᵎᵎᵎ ',\r\n        type: 'warning'\r\n    });\r\n}\r\nfunction websocketclose(){\r\n    Message({\r\n        message: '连接已断开!!! ˃̣̣̥᷄⌓˂̣̣̥᷅ ',\r\n        type: 'warning'\r\n    });\r\n}\r\n\r\n","// a function for converting  base64 to ArrayBuffer\r\nexport  function base64ToArrayBuffer(base64) {\r\n    let binary_string =  window.atob(base64);\r\n    let len = binary_string.length;\r\n    let bytes = new Uint8Array( len );\r\n    for (let i = 0; i < len; i++)        {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n}\r\n// a function for adding the every number in the array\r\nexport function arrayAdd(a){return a.reduce((i,a)=>i+a,0)}","import axios from \"axios\";\r\nimport {base64ToArrayBuffer,arrayAdd} from \"@/utils\"\r\n\r\n\r\nlet audioCtx\r\n\r\nlet analyser\r\n\r\nlet frequencyData\r\n\r\nlet playing = false\r\n\r\nlet o = 80\r\n\r\nexport  async function getWav(data,store){\r\n    let response\r\n\r\n    switch (data[\"VType\"]) {\r\n        case 1 :\r\n            response =  await axios({\r\n                url:data.voice,\r\n                method:\"get\",\r\n                responseType:\"arraybuffer\"\r\n            })\r\n            response = response.data\r\n            break\r\n        //如果为 2 和 3 则需要转化为arraybuffer\r\n        case 2  :\r\n            break\r\n            response = base64ToArrayBuffer(data.voice)\r\n        case 3  :\r\n            response = base64ToArrayBuffer(data.voice)\r\n            break\r\n\r\n    }\r\n\r\n\r\n\r\n    ((response) => {\r\n\r\n        const audioData = response;\r\n        audioCtx.decodeAudioData(audioData, (buffer)=>{\r\n            // 新建 Buffer 源\r\n            const source = audioCtx.createBufferSource();\r\n            source.buffer = buffer;\r\n            // 连接到 audioCtx\r\n            source.connect(audioCtx.destination);\r\n            // 连接到 音频分析器\r\n            source.connect(analyser);\r\n            // window.navigator.mediaDevices.getUserMedia({ audio: true });\r\n            // 开始播放\r\n\r\n            playing = true;\r\n            run()\r\n            setTimeout(() => {\r\n                source.start(0);\r\n            },0.5)\r\n //调用相应地动作和表情\r\n            store.model4.expression(data.expression)\r\n            store.model4.motion(data[\"act\"],data[\"movement\"])\r\n\r\n\r\n\r\n            source.onended = ()=>{\r\n                // 停止播放\r\n               playing = false;\r\n               //清空model 的动作和表情\r\n                store.state.websocket.send(0)\r\n                store.model4.expression(0);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n            store.state.websocket.send(-1)\r\n        })\r\n    })(response)\r\n\r\n\r\n    function run(){\r\n\r\n        if(!playing) return;\r\n\r\n        const frequencyData =getByteFrequencyData();\r\n\r\n        const arr = [];\r\n        // 频率范围还是太广了，跳采！\r\n        for (var i = 0; i < 700; i += o) {\r\n            arr.push(frequencyData[i]);\r\n        }\r\n\r\n        setMouthOpenY((arrayAdd(arr)/arr.length - 20)/store.percentage);\r\n\r\n        setTimeout(run,1000/60);//相隔一段时间执行\r\n    }\r\n\r\n    function setMouthOpenY(v){\r\n        //去除调小于0和大于1的值\r\n        v = Math.max(0, Math.min(1, v));\r\n        console.log(v)\r\n\r\n        //mouthOpenY参数\r\n        store.model4.internalModel.coreModel.setParameterValueByIndex(store.parameterIndex, v,1,true)\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function createAnalyser() {\r\n    audioCtx = new AudioContext();\r\n    // 新建分析仪\r\n    analyser =audioCtx.createAnalyser();\r\n    // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n    frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n    // 取音频文件成 arraybuffer\r\n}\r\nfunction getByteFrequencyData(){\r\n    analyser.getByteFrequencyData(frequencyData);\r\n    return frequencyData\r\n}\r\n\r\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogVerbose(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, \"[CSM][V]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1,user=false) {\n\n    // let p=this.getParameterIndex(\"ParamMouthOpenY\");\n    //\n    // if(parameterIndex in this._notExistParameterValues){\n    //   p=this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\");\n    // }\n    let p;\n\n    if (this._model.parameters.ids.includes(\"ParamMouthOpenY\")){\n      p = this.getParameterIndex(\"ParamMouthOpenY\")\n    }\n\n    if (this._model.parameters.ids.includes(\"PARAM_MOUTH_OPEN_Y\")){\n      p = this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\n    }\n\n    if (this._model.parameters.ids.includes(\"ParamMouthA\")){\n      p = this.getParameterIndex(\"ParamMouthA\")\n    }\n\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    if (parameterIndex != p || user){\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n\n  }\n  setParameterValueById(parameterId, value, weight = 1,user=false) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight,user);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nclass CubismModelUserDataJson {\n  constructor(json, size) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getUserDataCount() {\n    return this._json.Meta.UserDataCount;\n  }\n  getTotalUserDataSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getUserDataTargetType(i) {\n    return this._json.UserData[i].Target;\n  }\n  getUserDataId(i) {\n    return this._json.UserData[i].Id;\n  }\n  getUserDataValue(i) {\n    return this._json.UserData[i].Value;\n  }\n}\nconst ArtMesh = \"ArtMesh\";\nclass CubismModelUserData {\n  static create(json, size) {\n    const ret = new CubismModelUserData();\n    ret.parseUserData(json, size);\n    return ret;\n  }\n  getArtMeshUserDatas() {\n    return this._artMeshUserDataNode;\n  }\n  parseUserData(data, size) {\n    let json = new CubismModelUserDataJson(data, size);\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount = json.getUserDataCount();\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i)\n      };\n      this._userDataNodes.push(addNode);\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n    json.release();\n  }\n  constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n  release() {\n    this._userDataNodes = null;\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass CubismMotionManager extends CubismMotionQueueManager {\n  constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n  getReservePriority() {\n    return this._reservePriority;\n  }\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0;\n    }\n    this._currentPriority = priority;\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0;\n    }\n    return updated;\n  }\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nconst HitAreaPrefix = \"HitArea\";\nconst HitAreaHead = \"Head\";\nconst HitAreaBody = \"Body\";\nconst PartsIdCore = \"Parts01Core\";\nconst PartsArmPrefix = \"Parts01Arm_\";\nconst PartsArmLPrefix = \"Parts01ArmL_\";\nconst PartsArmRPrefix = \"Parts01ArmR_\";\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeLOpen = \"ParamEyeLOpen\";\nconst ParamEyeLSmile = \"ParamEyeLSmile\";\nconst ParamEyeROpen = \"ParamEyeROpen\";\nconst ParamEyeRSmile = \"ParamEyeRSmile\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamEyeBallForm = \"ParamEyeBallForm\";\nconst ParamBrowLY = \"ParamBrowLY\";\nconst ParamBrowRY = \"ParamBrowRY\";\nconst ParamBrowLX = \"ParamBrowLX\";\nconst ParamBrowRX = \"ParamBrowRX\";\nconst ParamBrowLAngle = \"ParamBrowLAngle\";\nconst ParamBrowRAngle = \"ParamBrowRAngle\";\nconst ParamBrowLForm = \"ParamBrowLForm\";\nconst ParamBrowRForm = \"ParamBrowRForm\";\nconst ParamMouthForm = \"ParamMouthForm\";\nconst ParamMouthOpenY = \"ParamMouthOpenY\";\nconst ParamCheek = \"ParamCheek\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBodyAngleY = \"ParamBodyAngleY\";\nconst ParamBodyAngleZ = \"ParamBodyAngleZ\";\nconst ParamBreath = \"ParamBreath\";\nconst ParamArmLA = \"ParamArmLA\";\nconst ParamArmRA = \"ParamArmRA\";\nconst ParamArmLB = \"ParamArmLB\";\nconst ParamArmRB = \"ParamArmRB\";\nconst ParamHandL = \"ParamHandL\";\nconst ParamHandR = \"ParamHandR\";\nconst ParamHairFront = \"ParamHairFront\";\nconst ParamHairSide = \"ParamHairSide\";\nconst ParamHairBack = \"ParamHairBack\";\nconst ParamHairFluffy = \"ParamHairFluffy\";\nconst ParamShoulderY = \"ParamShoulderY\";\nconst ParamBustX = \"ParamBustX\";\nconst ParamBustY = \"ParamBustY\";\nconst ParamBaseX = \"ParamBaseX\";\nconst ParamBaseY = \"ParamBaseY\";\nconst ParamNONE = \"NONE:\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { ACubismMotion, BreathParameterData, CSM_ASSERT, Constant, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, CubismBlendMode, CubismBreath, CubismClippingContext, CubismClippingManager_WebGL, CubismConfig, CubismDebug, CubismExpressionMotion, CubismEyeBlink, CubismFramework, CubismLogDebug, CubismLogError, CubismLogInfo, CubismLogVerbose, CubismLogWarning, CubismMath, CubismMatrix44, CubismMoc, CubismModel, CubismModelSettingsJson, CubismModelUserData, CubismModelUserDataJson, CubismMotion, CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionJson, CubismMotionManager, CubismMotionPoint, CubismMotionQueueEntry, CubismMotionQueueManager, CubismMotionSegment, CubismMotionSegmentType, CubismPhysics, CubismPhysicsInput, CubismPhysicsJson, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType, CubismPose, CubismRenderTextureResource, CubismRenderer, CubismRenderer_WebGL, CubismShader_WebGL, CubismTextureColor, CubismVector2, EvaluationOptionFlag, ExpressionBlendType, ExpressionManager, EyeState, FileLoader, FocusController, HitAreaBody, HitAreaHead, HitAreaPrefix, InteractionMixin, InternalModel, InvalidMotionQueueEntryHandleValue, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DFactory, Live2DLoader, Live2DModel, Live2DTransform, LogLevel, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, Options, ParamAngleX, ParamAngleY, ParamAngleZ, ParamArmLA, ParamArmLB, ParamArmRA, ParamArmRB, ParamBaseX, ParamBaseY, ParamBodyAngleX, ParamBodyAngleY, ParamBodyAngleZ, ParamBreath, ParamBrowLAngle, ParamBrowLForm, ParamBrowLX, ParamBrowLY, ParamBrowRAngle, ParamBrowRForm, ParamBrowRX, ParamBrowRY, ParamBustX, ParamBustY, ParamCheek, ParamEyeBallForm, ParamEyeBallX, ParamEyeBallY, ParamEyeLOpen, ParamEyeLSmile, ParamEyeROpen, ParamEyeRSmile, ParamHairBack, ParamHairFluffy, ParamHairFront, ParamHairSide, ParamHandL, ParamHandR, ParamMouthForm, ParamMouthOpenY, ParamNONE, ParamShoulderY, PartData, PartsArmLPrefix, PartsArmPrefix, PartsArmRPrefix, PartsIdCore, PhysicsJsonEffectiveForces, ShaderNames, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, csmRect, cubism4Ready, folderName, fragmentShaderSrcMaskInvertedPremultipliedAlpha, fragmentShaderSrcMaskPremultipliedAlpha, fragmentShaderSrcPremultipliedAlpha, fragmentShaderSrcsetupMask, logger, rand, remove, startUpCubism4, vertexShaderSrc, vertexShaderSrcMasked, vertexShaderSrcSetupMask };\n","import * as PIXI from \"pixi.js\";\r\nimport {Live2DModel} from \"@/pixi-live2d-display/dist/cubism4.es\";\r\nimport axios from \"axios\";\r\n\r\nwindow.PIXI = PIXI;\r\n\r\nexport default async function createModel(store,live2d){\r\n//for the modelName\r\n    let modelName= await axios({\r\n      url:\"/get\",\r\n      method:\"get\"\r\n    }).catch( err => {\r\n      console.log(err)\r\n\r\n    }) || {};\r\n    //load the live2d model and add the  model on the state\r\n    store.model4 = await Live2DModel.from(\r\n        \"./model/\"+ (modelName.data || \"mao_pro_t02.model3.json\"),\r\n        { autoUpdate: true });\r\n    // this.set=this.model4.\r\n    //     internalModel.coreModel.\r\n    //     setParameterValueById\r\n\r\n    //set the scale of model\r\n    store.model4.scale.set(store.scale+0)\r\n\r\n    let app = new PIXI.Application({\r\n        view: live2d,\r\n        autoStart: true,\r\n        width:store.model4.width ,\r\n        height:store.model4.height ,\r\n        backgroundAlpha:0\r\n    });\r\n\r\n\r\n\r\n    app.stage.addChild(store.model4);\r\n\r\n\r\n\r\n\r\n//adapt defferent parameterIds of models\r\n   if (store.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthOpenY\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthOpenY\")\r\n    }\r\n\r\n    if (store.model4.internalModel.coreModel._parameterIds.includes(\"PARAM_MOUTH_OPEN_Y\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\r\n    }\r\n\r\n    if (store.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthA\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthA\")\r\n    }\r\n\r\n    return app\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","<template>\n  <div id=\"app\" style=\"text-align: center;\">\n    <Drawer\n    ></Drawer>\n    <canvas ref=\"live2d\"\n            @mousedown=\"handleMouseDown\"\n            @mousemove=\"handleMouseMove\"\n            @mouseup=\"handleMouseUp\"\n            style=\"position: relative;\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\n\n\nimport { config } from './pixi-live2d-display';\nimport Drawer from \"@/components/Drawer.vue\";\nimport initWebSocket from \"@/ws\";\nimport {getWav,createAnalyser} from \"@/openMouthY\";\nimport createModel from \"@/loadLive2d\"\n\n\n// log level\nconfig.logLevel = config.LOG_LEVEL_WARNING; // LOG_LEVEL_VERBOSE, LOG_LEVEL_ERROR, LOG_LEVEL_NONE\n\n\n\n\n\nexport default {\n  name:\"app\",\n  components: {Drawer},\n  data(){\n  return{\n\n    isDragging: false,\n    lastX: 0,\n    lastY: 0,\n  }\n  },\n  mounted() {\n    //load live2d model\n    (async () => {\n      this.$store.state.app = await createModel(this.$store.state,this.$refs.live2d)\n      //create analyser\n      createAnalyser()\n    })()\n    //addlistener for the window resizing\n    window.onresize = () => {\n      this.$store.state.model4.x = this.$refs.live2d.clientWidth / 2 -this.$store.state.model4.width / 2\n    }\n\n// put the canvas dom-element in the state\n    this.$store.state.live2d = this.$refs.live2d\n// test the mouthOpen\n//     this.$refs.live2d.onclick=()=>{\n//       getWav({\n//         voice :\"synthesize.wav\",\n//         VType:1\n//       },this.$store.state)\n\n    // }\n\n  }\n  ,\n  created() {\n    // init the ws\n    this.$store.state.websocket = initWebSocket()\n// async add a callback function for the message\n   setTimeout(()=>{\n     this.$store.state.websocket.onmessage =\n         (event) => {\n           let data=JSON.parse(event.data)\n           getWav(data)\n\n         }\n    })\n  },\n  destroyed() {\n    this.$store.state.websocket.close(); //离开路由之后断开websocket连接\n  },\n  methods:{\n    //add drag\n    handleMouseDown(event) {\n      this.isDragging = true;\n      this.lastX = event.clientX;\n      this.lastY = event.clientY;\n    },\n    handleMouseMove(event) {\n      if (this.isDragging) {\n        const deltaX = event.clientX - this.lastX;\n        const deltaY = event.clientY - this.lastY;\n        this.$refs.live2d.style.left = parseInt(this.$refs.live2d.style.left || 0) + deltaX + \"px\";\n        this.$refs.live2d.style.top = parseInt(this.$refs.live2d.style.top || 0) + deltaY + \"px\";\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n      }\n    },\n    handleMouseUp() {\n      this.isDragging = false;\n      this.isDragging = false;\n      this.isDragging = false;\n    }\n\n\n\n},\n\n\n}\n\n\n</script>\n\n<style>\n\nbody {\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  background-color: #01FE00;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n\n\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7850bd97&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=7850bd97&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport {store} from \"core-js/internals/reflect-metadata\";\r\n\r\n\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        websocket :\"\",\r\n        model4:\"\",\r\n        parameterIndex:\"\",\r\n        percentage:localStorage.getItem(\"percentage\") || 60,\r\n        scale:localStorage.getItem(\"scale\") || 1 ,\r\n        app:\"\",\r\n        live2d:\"\"\r\n\r\n    },\r\n    mutations: {\r\n    },\r\n    actions: {\r\n        //increase the percentage when click the button\r\n        increase(context) {\r\n            context.state.percentage += 5;\r\n            if (context.state.percentage > 100) {\r\n                context.state.percentage = 100;\r\n            }\r\n        },\r\n       // decrease the percentage when click the button\r\n        decrease(context) {\r\n            context.state.percentage -= 5;\r\n            if (context.state.percentage <= 1) {\r\n                context.state.percentage = 1;\r\n            }\r\n        },\r\n        //reduce the scale of the live2d model when click the button\r\n        reduce(context,live2d){\r\n        // ensure the scale is a number\r\n            if (typeof localStorage.scale != \"number\" ){\r\n                localStorage.scale = parseFloat(localStorage.scale)\r\n            }\r\n\r\n\r\n            if(context.state.scale<=0.3){\r\n                context.state.scale=0.3\r\n            }\r\n            context.state.scale-=0.1\r\n            context.state.model4.scale.set(context.state.scale) // reset the scale of the model\r\n\r\n            //reset the width and height of canvas\r\n            // live2d.style.width=context.state.width/2\r\n            live2d.width=context.state.model4.width\r\n            live2d.height=context.state.model4.height\r\n            context.state.app.resizeTo=live2d\r\n        },\r\n\r\n        //amplify the scale of the live2d model when click the button\r\n        amplify(context,live2d){\r\n        // ensure the scale is a number\r\n            if (typeof localStorage.scale != \"number\" ){\r\n                localStorage.scale = parseFloat(localStorage.scale)\r\n            }\r\n\r\n            if (context.state.scale>=1.5){\r\n                context.state.scale=1.5\r\n            }\r\n            context.state.scale-=(-0.1)\r\n            context.state.model4.scale.set(context.state.scale) // reset the scale of the model\r\n\r\n            //reset the width and height of canvas\r\n            live2d.width=context.state.model4.width\r\n            live2d.height=context.state.model4.height\r\n            context.state.app.resizeTo=live2d\r\n        },\r\n\r\n\r\n    }\r\n});","import Vue from 'vue'\nimport App from './App.vue'\nimport {Button, ButtonGroup, Drawer, Input, Message, Progress} from \"element-ui\";\n\nimport store from './store'\n\n\nVue.config.productionTip = false\n\n// navigator.mediaDevices.getUserMedia({ audio: true });\nVue.use(Button)\nVue.use(Drawer)\nVue.use(Progress)\nVue.use(ButtonGroup)\nVue.use(Input)\n\n\nnew Vue({\n  render: h => h(App),\n  beforeCreate() {\n    Vue.prototype.$message = Message;\n  },\n  store,\n\n\n}).$mount('#app')\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n(function(global, factory) {\n  typeof exports === \"object\" && typeof module !== \"undefined\" ? factory(exports, require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\")) : typeof define === \"function\" && define.amd ? define([\"exports\", \"@pixi/utils\", \"@pixi/math\", \"@pixi/core\", \"@pixi/display\"], factory) : (global = typeof globalThis !== \"undefined\" ? globalThis : global || self, factory((global.PIXI = global.PIXI || {}, global.PIXI.live2d = global.PIXI.live2d || {}), global.PIXI.utils, global.PIXI, global.PIXI, global.PIXI));\n})(this, function(exports2, utils, math, core, display) {\n  \"use strict\";\n  const LOGICAL_WIDTH = 2;\n  const LOGICAL_HEIGHT = 2;\n  var CubismConfig;\n  ((CubismConfig2) => {\n    CubismConfig2.supportMoreMaskDivisions = true;\n    CubismConfig2.setOpacityFromMotion = false;\n  })(CubismConfig || (CubismConfig = {}));\n  exports2.config = void 0;\n  ((config2) => {\n    config2.LOG_LEVEL_VERBOSE = 0;\n    config2.LOG_LEVEL_WARNING = 1;\n    config2.LOG_LEVEL_ERROR = 2;\n    config2.LOG_LEVEL_NONE = 999;\n    config2.logLevel = config2.LOG_LEVEL_WARNING;\n    config2.sound = true;\n    config2.motionSync = true;\n    config2.motionFadingDuration = 500;\n    config2.idleMotionFadingDuration = 2e3;\n    config2.expressionFadingDuration = 500;\n    config2.preserveExpressionOnMotion = true;\n    config2.cubism4 = CubismConfig;\n  })(exports2.config || (exports2.config = {}));\n  const VERSION = \"0.4.0\";\n  const logger = {\n    log(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_VERBOSE) {\n        console.log(`[${tag}]`, ...messages);\n      }\n    },\n    warn(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_WARNING) {\n        console.warn(`[${tag}]`, ...messages);\n      }\n    },\n    error(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_ERROR) {\n        console.error(`[${tag}]`, ...messages);\n      }\n    }\n  };\n  function clamp(num, lower, upper) {\n    return num < lower ? lower : num > upper ? upper : num;\n  }\n  function rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  function copyProperty(type, from, to, fromKey, toKey) {\n    const value = from[fromKey];\n    if (value !== null && typeof value === type) {\n      to[toKey] = value;\n    }\n  }\n  function copyArray(type, from, to, fromKey, toKey) {\n    const array = from[fromKey];\n    if (Array.isArray(array)) {\n      to[toKey] = array.filter((item) => item !== null && typeof item === type);\n    }\n  }\n  function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n        if (name !== \"constructor\") {\n          Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n        }\n      });\n    });\n  }\n  function folderName(url) {\n    let lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex != -1) {\n      url = url.slice(0, lastSlashIndex);\n    }\n    lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex !== -1) {\n      url = url.slice(lastSlashIndex + 1);\n    }\n    return url;\n  }\n  function remove(array, item) {\n    const index = array.indexOf(item);\n    if (index !== -1) {\n      array.splice(index, 1);\n    }\n  }\n  class ExpressionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.expressions = [];\n      this.reserveExpressionIndex = -1;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `ExpressionManager(${settings.name})`;\n    }\n    init() {\n      this.defaultExpression = this.createExpression({}, void 0);\n      this.currentExpression = this.defaultExpression;\n      this.stopAllExpressions();\n    }\n    loadExpression(index) {\n      return __async(this, null, function* () {\n        if (!this.definitions[index]) {\n          logger.warn(this.tag, `Undefined expression at [${index}]`);\n          return void 0;\n        }\n        if (this.expressions[index] === null) {\n          logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.expressions[index]) {\n          return this.expressions[index];\n        }\n        const expression = yield this._loadExpression(index);\n        this.expressions[index] = expression;\n        return expression;\n      });\n    }\n    _loadExpression(index) {\n      throw new Error(\"Not implemented.\");\n    }\n    setRandomExpression() {\n      return __async(this, null, function* () {\n        if (this.definitions.length) {\n          const availableIndices = [];\n          for (let i = 0; i < this.definitions.length; i++) {\n            if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.setExpression(index);\n          }\n        }\n        return false;\n      });\n    }\n    resetExpression() {\n      this._setExpression(this.defaultExpression);\n    }\n    restoreExpression() {\n      this._setExpression(this.currentExpression);\n    }\n    setExpression(index) {\n      return __async(this, null, function* () {\n        if (typeof index !== \"number\") {\n          index = this.getExpressionIndex(index);\n        }\n        if (!(index > -1 && index < this.definitions.length)) {\n          return false;\n        }\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n          return false;\n        }\n        this.reserveExpressionIndex = index;\n        const expression = yield this.loadExpression(index);\n        if (!expression || this.reserveExpressionIndex !== index) {\n          return false;\n        }\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n        return true;\n      });\n    }\n    update(model, now) {\n      if (!this.isFinished()) {\n        return this.updateParameters(model, now);\n      }\n      return false;\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.expressions = void 0;\n    }\n  }\n  const EPSILON = 0.01;\n  const MAX_SPEED = 40 / 7.5;\n  const ACCELERATION_TIME = 1 / (0.15 * 1e3);\n  class FocusController {\n    constructor() {\n      this.targetX = 0;\n      this.targetY = 0;\n      this.x = 0;\n      this.y = 0;\n      this.vx = 0;\n      this.vy = 0;\n    }\n    focus(x, y, instant = false) {\n      this.targetX = clamp(x, -1, 1);\n      this.targetY = clamp(y, -1, 1);\n      if (instant) {\n        this.x = this.targetX;\n        this.y = this.targetY;\n      }\n    }\n    update(dt) {\n      const dx = this.targetX - this.x;\n      const dy = this.targetY - this.y;\n      if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n        return;\n      const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n      const maxSpeed = MAX_SPEED / (1e3 / dt);\n      let ax = maxSpeed * (dx / d) - this.vx;\n      let ay = maxSpeed * (dy / d) - this.vy;\n      const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n      const maxA = maxSpeed * ACCELERATION_TIME * dt;\n      if (a > maxA) {\n        ax *= maxA / a;\n        ay *= maxA / a;\n      }\n      this.vx += ax;\n      this.vy += ay;\n      const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n      const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n      if (v > maxV) {\n        this.vx *= maxV / v;\n        this.vy *= maxV / v;\n      }\n      this.x += this.vx;\n      this.y += this.vy;\n    }\n  }\n  class ModelSettings {\n    constructor(json) {\n      this.json = json;\n      let url2 = json.url;\n      if (typeof url2 !== \"string\") {\n        throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n      }\n      this.url = url2;\n      this.name = folderName(this.url);\n    }\n    resolveURL(path) {\n      return utils.url.resolve(this.url, path);\n    }\n    replaceFiles(replacer) {\n      this.moc = replacer(this.moc, \"moc\");\n      if (this.pose !== void 0) {\n        this.pose = replacer(this.pose, \"pose\");\n      }\n      if (this.physics !== void 0) {\n        this.physics = replacer(this.physics, \"physics\");\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n      }\n    }\n    getDefinedFiles() {\n      const files = [];\n      this.replaceFiles((file) => {\n        files.push(file);\n        return file;\n      });\n      return files;\n    }\n    validateFiles(files) {\n      const assertFileExists = (expectedFile, shouldThrow) => {\n        const actualPath = this.resolveURL(expectedFile);\n        if (!files.includes(actualPath)) {\n          if (shouldThrow) {\n            throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n          }\n          return false;\n        }\n        return true;\n      };\n      const essentialFiles = [this.moc, ...this.textures];\n      essentialFiles.forEach((texture) => assertFileExists(texture, true));\n      const definedFiles = this.getDefinedFiles();\n      return definedFiles.filter((file) => assertFileExists(file, false));\n    }\n  }\n  var MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n    MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n    MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n    MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n    MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n    return MotionPriority2;\n  })(MotionPriority || {});\n  class MotionState {\n    constructor() {\n      this.debug = false;\n      this.currentPriority = 0;\n      this.reservePriority = 0;\n    }\n    reserve(group, index, priority) {\n      if (priority <= 0) {\n        logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n        return false;\n      }\n      if (group === this.currentGroup && index === this.currentIndex) {\n        logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n        return false;\n      }\n      if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n        logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n        return false;\n      }\n      if (priority === 1) {\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n          return false;\n        }\n        if (this.reservedIdleGroup !== void 0) {\n          logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n          return false;\n        }\n        this.setReservedIdle(group, index);\n      } else {\n        if (priority < 3) {\n          if (priority <= this.currentPriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n          if (priority <= this.reservePriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n        }\n        this.setReserved(group, index, priority);\n      }\n      return true;\n    }\n    start(motion, group, index, priority) {\n      if (priority === 1) {\n        this.setReservedIdle(void 0, void 0);\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n          return false;\n        }\n      } else {\n        if (group !== this.reservedGroup || index !== this.reservedIndex) {\n          logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n          return false;\n        }\n        this.setReserved(void 0, void 0, 0);\n      }\n      if (!motion) {\n        return false;\n      }\n      this.setCurrent(group, index, priority);\n      return true;\n    }\n    complete() {\n      this.setCurrent(void 0, void 0, 0);\n    }\n    setCurrent(group, index, priority) {\n      this.currentPriority = priority;\n      this.currentGroup = group;\n      this.currentIndex = index;\n    }\n    setReserved(group, index, priority) {\n      this.reservePriority = priority;\n      this.reservedGroup = group;\n      this.reservedIndex = index;\n    }\n    setReservedIdle(group, index) {\n      this.reservedIdleGroup = group;\n      this.reservedIdleIndex = index;\n    }\n    isActive(group, index) {\n      return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n    }\n    reset() {\n      this.setCurrent(void 0, void 0, 0);\n      this.setReserved(void 0, void 0, 0);\n      this.setReservedIdle(void 0, void 0);\n    }\n    shouldRequestIdleMotion() {\n      return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n    }\n    shouldOverrideExpression() {\n      return !exports2.config.preserveExpressionOnMotion && this.currentPriority > 1;\n    }\n    dump(requestedGroup, requestedIndex) {\n      if (this.debug) {\n        const keys = [\n          \"currentPriority\",\n          \"reservePriority\",\n          \"currentGroup\",\n          \"currentIndex\",\n          \"reservedGroup\",\n          \"reservedIndex\",\n          \"reservedIdleGroup\",\n          \"reservedIdleIndex\"\n        ];\n        return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n      }\n      return \"\";\n    }\n  }\n  const TAG$2 = \"SoundManager\";\n  const VOLUME = 0.5;\n  class SoundManager {\n    static get volume() {\n      return this._volume;\n    }\n    static set volume(value) {\n      this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n      this.audios.forEach((audio) => audio.volume = this._volume);\n    }\n    static add(file, onFinish, onError) {\n      const audio = new Audio(file);\n      audio.volume = this._volume;\n      audio.preload = \"auto\";\n      audio.addEventListener(\"ended\", () => {\n        this.dispose(audio);\n        onFinish == null ? void 0 : onFinish();\n      });\n      audio.addEventListener(\"error\", (e) => {\n        this.dispose(audio);\n        logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n        onError == null ? void 0 : onError(e.error);\n      });\n      this.audios.push(audio);\n      return audio;\n    }\n    static play(audio) {\n      return new Promise((resolve, reject) => {\n        var _a;\n        (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n          audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n          reject(e);\n        });\n        if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n          resolve();\n        } else {\n          audio.addEventListener(\"canplaythrough\", resolve);\n        }\n      });\n    }\n    static dispose(audio) {\n      audio.pause();\n      audio.removeAttribute(\"src\");\n      remove(this.audios, audio);\n    }\n    static destroy() {\n      for (let i = this.audios.length - 1; i >= 0; i--) {\n        this.dispose(this.audios[i]);\n      }\n    }\n  }\n  SoundManager.audios = [];\n  SoundManager._volume = VOLUME;\n  var MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n    MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n    MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n    MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n    return MotionPreloadStrategy2;\n  })(MotionPreloadStrategy || {});\n  class MotionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.motionGroups = {};\n      this.state = new MotionState();\n      this.playing = false;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `MotionManager(${settings.name})`;\n      this.state.tag = this.tag;\n    }\n    init(options) {\n      if (options == null ? void 0 : options.idleMotionGroup) {\n        this.groups.idle = options.idleMotionGroup;\n      }\n      this.setupMotions(options);\n      this.stopAllMotions();\n    }\n    setupMotions(options) {\n      for (const group of Object.keys(this.definitions)) {\n        this.motionGroups[group] = [];\n      }\n      let groups;\n      switch (options == null ? void 0 : options.motionPreload) {\n        case \"NONE\":\n          return;\n        case \"ALL\":\n          groups = Object.keys(this.definitions);\n          break;\n        case \"IDLE\":\n        default:\n          groups = [this.groups.idle];\n          break;\n      }\n      for (const group of groups) {\n        if (this.definitions[group]) {\n          for (let i = 0; i < this.definitions[group].length; i++) {\n            this.loadMotion(group, i).then();\n          }\n        }\n      }\n    }\n    loadMotion(group, index) {\n      return __async(this, null, function* () {\n        var _a;\n        if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n          logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index] === null) {\n          logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index]) {\n          return this.motionGroups[group][index];\n        }\n        const motion = yield this._loadMotion(group, index);\n        if (this.destroyed) {\n          return;\n        }\n        this.motionGroups[group][index] = motion != null ? motion : null;\n        return motion;\n      });\n    }\n    _loadMotion(group, index) {\n      throw new Error(\"Not implemented.\");\n    }\n    startMotion(_0, _1) {\n      return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n        var _a;\n        if (!this.state.reserve(group, index, priority)) {\n          return false;\n        }\n        const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return false;\n        }\n        if (this.currentAudio) {\n          SoundManager.dispose(this.currentAudio);\n        }\n        let audio;\n        if (exports2.config.sound) {\n          const soundURL = this.getSoundFile(definition);\n          if (soundURL) {\n            try {\n              audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n              this.currentAudio = audio;\n            } catch (e) {\n              logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n            }\n          }\n        }\n        const motion = yield this.loadMotion(group, index);\n        if (audio) {\n          const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n          if (exports2.config.motionSync) {\n            yield readyToPlay;\n          }\n        }\n        if (!this.state.start(motion, group, index, priority)) {\n          if (audio) {\n            SoundManager.dispose(audio);\n            this.currentAudio = void 0;\n          }\n          return false;\n        }\n        logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n        this.emit(\"motionStart\", group, index, audio);\n        if (this.state.shouldOverrideExpression()) {\n          this.expressionManager && this.expressionManager.resetExpression();\n        }\n        this.playing = true;\n        this._startMotion(motion);\n        return true;\n      });\n    }\n    startRandomMotion(group, priority) {\n      return __async(this, null, function* () {\n        const groupDefs = this.definitions[group];\n        if (groupDefs == null ? void 0 : groupDefs.length) {\n          const availableIndices = [];\n          for (let i = 0; i < groupDefs.length; i++) {\n            if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.startMotion(group, availableIndices[index], priority);\n          }\n        }\n        return false;\n      });\n    }\n    stopAllMotions() {\n      this._stopAllMotions();\n      this.state.reset();\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n        this.currentAudio = void 0;\n      }\n    }\n    update(model, now) {\n      var _a;\n      if (this.isFinished()) {\n        if (this.playing) {\n          this.playing = false;\n          this.emit(\"motionFinish\");\n        }\n        if (this.state.shouldOverrideExpression()) {\n          (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n        }\n        this.state.complete();\n        if (this.state.shouldRequestIdleMotion()) {\n          this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n        }\n      }\n      return this.updateParameters(model, now);\n    }\n    destroy() {\n      var _a;\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.stopAllMotions();\n      (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.motionGroups = void 0;\n    }\n  }\n  const tempBounds = { x: 0, y: 0, width: 0, height: 0 };\n  class InternalModel extends utils.EventEmitter {\n    constructor() {\n      super(...arguments);\n      this.focusController = new FocusController();\n      this.originalWidth = 0;\n      this.originalHeight = 0;\n      this.width = 0;\n      this.height = 0;\n      this.localTransform = new math.Matrix();\n      this.drawingMatrix = new math.Matrix();\n      this.hitAreas = {};\n      this.textureFlipY = false;\n      this.viewport = [0, 0, 0, 0];\n      this.destroyed = false;\n    }\n    init() {\n      this.setupLayout();\n      this.setupHitAreas();\n    }\n    setupLayout() {\n      const self2 = this;\n      const size = this.getSize();\n      self2.originalWidth = size[0];\n      self2.originalHeight = size[1];\n      const layout = Object.assign({\n        width: LOGICAL_WIDTH,\n        height: LOGICAL_HEIGHT\n      }, this.getLayout());\n      this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n      self2.width = this.originalWidth * this.localTransform.a;\n      self2.height = this.originalHeight * this.localTransform.d;\n      const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n      const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n      this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n    setupHitAreas() {\n      const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n      for (const def of definitions) {\n        this.hitAreas[def.name] = def;\n      }\n    }\n    hitTest(x, y) {\n      return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n    }\n    isHit(hitAreaName, x, y) {\n      if (!this.hitAreas[hitAreaName]) {\n        return false;\n      }\n      const drawIndex = this.hitAreas[hitAreaName].index;\n      const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n      return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n    getDrawableBounds(index, bounds) {\n      const vertices = this.getDrawableVertices(index);\n      let left = vertices[0];\n      let right = vertices[0];\n      let top = vertices[1];\n      let bottom = vertices[1];\n      for (let i = 0; i < vertices.length; i += 2) {\n        const vx = vertices[i];\n        const vy = vertices[i + 1];\n        left = Math.min(vx, left);\n        right = Math.max(vx, right);\n        top = Math.min(vy, top);\n        bottom = Math.max(vy, bottom);\n      }\n      bounds != null ? bounds : bounds = {};\n      bounds.x = left;\n      bounds.y = top;\n      bounds.width = right - left;\n      bounds.height = bottom - top;\n      return bounds;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n    update(dt, now) {\n      this.focusController.update(dt);\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.motionManager.destroy();\n      this.motionManager = void 0;\n    }\n  }\n  const TAG$1 = \"XHRLoader\";\n  class NetworkError extends Error {\n    constructor(message, url, status, aborted = false) {\n      super(message);\n      this.url = url;\n      this.status = status;\n      this.aborted = aborted;\n    }\n  }\n  const _XHRLoader = class {\n    static createXHR(target, url, type, onload, onerror) {\n      const xhr = new XMLHttpRequest();\n      _XHRLoader.allXhrSet.add(xhr);\n      if (target) {\n        let xhrSet = _XHRLoader.xhrMap.get(target);\n        if (!xhrSet) {\n          xhrSet = /* @__PURE__ */ new Set([xhr]);\n          _XHRLoader.xhrMap.set(target, xhrSet);\n        } else {\n          xhrSet.add(xhr);\n        }\n        if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n          target.once(\"destroy\", _XHRLoader.cancelXHRs);\n        }\n      }\n      xhr.open(\"GET\", url);\n      xhr.responseType = type;\n      xhr.onload = () => {\n        if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n          onload(xhr.response);\n        } else {\n          xhr.onerror();\n        }\n      };\n      xhr.onerror = () => {\n        logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n        onerror(new NetworkError(\"Network error.\", url, xhr.status));\n      };\n      xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url, xhr.status, true));\n      xhr.onloadend = () => {\n        var _a;\n        _XHRLoader.allXhrSet.delete(xhr);\n        if (target) {\n          (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n        }\n      };\n      return xhr;\n    }\n    static cancelXHRs() {\n      var _a;\n      (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n        xhr.abort();\n        _XHRLoader.allXhrSet.delete(xhr);\n      });\n      _XHRLoader.xhrMap.delete(this);\n    }\n    static release() {\n      _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n      _XHRLoader.allXhrSet.clear();\n      _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n    }\n  };\n  let XHRLoader = _XHRLoader;\n  XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  XHRLoader.allXhrSet = /* @__PURE__ */ new Set();\n  XHRLoader.loader = (context, next) => {\n    return new Promise((resolve, reject) => {\n      const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n        context.result = data;\n        resolve();\n      }, reject);\n      xhr.send();\n    });\n  };\n  function runMiddlewares(middleware, context) {\n    let index = -1;\n    return dispatch(0);\n    function dispatch(i, err) {\n      if (err)\n        return Promise.reject(err);\n      if (i <= index)\n        return Promise.reject(new Error(\"next() called multiple times\"));\n      index = i;\n      const fn = middleware[i];\n      if (!fn)\n        return Promise.resolve();\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err2) {\n        return Promise.reject(err2);\n      }\n    }\n  }\n  class Live2DLoader {\n    static load(context) {\n      return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n  }\n  Live2DLoader.middlewares = [XHRLoader.loader];\n  function createTexture(url, options = {}) {\n    var _a;\n    const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n    if (core.Texture.fromURL) {\n      return core.Texture.fromURL(url, textureOptions).catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        }\n        const err = new Error(\"Texture loading error\");\n        err.event = e;\n        throw err;\n      });\n    }\n    textureOptions.resourceOptions.autoLoad = false;\n    const texture = core.Texture.from(url, textureOptions);\n    if (texture.baseTexture.valid) {\n      return Promise.resolve(texture);\n    }\n    const resource = texture.baseTexture.resource;\n    (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n      const errorHandler = (event) => {\n        resource.source.removeEventListener(\"error\", errorHandler);\n        const err = new Error(\"Texture loading error\");\n        err.event = event;\n        reject(err);\n      };\n      resource.source.addEventListener(\"error\", errorHandler);\n      resource.load().then(() => resolve(texture)).catch(errorHandler);\n    });\n    return resource._live2d_load;\n  }\n  const TAG = \"Live2DFactory\";\n  const urlToJSON = (context, next) => __async(this, null, function* () {\n    if (typeof context.source === \"string\") {\n      const data = yield Live2DLoader.load({\n        url: context.source,\n        type: \"json\",\n        target: context.live2dModel\n      });\n      data.url = context.source;\n      context.source = data;\n      context.live2dModel.emit(\"settingsJSONLoaded\", data);\n    }\n    return next();\n  });\n  const jsonToSettings = (context, next) => __async(this, null, function* () {\n    if (context.source instanceof ModelSettings) {\n      context.settings = context.source;\n      return next();\n    } else if (typeof context.source === \"object\") {\n      const runtime = Live2DFactory.findRuntime(context.source);\n      if (runtime) {\n        const settings = runtime.createModelSettings(context.source);\n        context.settings = settings;\n        context.live2dModel.emit(\"settingsLoaded\", settings);\n        return next();\n      }\n    }\n    throw new TypeError(\"Unknown settings format.\");\n  });\n  const waitUntilReady = (context, next) => {\n    if (context.settings) {\n      const runtime = Live2DFactory.findRuntime(context.settings);\n      if (runtime) {\n        return runtime.ready().then(next);\n      }\n    }\n    return next();\n  };\n  const setupOptionals = (context, next) => __async(this, null, function* () {\n    yield next();\n    const internalModel = context.internalModel;\n    if (internalModel) {\n      const settings = context.settings;\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (runtime) {\n        const tasks = [];\n        if (settings.pose) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.pose,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n            context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n          }).catch((e) => {\n            context.live2dModel.emit(\"poseLoadError\", e);\n            logger.warn(TAG, \"Failed to load pose.\", e);\n          }));\n        }\n        if (settings.physics) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.physics,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n            context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n          }).catch((e) => {\n            context.live2dModel.emit(\"physicsLoadError\", e);\n            logger.warn(TAG, \"Failed to load physics.\", e);\n          }));\n        }\n        if (tasks.length) {\n          yield Promise.all(tasks);\n        }\n      }\n    }\n  });\n  const setupEssentials = (context, next) => __async(this, null, function* () {\n    if (context.settings) {\n      const live2DModel = context.live2dModel;\n      const textureLoadings = context.settings.textures.map((tex) => {\n        const url = context.settings.resolveURL(tex);\n        return createTexture(url, { crossOrigin: context.options.crossOrigin });\n      });\n      yield next();\n      if (context.internalModel) {\n        live2DModel.internalModel = context.internalModel;\n        live2DModel.emit(\"modelLoaded\", context.internalModel);\n      } else {\n        throw new TypeError(\"Missing internal model.\");\n      }\n      live2DModel.textures = yield Promise.all(textureLoadings);\n      live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n    } else {\n      throw new TypeError(\"Missing settings.\");\n    }\n  });\n  const createInternalModel = (context, next) => __async(this, null, function* () {\n    const settings = context.settings;\n    if (settings instanceof ModelSettings) {\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (!runtime) {\n        throw new TypeError(\"Unknown model settings.\");\n      }\n      const modelData = yield Live2DLoader.load({\n        settings,\n        url: settings.moc,\n        type: \"arraybuffer\",\n        target: context.live2dModel\n      });\n      if (!runtime.isValidMoc(modelData)) {\n        throw new Error(\"Invalid moc data\");\n      }\n      const coreModel = runtime.createCoreModel(modelData);\n      context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n      return next();\n    }\n    throw new TypeError(\"Missing settings.\");\n  });\n  const _Live2DFactory = class {\n    static registerRuntime(runtime) {\n      _Live2DFactory.runtimes.push(runtime);\n      _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n    static findRuntime(source) {\n      for (const runtime of _Live2DFactory.runtimes) {\n        if (runtime.test(source)) {\n          return runtime;\n        }\n      }\n    }\n    static setupLive2DModel(live2dModel, source, options) {\n      return __async(this, null, function* () {\n        const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n        const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n        yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n          live2dModel,\n          source,\n          options: options || {}\n        });\n        yield readyEventEmitted;\n        live2dModel.emit(\"load\");\n      });\n    }\n    static loadMotion(motionManager, group, index) {\n      var _a, _b;\n      const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n      try {\n        const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n        if (!tasks) {\n          tasks = {};\n          _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n        }\n        let taskGroup = tasks[group];\n        if (!taskGroup) {\n          taskGroup = [];\n          tasks[group] = taskGroup;\n        }\n        const path = motionManager.getMotionFile(definition);\n        (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n          url: path,\n          settings: motionManager.settings,\n          type: motionManager.motionDataType,\n          target: motionManager\n        }).then((data) => {\n          var _a2;\n          const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n          if (taskGroup2) {\n            delete taskGroup2[index];\n          }\n          const motion = motionManager.createMotion(data, group, definition);\n          motionManager.emit(\"motionLoaded\", group, index, motion);\n          return motion;\n        }).catch((e) => {\n          logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n          handleError(e);\n        });\n        return taskGroup[index];\n      } catch (e) {\n        logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static loadExpression(expressionManager, index) {\n      var _a;\n      const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n      try {\n        const definition = expressionManager.definitions[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (!tasks) {\n          tasks = [];\n          _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n        }\n        const path = expressionManager.getExpressionFile(definition);\n        (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n          url: path,\n          settings: expressionManager.settings,\n          type: \"json\",\n          target: expressionManager\n        }).then((data) => {\n          const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n          if (tasks2) {\n            delete tasks2[index];\n          }\n          const expression = expressionManager.createExpression(data, definition);\n          expressionManager.emit(\"expressionLoaded\", index, expression);\n          return expression;\n        }).catch((e) => {\n          logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n          handleError(e);\n        });\n        return tasks[index];\n      } catch (e) {\n        logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static releaseTasks() {\n      if (this instanceof MotionManager) {\n        _Live2DFactory.motionTasksMap.delete(this);\n      } else {\n        _Live2DFactory.expressionTasksMap.delete(this);\n      }\n    }\n  };\n  let Live2DFactory = _Live2DFactory;\n  Live2DFactory.runtimes = [];\n  Live2DFactory.urlToJSON = urlToJSON;\n  Live2DFactory.jsonToSettings = jsonToSettings;\n  Live2DFactory.waitUntilReady = waitUntilReady;\n  Live2DFactory.setupOptionals = setupOptionals;\n  Live2DFactory.setupEssentials = setupEssentials;\n  Live2DFactory.createInternalModel = createInternalModel;\n  Live2DFactory.live2DModelMiddlewares = [\n    urlToJSON,\n    jsonToSettings,\n    waitUntilReady,\n    setupOptionals,\n    setupEssentials,\n    createInternalModel\n  ];\n  Live2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\n  Live2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\n  MotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n    return Live2DFactory.loadMotion(this, group, index);\n  };\n  ExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n    return Live2DFactory.loadExpression(this, index);\n  };\n  class InteractionMixin {\n    constructor() {\n      this._autoInteract = false;\n    }\n    get autoInteract() {\n      return this._autoInteract;\n    }\n    set autoInteract(autoInteract) {\n      if (autoInteract !== this._autoInteract) {\n        if (autoInteract) {\n          this.on(\"pointertap\", onTap, this);\n        } else {\n          this.off(\"pointertap\", onTap, this);\n        }\n        this._autoInteract = autoInteract;\n      }\n    }\n    registerInteraction(manager) {\n      if (manager !== this.interactionManager) {\n        this.unregisterInteraction();\n        if (this._autoInteract && manager) {\n          this.interactionManager = manager;\n          manager.on(\"pointermove\", onPointerMove, this);\n        }\n      }\n    }\n    unregisterInteraction() {\n      var _a;\n      if (this.interactionManager) {\n        (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n        this.interactionManager = void 0;\n      }\n    }\n  }\n  function onTap(event) {\n    this.tap(event.data.global.x, event.data.global.y);\n  }\n  function onPointerMove(event) {\n    this.focus(event.data.global.x, event.data.global.y);\n  }\n  class Live2DTransform extends math.Transform {\n  }\n  const tempPoint = new math.Point();\n  const tempMatrix$1 = new math.Matrix();\n  let tickerRef;\n  class Live2DModel extends display.Container {\n    constructor(options) {\n      super();\n      this.tag = \"Live2DModel(uninitialized)\";\n      this.textures = [];\n      this.transform = new Live2DTransform();\n      this.anchor = new math.ObservablePoint(this.onAnchorChange, this, 0, 0);\n      this.glContextID = -1;\n      this.elapsedTime = performance.now();\n      this.deltaTime = 0;\n      this._autoUpdate = false;\n      this.once(\"modelLoaded\", () => this.init(options));\n    }\n    static from(source, options) {\n      const model = new this(options);\n      return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n    static fromSync(source, options) {\n      const model = new this(options);\n      Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n      return model;\n    }\n    static registerTicker(tickerClass) {\n      tickerRef = tickerClass;\n    }\n    get autoUpdate() {\n      return this._autoUpdate;\n    }\n    set autoUpdate(autoUpdate) {\n      var _a;\n      tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n      if (autoUpdate) {\n        if (!this._destroyed) {\n          if (tickerRef) {\n            tickerRef.shared.add(this.onTickerUpdate, this);\n            this._autoUpdate = true;\n          } else {\n            logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n          }\n        }\n      } else {\n        tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n        this._autoUpdate = false;\n      }\n    }\n    init(options) {\n      this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n      const _options = Object.assign({\n        autoUpdate: true,\n        autoInteract: true\n      }, options);\n      if (_options.autoInteract) {\n        this.interactive = true;\n      }\n      this.autoInteract = _options.autoInteract;\n      this.autoUpdate = _options.autoUpdate;\n    }\n    onAnchorChange() {\n      this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n    motion(group, index, priority) {\n      return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n    expression(id) {\n      if (this.internalModel.motionManager.expressionManager) {\n        return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n      }\n      return Promise.resolve(false);\n    }\n    focus(x, y, instant = false) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint, true);\n      let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n      let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n      let radian = Math.atan2(ty, tx);\n      this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n    }\n    tap(x, y) {\n      const hitAreaNames = this.hitTest(x, y);\n      if (hitAreaNames.length) {\n        logger.log(this.tag, `Hit`, hitAreaNames);\n        this.emit(\"hit\", hitAreaNames);\n      }\n    }\n    hitTest(x, y) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint);\n      return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n    toModelPosition(position, result = position.clone(), skipUpdate) {\n      if (!skipUpdate) {\n        this._recursivePostUpdateTransform();\n        if (!this.parent) {\n          this.parent = this._tempDisplayObjectParent;\n          this.displayObjectUpdateTransform();\n          this.parent = null;\n        } else {\n          this.displayObjectUpdateTransform();\n        }\n      }\n      this.transform.worldTransform.applyInverse(position, result);\n      this.internalModel.localTransform.applyInverse(result, result);\n      return result;\n    }\n    containsPoint(point) {\n      return this.getBounds(true).contains(point.x, point.y);\n    }\n    _calculateBounds() {\n      this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n    onTickerUpdate() {\n      this.update(tickerRef.shared.deltaMS);\n    }\n    update(dt) {\n      this.deltaTime += dt;\n      this.elapsedTime += dt;\n    }\n    _render(renderer) {\n      this.registerInteraction(renderer.plugins.interaction);\n      renderer.batch.reset();\n      renderer.geometry.reset();\n      renderer.shader.reset();\n      renderer.state.reset();\n      let shouldUpdateTexture = false;\n      if (this.glContextID !== renderer.CONTEXT_UID) {\n        this.glContextID = renderer.CONTEXT_UID;\n        this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n        shouldUpdateTexture = true;\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        const texture = this.textures[i];\n        if (!texture.valid) {\n          continue;\n        }\n        if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n          renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n          renderer.texture.bind(texture.baseTexture, 0);\n        }\n        this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n        texture.baseTexture.touched = renderer.textureGC.count;\n      }\n      const viewport = renderer.framebuffer.viewport;\n      this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n      if (this.deltaTime) {\n        this.internalModel.update(this.deltaTime, this.elapsedTime);\n        this.deltaTime = 0;\n      }\n      const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n      this.internalModel.updateTransform(internalTransform);\n      this.internalModel.draw(renderer.gl);\n      renderer.state.reset();\n      renderer.texture.reset();\n    }\n    destroy(options) {\n      this.emit(\"destroy\");\n      this.autoUpdate = false;\n      this.unregisterInteraction();\n      if (options == null ? void 0 : options.texture) {\n        this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n      }\n      this.internalModel.destroy();\n      super.destroy(options);\n    }\n  }\n  applyMixins(Live2DModel, [InteractionMixin]);\n  const _FileLoader = class {\n    static resolveURL(settingsURL, filePath) {\n      var _a;\n      const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n      if (resolved === void 0) {\n        throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n      }\n      return resolved;\n    }\n    static upload(files, settings) {\n      return __async(this, null, function* () {\n        const fileMap = {};\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n          if (actualFile) {\n            fileMap[definedFile] = URL.createObjectURL(actualFile);\n          }\n        }\n        _FileLoader.filesMap[settings._objectURL] = fileMap;\n      });\n    }\n    static createSettings(files) {\n      return __async(this, null, function* () {\n        const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n        if (!settingsFile) {\n          throw new TypeError(\"Settings file not found\");\n        }\n        const settingsText = yield _FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFile.webkitRelativePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        const settings = runtime.createModelSettings(settingsJSON);\n        settings._objectURL = URL.createObjectURL(settingsFile);\n        return settings;\n      });\n    }\n    static readText(file) {\n      return __async(this, null, function* () {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsText(file, \"utf8\");\n        });\n      });\n    }\n  };\n  let FileLoader = _FileLoader;\n  FileLoader.filesMap = {};\n  FileLoader.factory = (context, next) => __async(this, null, function* () {\n    if (Array.isArray(context.source) && context.source[0] instanceof File) {\n      const files = context.source;\n      let settings = files.settings;\n      if (!settings) {\n        settings = yield _FileLoader.createSettings(files);\n      } else if (!settings._objectURL) {\n        throw new Error('\"_objectURL\" must be specified in ModelSettings');\n      }\n      settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n      yield _FileLoader.upload(files, settings);\n      settings.resolveURL = function(url) {\n        return _FileLoader.resolveURL(this._objectURL, url);\n      };\n      context.source = settings;\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          const objectURL = this.settings._objectURL;\n          URL.revokeObjectURL(objectURL);\n          if (_FileLoader.filesMap[objectURL]) {\n            for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n              URL.revokeObjectURL(resourceObjectURL);\n            }\n          }\n          delete _FileLoader.filesMap[objectURL];\n        });\n      });\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n  const _ZipLoader = class {\n    static unzip(reader, settings) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const requiredFilePaths = [];\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          if (filePaths.includes(actualPath)) {\n            requiredFilePaths.push(actualPath);\n          }\n        }\n        const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n        for (let i = 0; i < files.length; i++) {\n          const path = requiredFilePaths[i];\n          const file = files[i];\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: path\n          });\n        }\n        return files;\n      });\n    }\n    static createSettings(reader) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n        if (!settingsFilePath) {\n          throw new Error(\"Settings file not found\");\n        }\n        const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n        if (!settingsText) {\n          throw new Error(\"Empty settings file: \" + settingsFilePath);\n        }\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFilePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        return runtime.createModelSettings(settingsJSON);\n      });\n    }\n    static zipReader(data, url) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFilePaths(reader) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFiles(reader, paths) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static readText(reader, path) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static releaseReader(reader) {\n    }\n  };\n  let ZipLoader = _ZipLoader;\n  ZipLoader.ZIP_PROTOCOL = \"zip://\";\n  ZipLoader.uid = 0;\n  ZipLoader.factory = (context, next) => __async(this, null, function* () {\n    const source = context.source;\n    let sourceURL;\n    let zipBlob;\n    let settings;\n    if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n      if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n        sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n      } else {\n        sourceURL = source;\n      }\n      zipBlob = yield Live2DLoader.load({\n        url: sourceURL,\n        type: \"blob\",\n        target: context.live2dModel\n      });\n    } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n      zipBlob = source[0];\n      sourceURL = URL.createObjectURL(zipBlob);\n      settings = source.settings;\n    }\n    if (zipBlob) {\n      if (!zipBlob.size) {\n        throw new Error(\"Empty zip file\");\n      }\n      const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n      if (!settings) {\n        settings = yield _ZipLoader.createSettings(reader);\n      }\n      settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n      const files = yield _ZipLoader.unzip(reader, settings);\n      files.settings = settings;\n      context.source = files;\n      if (sourceURL.startsWith(\"blob:\")) {\n        context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n          internalModel.once(\"destroy\", function() {\n            URL.revokeObjectURL(sourceURL);\n          });\n        });\n      }\n      _ZipLoader.releaseReader(reader);\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n  if (!window.Live2D) {\n    throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n  }\n  const originalUpdateParam = Live2DMotion.prototype.updateParam;\n  Live2DMotion.prototype.updateParam = function(model, entry) {\n    originalUpdateParam.call(this, model, entry);\n    if (entry.isFinished() && this.onFinishHandler) {\n      this.onFinishHandler(this);\n      delete this.onFinishHandler;\n    }\n  };\n  class Live2DExpression extends AMotion {\n    constructor(json) {\n      super();\n      this.params = [];\n      this.setFadeIn(json.fade_in > 0 ? json.fade_in : exports2.config.expressionFadingDuration);\n      this.setFadeOut(json.fade_out > 0 ? json.fade_out : exports2.config.expressionFadingDuration);\n      if (Array.isArray(json.params)) {\n        json.params.forEach((param) => {\n          const calc = param.calc || \"add\";\n          if (calc === \"add\") {\n            const defaultValue = param.def || 0;\n            param.val -= defaultValue;\n          } else if (calc === \"mult\") {\n            const defaultValue = param.def || 1;\n            param.val /= defaultValue;\n          }\n          this.params.push({\n            calc,\n            val: param.val,\n            id: param.id\n          });\n        });\n      }\n    }\n    updateParamExe(model, time, weight, motionQueueEnt) {\n      this.params.forEach((param) => {\n        model.setParamFloat(param.id, param.val * weight);\n      });\n    }\n  }\n  class Cubism2ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new MotionQueueManager();\n      this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.file;\n    }\n    createExpression(data, definition) {\n      return new Live2DExpression(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion);\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, dt) {\n      return this.queueManager.updateParam(model);\n    }\n  }\n  class Cubism2MotionManager extends MotionManager {\n    constructor(settings, options) {\n      super(settings, options);\n      this.groups = { idle: \"idle\" };\n      this.motionDataType = \"arraybuffer\";\n      this.queueManager = new MotionQueueManager();\n      this.definitions = this.settings.motions;\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n      }\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    createMotion(data, group, definition) {\n      const motion = Live2DMotion.loadMotion(data);\n      const defaultFadingDuration = group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration;\n      motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n      motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.file;\n    }\n    getMotionName(definition) {\n      return definition.file;\n    }\n    getSoundFile(definition) {\n      return definition.sound;\n    }\n    _startMotion(motion, onFinish) {\n      motion.onFinishHandler = onFinish;\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion);\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.updateParam(model);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager = void 0;\n    }\n  }\n  class Live2DEyeBlink {\n    constructor(coreModel) {\n      this.coreModel = coreModel;\n      this.blinkInterval = 4e3;\n      this.closingDuration = 100;\n      this.closedDuration = 50;\n      this.openingDuration = 150;\n      this.eyeState = 0;\n      this.eyeParamValue = 1;\n      this.closedTimer = 0;\n      this.nextBlinkTimeLeft = this.blinkInterval;\n      this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n      this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n    }\n    setEyeParams(value) {\n      this.eyeParamValue = clamp(value, 0, 1);\n      this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n      this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n    }\n    update(dt) {\n      switch (this.eyeState) {\n        case 0:\n          this.nextBlinkTimeLeft -= dt;\n          if (this.nextBlinkTimeLeft < 0) {\n            this.eyeState = 1;\n            this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n          }\n          break;\n        case 1:\n          this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n          if (this.eyeParamValue <= 0) {\n            this.eyeState = 2;\n            this.closedTimer = 0;\n          }\n          break;\n        case 2:\n          this.closedTimer += dt;\n          if (this.closedTimer >= this.closedDuration) {\n            this.eyeState = 3;\n          }\n          break;\n        case 3:\n          this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n          if (this.eyeParamValue >= 1) {\n            this.eyeState = 0;\n          }\n      }\n    }\n  }\n  const tempMatrixArray = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  class Cubism2InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.textureFlipY = true;\n      this.drawDataCount = 0;\n      this.disableCulling = false;\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism2MotionManager(settings, options);\n      this.eyeBlink = new Live2DEyeBlink(coreModel);\n      this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n      this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n      this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n      this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n      this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n      this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n      this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n      this.init();\n    }\n    init() {\n      super.init();\n      if (this.settings.initParams) {\n        this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n      }\n      if (this.settings.initOpacities) {\n        this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n      }\n      this.coreModel.saveParam();\n      const arr = this.coreModel.getModelContext()._$aS;\n      if (arr == null ? void 0 : arr.length) {\n        this.drawDataCount = arr.length;\n      }\n      let culling = this.coreModel.drawParamWebGL.culling;\n      Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n        set: (v) => culling = v,\n        get: () => this.disableCulling ? false : culling\n      });\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      const originalSetupClip = clipManager.setupClip;\n      clipManager.setupClip = (modelContext, drawParam) => {\n        originalSetupClip.call(clipManager, modelContext, drawParam);\n        drawParam.gl.viewport(...this.viewport);\n      };\n    }\n    getSize() {\n      return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          let commonKey = key;\n          if (key === \"center_x\") {\n            commonKey = \"centerX\";\n          } else if (key === \"center_y\") {\n            commonKey = \"centerY\";\n          }\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    updateWebGLContext(gl, glContextID) {\n      const drawParamWebGL = this.coreModel.drawParamWebGL;\n      drawParamWebGL.firstDraw = true;\n      drawParamWebGL.setGL(gl);\n      drawParamWebGL.glno = glContextID;\n      for (const prop in drawParamWebGL) {\n        if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n          drawParamWebGL[prop] = null;\n        }\n      }\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      clipManager.curFrameNo = glContextID;\n      const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n      clipManager.getMaskRenderTexture();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    bindTexture(index, texture) {\n      this.coreModel.setTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a;\n      return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.id,\n        name: hitArea.name,\n        index: this.coreModel.getDrawDataIndex(hitArea.id)\n      }))) || [];\n    }\n    getDrawableIDs() {\n      const modelContext = this.coreModel.getModelContext();\n      const ids = [];\n      for (let i = 0; i < this.drawDataCount; i++) {\n        const drawData = modelContext.getDrawData(i);\n        if (drawData) {\n          ids.push(drawData.getDrawDataID().id);\n        }\n      }\n      return ids;\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawDataIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      return this.coreModel.getTransformedPoints(drawIndex).slice();\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParam();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt, now);\n      (_c = this.physics) == null ? void 0 : _c.update(now);\n      (_d = this.pose) == null ? void 0 : _d.update(dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParam();\n    }\n    updateFocus() {\n      this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n      this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n      this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      const t = now / 1e3 * 2 * Math.PI;\n      this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n      this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n    }\n    draw(gl) {\n      const disableCulling = this.disableCulling;\n      if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n        this.disableCulling = true;\n      }\n      const matrix = this.drawingMatrix;\n      tempMatrixArray[0] = matrix.a;\n      tempMatrixArray[1] = matrix.b;\n      tempMatrixArray[4] = matrix.c;\n      tempMatrixArray[5] = matrix.d;\n      tempMatrixArray[12] = matrix.tx;\n      tempMatrixArray[13] = matrix.ty;\n      this.coreModel.setMatrix(tempMatrixArray);\n      this.coreModel.draw();\n      this.disableCulling = disableCulling;\n    }\n    destroy() {\n      super.destroy();\n      this.coreModel = void 0;\n    }\n  }\n  class Cubism2ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      this.motions = {};\n      if (!Cubism2ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      this.moc = json.model;\n      copyArray(\"string\", json, this, \"textures\", \"textures\");\n      this.copy(json);\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every((item) => typeof item === \"string\");\n    }\n    copy(json) {\n      copyProperty(\"string\", json, this, \"name\", \"name\");\n      copyProperty(\"string\", json, this, \"pose\", \"pose\");\n      copyProperty(\"string\", json, this, \"physics\", \"physics\");\n      copyProperty(\"object\", json, this, \"layout\", \"layout\");\n      copyProperty(\"object\", json, this, \"motions\", \"motions\");\n      copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n      copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n      copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n      copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n          if (motions[i].sound !== void 0) {\n            motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n        }\n      }\n    }\n  }\n  const SRC_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  const TARGET_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  class Live2DPhysics {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.physicsHairs = [];\n      if (json.physics_hair) {\n        this.physicsHairs = json.physics_hair.map((definition) => {\n          const physicsHair = new PhysicsHair();\n          physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n          definition.src.forEach(({ id, ptype, scale, weight }) => {\n            const type = SRC_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addSrcParam(type, id, scale, weight);\n            }\n          });\n          definition.targets.forEach(({ id, ptype, scale, weight }) => {\n            const type = TARGET_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addTargetParam(type, id, scale, weight);\n            }\n          });\n          return physicsHair;\n        });\n      }\n    }\n    update(elapsed) {\n      this.physicsHairs.forEach((physicsHair) => physicsHair.update(this.coreModel, elapsed));\n    }\n  }\n  class Live2DPartsParam {\n    constructor(id) {\n      this.id = id;\n      this.paramIndex = -1;\n      this.partsIndex = -1;\n      this.link = [];\n    }\n    initIndex(model) {\n      this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n      this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n      model.setParamFloat(this.paramIndex, 1);\n    }\n  }\n  class Live2DPose {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.opacityAnimDuration = 500;\n      this.partsGroups = [];\n      if (json.parts_visible) {\n        this.partsGroups = json.parts_visible.map(({ group }) => group.map(({ id, link }) => {\n          const parts = new Live2DPartsParam(id);\n          if (link) {\n            parts.link = link.map((l) => new Live2DPartsParam(l));\n          }\n          return parts;\n        }));\n        this.init();\n      }\n    }\n    init() {\n      this.partsGroups.forEach((group) => {\n        group.forEach((parts) => {\n          parts.initIndex(this.coreModel);\n          if (parts.paramIndex >= 0) {\n            const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n            this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n            this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n            if (parts.link.length > 0) {\n              parts.link.forEach((p) => p.initIndex(this.coreModel));\n            }\n          }\n        });\n      });\n    }\n    normalizePartsOpacityGroup(partsGroup, dt) {\n      const model = this.coreModel;\n      const phi = 0.5;\n      const maxBackOpacity = 0.15;\n      let visibleOpacity = 1;\n      let visibleIndex = partsGroup.findIndex(({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n      if (visibleIndex >= 0) {\n        const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n        visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n      } else {\n        visibleIndex = 0;\n        visibleOpacity = 1;\n      }\n      partsGroup.forEach(({ partsIndex }, index) => {\n        if (partsIndex >= 0) {\n          if (visibleIndex == index) {\n            model.setPartsOpacity(partsIndex, visibleOpacity);\n          } else {\n            let opacity = model.getPartsOpacity(partsIndex);\n            let a1;\n            if (visibleOpacity < phi) {\n              a1 = visibleOpacity * (phi - 1) / phi + 1;\n            } else {\n              a1 = (1 - visibleOpacity) * phi / (1 - phi);\n            }\n            let backOp = (1 - a1) * (1 - visibleOpacity);\n            if (backOp > maxBackOpacity) {\n              a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n            }\n            if (opacity > a1) {\n              opacity = a1;\n            }\n            model.setPartsOpacity(partsIndex, opacity);\n          }\n        }\n      });\n    }\n    copyOpacity(partsGroup) {\n      const model = this.coreModel;\n      partsGroup.forEach(({ partsIndex, link }) => {\n        if (partsIndex >= 0 && link) {\n          const opacity = model.getPartsOpacity(partsIndex);\n          link.forEach(({ partsIndex: partsIndex2 }) => {\n            if (partsIndex2 >= 0) {\n              model.setPartsOpacity(partsIndex2, opacity);\n            }\n          });\n        }\n      });\n    }\n    update(dt) {\n      this.partsGroups.forEach((partGroup) => {\n        this.normalizePartsOpacityGroup(partGroup, dt);\n        this.copyOpacity(partGroup);\n      });\n    }\n  }\n  Live2DFactory.registerRuntime({\n    version: 2,\n    test(source) {\n      return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n    },\n    ready() {\n      return Promise.resolve();\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 3) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 3);\n      return String.fromCharCode(...view) === \"moc\";\n    },\n    createModelSettings(json) {\n      return new Cubism2ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const model = Live2DModelWebGL.loadModel(data);\n      const error = Live2D.getError();\n      if (error)\n        throw error;\n      return model;\n    },\n    createInternalModel(coreModel, settings, options) {\n      return new Cubism2InternalModel(coreModel, settings, options);\n    },\n    createPose(coreModel, data) {\n      return new Live2DPose(coreModel, data);\n    },\n    createPhysics(coreModel, data) {\n      return new Live2DPhysics(coreModel, data);\n    }\n  });\n  if (!window.Live2DCubismCore) {\n    throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n  }\n  class CubismVector2 {\n    constructor(x, y) {\n      this.x = x || 0;\n      this.y = y || 0;\n    }\n    add(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x + vector2.x;\n      ret.y = this.y + vector2.y;\n      return ret;\n    }\n    substract(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x - vector2.x;\n      ret.y = this.y - vector2.y;\n      return ret;\n    }\n    multiply(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x * vector2.x;\n      ret.y = this.y * vector2.y;\n      return ret;\n    }\n    multiplyByScaler(scalar) {\n      return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    division(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x / vector2.x;\n      ret.y = this.y / vector2.y;\n      return ret;\n    }\n    divisionByScalar(scalar) {\n      return this.division(new CubismVector2(scalar, scalar));\n    }\n    getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    getDistanceWith(a) {\n      return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    dot(a) {\n      return this.x * a.x + this.y * a.y;\n    }\n    normalize() {\n      const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n      this.x = this.x / length;\n      this.y = this.y / length;\n    }\n    isEqual(rhs) {\n      return this.x == rhs.x && this.y == rhs.y;\n    }\n    isNotEqual(rhs) {\n      return !this.isEqual(rhs);\n    }\n  }\n  const _CubismMath = class {\n    static range(value, min, max) {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n    static sin(x) {\n      return Math.sin(x);\n    }\n    static cos(x) {\n      return Math.cos(x);\n    }\n    static abs(x) {\n      return Math.abs(x);\n    }\n    static sqrt(x) {\n      return Math.sqrt(x);\n    }\n    static cbrt(x) {\n      if (x === 0) {\n        return x;\n      }\n      let cx = x;\n      const isNegativeNumber = cx < 0;\n      if (isNegativeNumber) {\n        cx = -cx;\n      }\n      let ret;\n      if (cx === Infinity) {\n        ret = Infinity;\n      } else {\n        ret = Math.exp(Math.log(cx) / 3);\n        ret = (cx / (ret * ret) + 2 * ret) / 3;\n      }\n      return isNegativeNumber ? -ret : ret;\n    }\n    static getEasingSine(value) {\n      if (value < 0) {\n        return 0;\n      } else if (value > 1) {\n        return 1;\n      }\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    static max(left, right) {\n      return left > right ? left : right;\n    }\n    static min(left, right) {\n      return left > right ? right : left;\n    }\n    static degreesToRadian(degrees) {\n      return degrees / 180 * Math.PI;\n    }\n    static radianToDegrees(radian) {\n      return radian * 180 / Math.PI;\n    }\n    static directionToRadian(from, to) {\n      const q1 = Math.atan2(to.y, to.x);\n      const q2 = Math.atan2(from.y, from.x);\n      let ret = q1 - q2;\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2;\n      }\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2;\n      }\n      return ret;\n    }\n    static directionToDegrees(from, to) {\n      const radian = this.directionToRadian(from, to);\n      let degree = this.radianToDegrees(radian);\n      if (to.x - from.x > 0) {\n        degree = -degree;\n      }\n      return degree;\n    }\n    static radianToDirection(totalAngle) {\n      const ret = new CubismVector2();\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n      return ret;\n    }\n    static quadraticEquation(a, b, c) {\n      if (this.abs(a) < _CubismMath.Epsilon) {\n        if (this.abs(b) < _CubismMath.Epsilon) {\n          return -c;\n        }\n        return -c / b;\n      }\n      return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n    }\n    static cardanoAlgorithmForBezier(a, b, c, d) {\n      if (this.sqrt(a) < _CubismMath.Epsilon) {\n        return this.range(this.quadraticEquation(b, c, d), 0, 1);\n      }\n      const ba = b / a;\n      const ca = c / a;\n      const da = d / a;\n      const p = (3 * ca - ba * ba) / 3;\n      const p3 = p / 3;\n      const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n      const q2 = q / 2;\n      const discriminant = q2 * q2 + p3 * p3 * p3;\n      const center = 0.5;\n      const threshold = center + 0.01;\n      if (discriminant < 0) {\n        const mp3 = -p / 3;\n        const mp33 = mp3 * mp3 * mp3;\n        const r = this.sqrt(mp33);\n        const t = -q / (2 * r);\n        const cosphi = this.range(t, -1, 1);\n        const phi = Math.acos(cosphi);\n        const crtr = this.cbrt(r);\n        const t1 = 2 * crtr;\n        const root12 = t1 * this.cos(phi / 3) - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n        if (this.abs(root2 - center) < threshold) {\n          return this.range(root2, 0, 1);\n        }\n        const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n        return this.range(root3, 0, 1);\n      }\n      if (discriminant == 0) {\n        let u12;\n        if (q2 < 0) {\n          u12 = this.cbrt(-q2);\n        } else {\n          u12 = -this.cbrt(q2);\n        }\n        const root12 = 2 * u12 - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = -u12 - ba / 3;\n        return this.range(root2, 0, 1);\n      }\n      const sd = this.sqrt(discriminant);\n      const u1 = this.cbrt(sd - q2);\n      const v1 = this.cbrt(sd + q2);\n      const root1 = u1 - v1 - ba / 3;\n      return this.range(root1, 0, 1);\n    }\n    constructor() {\n    }\n  };\n  let CubismMath = _CubismMath;\n  CubismMath.Epsilon = 1e-5;\n  class CubismMatrix44 {\n    constructor() {\n      this._tr = new Float32Array(16);\n      this.loadIdentity();\n    }\n    static multiply(a, b, dst) {\n      const c = new Float32Array([\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ]);\n      const n = 4;\n      for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < n; ++j) {\n          for (let k = 0; k < n; ++k) {\n            c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n          }\n        }\n      }\n      for (let i = 0; i < 16; ++i) {\n        dst[i] = c[i];\n      }\n    }\n    loadIdentity() {\n      const c = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      this.setMatrix(c);\n    }\n    setMatrix(tr) {\n      for (let i = 0; i < 16; ++i) {\n        this._tr[i] = tr[i];\n      }\n    }\n    getArray() {\n      return this._tr;\n    }\n    getScaleX() {\n      return this._tr[0];\n    }\n    getScaleY() {\n      return this._tr[5];\n    }\n    getTranslateX() {\n      return this._tr[12];\n    }\n    getTranslateY() {\n      return this._tr[13];\n    }\n    transformX(src) {\n      return this._tr[0] * src + this._tr[12];\n    }\n    transformY(src) {\n      return this._tr[5] * src + this._tr[13];\n    }\n    invertTransformX(src) {\n      return (src - this._tr[12]) / this._tr[0];\n    }\n    invertTransformY(src) {\n      return (src - this._tr[13]) / this._tr[5];\n    }\n    translateRelative(x, y) {\n      const tr1 = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        x,\n        y,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    translate(x, y) {\n      this._tr[12] = x;\n      this._tr[13] = y;\n    }\n    translateX(x) {\n      this._tr[12] = x;\n    }\n    translateY(y) {\n      this._tr[13] = y;\n    }\n    scaleRelative(x, y) {\n      const tr1 = new Float32Array([\n        x,\n        0,\n        0,\n        0,\n        0,\n        y,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    scale(x, y) {\n      this._tr[0] = x;\n      this._tr[5] = y;\n    }\n    multiplyByMatrix(m) {\n      CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    clone() {\n      const cloneMatrix = new CubismMatrix44();\n      for (let i = 0; i < this._tr.length; i++) {\n        cloneMatrix._tr[i] = this._tr[i];\n      }\n      return cloneMatrix;\n    }\n  }\n  class CubismRenderer {\n    initialize(model) {\n      this._model = model;\n    }\n    drawModel() {\n      if (this.getModel() == null)\n        return;\n      this.doDrawModel();\n    }\n    setMvpMatrix(matrix44) {\n      this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    getMvpMatrix() {\n      return this._mvpMatrix4x4;\n    }\n    setModelColor(red, green, blue, alpha) {\n      if (red < 0) {\n        red = 0;\n      } else if (red > 1) {\n        red = 1;\n      }\n      if (green < 0) {\n        green = 0;\n      } else if (green > 1) {\n        green = 1;\n      }\n      if (blue < 0) {\n        blue = 0;\n      } else if (blue > 1) {\n        blue = 1;\n      }\n      if (alpha < 0) {\n        alpha = 0;\n      } else if (alpha > 1) {\n        alpha = 1;\n      }\n      this._modelColor.R = red;\n      this._modelColor.G = green;\n      this._modelColor.B = blue;\n      this._modelColor.A = alpha;\n    }\n    getModelColor() {\n      return Object.assign({}, this._modelColor);\n    }\n    setIsPremultipliedAlpha(enable) {\n      this._isPremultipliedAlpha = enable;\n    }\n    isPremultipliedAlpha() {\n      return this._isPremultipliedAlpha;\n    }\n    setIsCulling(culling) {\n      this._isCulling = culling;\n    }\n    isCulling() {\n      return this._isCulling;\n    }\n    setAnisotropy(n) {\n      this._anisortopy = n;\n    }\n    getAnisotropy() {\n      return this._anisortopy;\n    }\n    getModel() {\n      return this._model;\n    }\n    constructor() {\n      this._isCulling = false;\n      this._isPremultipliedAlpha = false;\n      this._anisortopy = 0;\n      this._modelColor = new CubismTextureColor();\n      this._mvpMatrix4x4 = new CubismMatrix44();\n      this._mvpMatrix4x4.loadIdentity();\n    }\n  }\n  var CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n    return CubismBlendMode2;\n  })(CubismBlendMode || {});\n  class CubismTextureColor {\n    constructor() {\n      this.R = 1;\n      this.G = 1;\n      this.B = 1;\n      this.A = 1;\n    }\n  }\n  let s_isStarted = false;\n  let s_isInitialized = false;\n  let s_option = void 0;\n  const Constant = {\n    vertexOffset: 0,\n    vertexStep: 2\n  };\n  class CubismFramework {\n    static startUp(option) {\n      if (s_isStarted) {\n        CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n        return s_isStarted;\n      }\n      if (Live2DCubismCore._isStarted) {\n        s_isStarted = true;\n        return true;\n      }\n      Live2DCubismCore._isStarted = true;\n      s_option = option;\n      if (s_option) {\n        Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n      }\n      s_isStarted = true;\n      if (s_isStarted) {\n        const version = Live2DCubismCore.Version.csmGetVersion();\n        const major = (version & 4278190080) >> 24;\n        const minor = (version & 16711680) >> 16;\n        const patch = version & 65535;\n        const versionNumber = version;\n        CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n      }\n      CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n      return s_isStarted;\n    }\n    static cleanUp() {\n      s_isStarted = false;\n      s_isInitialized = false;\n      s_option = void 0;\n    }\n    static initialize() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n        return;\n      }\n      s_isInitialized = true;\n      CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n    }\n    static dispose() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (!s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n        return;\n      }\n      CubismRenderer.staticRelease();\n      s_isInitialized = false;\n      CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n    }\n    static isStarted() {\n      return s_isStarted;\n    }\n    static isInitialized() {\n      return s_isInitialized;\n    }\n    static coreLogFunction(message) {\n      if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n        return;\n      }\n      Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    static getLoggingLevel() {\n      if (s_option != null) {\n        return s_option.loggingLevel;\n      }\n      return LogLevel.LogLevel_Off;\n    }\n    constructor() {\n    }\n  }\n  var LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n    LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n    return LogLevel2;\n  })(LogLevel || {});\n  const CSM_ASSERT = () => {\n  };\n  function CubismLogDebug(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogInfo(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogWarning(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogError(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n  }\n  class CubismDebug {\n    static print(logLevel, format, args) {\n      if (logLevel < CubismFramework.getLoggingLevel()) {\n        return;\n      }\n      const logPrint = CubismFramework.coreLogFunction;\n      if (!logPrint)\n        return;\n      const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n        return args[k];\n      });\n      logPrint(buffer);\n    }\n    static dumpBytes(logLevel, data, length) {\n      for (let i = 0; i < length; i++) {\n        if (i % 16 == 0 && i > 0)\n          this.print(logLevel, \"\\n\");\n        else if (i % 8 == 0 && i > 0)\n          this.print(logLevel, \"  \");\n        this.print(logLevel, \"{0} \", [data[i] & 255]);\n      }\n      this.print(logLevel, \"\\n\");\n    }\n    constructor() {\n    }\n  }\n  class ACubismMotion {\n    constructor() {\n      this._fadeInSeconds = -1;\n      this._fadeOutSeconds = -1;\n      this._weight = 1;\n      this._offsetSeconds = 0;\n      this._firedEventValues = [];\n    }\n    release() {\n      this._weight = 0;\n    }\n    updateParameters(model, motionQueueEntry, userTimeSeconds) {\n      if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n        return;\n      }\n      if (!motionQueueEntry.isStarted()) {\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        const duration = this.getDuration();\n        if (motionQueueEntry.getEndTime() < 0) {\n          motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n        }\n      }\n      let fadeWeight = this._weight;\n      const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      fadeWeight = fadeWeight * fadeIn * fadeOut;\n      motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n      this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n      if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    setFadeInTime(fadeInSeconds) {\n      this._fadeInSeconds = fadeInSeconds;\n    }\n    setFadeOutTime(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n    }\n    getFadeOutTime() {\n      return this._fadeOutSeconds;\n    }\n    getFadeInTime() {\n      return this._fadeInSeconds;\n    }\n    setWeight(weight) {\n      this._weight = weight;\n    }\n    getWeight() {\n      return this._weight;\n    }\n    getDuration() {\n      return -1;\n    }\n    getLoopDuration() {\n      return -1;\n    }\n    setOffsetTime(offsetSeconds) {\n      this._offsetSeconds = offsetSeconds;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      return this._firedEventValues;\n    }\n    setFinishedMotionHandler(onFinishedMotionHandler) {\n      this._onFinishedMotion = onFinishedMotionHandler;\n    }\n    getFinishedMotionHandler() {\n      return this._onFinishedMotion;\n    }\n  }\n  const DefaultFadeTime = 1;\n  class CubismExpressionMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._parameters = [];\n    }\n    static create(json) {\n      const expression = new CubismExpressionMotion();\n      const fadeInTime = json.FadeInTime;\n      const fadeOutTime = json.FadeOutTime;\n      expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n      expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n      const parameters = json.Parameters || [];\n      for (let i = 0; i < parameters.length; ++i) {\n        const param = parameters[i];\n        const parameterId = param.Id;\n        const value = param.Value;\n        let blendType;\n        switch (param.Blend) {\n          case \"Multiply\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n            break;\n          case \"Overwrite\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n            break;\n          case \"Add\":\n          default:\n            blendType = ExpressionBlendType.ExpressionBlendType_Add;\n            break;\n        }\n        const item = {\n          parameterId,\n          blendType,\n          value\n        };\n        expression._parameters.push(item);\n      }\n      return expression;\n    }\n    doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n      for (let i = 0; i < this._parameters.length; ++i) {\n        const parameter = this._parameters[i];\n        switch (parameter.blendType) {\n          case ExpressionBlendType.ExpressionBlendType_Add: {\n            model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Multiply: {\n            model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n            model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        }\n      }\n    }\n  }\n  var ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n    return ExpressionBlendType2;\n  })(ExpressionBlendType || {});\n  class CubismMotionQueueEntry {\n    constructor() {\n      this._autoDelete = false;\n      this._available = true;\n      this._finished = false;\n      this._started = false;\n      this._startTimeSeconds = -1;\n      this._fadeInStartTimeSeconds = 0;\n      this._endTimeSeconds = -1;\n      this._stateTimeSeconds = 0;\n      this._stateWeight = 0;\n      this._lastEventCheckSeconds = 0;\n      this._motionQueueEntryHandle = this;\n      this._fadeOutSeconds = 0;\n      this._isTriggeredFadeOut = false;\n    }\n    release() {\n      if (this._autoDelete && this._motion) {\n        this._motion.release();\n      }\n    }\n    setFadeOut(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n    }\n    startFadeOut(fadeOutSeconds, userTimeSeconds) {\n      const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n      if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n        this._endTimeSeconds = newEndTimeSeconds;\n      }\n    }\n    isFinished() {\n      return this._finished;\n    }\n    isStarted() {\n      return this._started;\n    }\n    getStartTime() {\n      return this._startTimeSeconds;\n    }\n    getFadeInStartTime() {\n      return this._fadeInStartTimeSeconds;\n    }\n    getEndTime() {\n      return this._endTimeSeconds;\n    }\n    setStartTime(startTime) {\n      this._startTimeSeconds = startTime;\n    }\n    setFadeInStartTime(startTime) {\n      this._fadeInStartTimeSeconds = startTime;\n    }\n    setEndTime(endTime) {\n      this._endTimeSeconds = endTime;\n    }\n    setIsFinished(f) {\n      this._finished = f;\n    }\n    setIsStarted(f) {\n      this._started = f;\n    }\n    isAvailable() {\n      return this._available;\n    }\n    setIsAvailable(v) {\n      this._available = v;\n    }\n    setState(timeSeconds, weight) {\n      this._stateTimeSeconds = timeSeconds;\n      this._stateWeight = weight;\n    }\n    getStateTime() {\n      return this._stateTimeSeconds;\n    }\n    getStateWeight() {\n      return this._stateWeight;\n    }\n    getLastCheckEventSeconds() {\n      return this._lastEventCheckSeconds;\n    }\n    setLastCheckEventSeconds(checkSeconds) {\n      this._lastEventCheckSeconds = checkSeconds;\n    }\n    isTriggeredFadeOut() {\n      return this._isTriggeredFadeOut;\n    }\n    getFadeOutSeconds() {\n      return this._fadeOutSeconds;\n    }\n  }\n  class CubismMotionQueueManager {\n    constructor() {\n      this._userTimeSeconds = 0;\n      this._eventCustomData = null;\n      this._motions = [];\n    }\n    release() {\n      for (let i = 0; i < this._motions.length; ++i) {\n        if (this._motions[i]) {\n          this._motions[i].release();\n        }\n      }\n      this._motions = void 0;\n    }\n    startMotion(motion, autoDelete, userTimeSeconds) {\n      if (motion == null) {\n        return InvalidMotionQueueEntryHandleValue;\n      }\n      let motionQueueEntry;\n      for (let i = 0; i < this._motions.length; ++i) {\n        motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n      }\n      motionQueueEntry = new CubismMotionQueueEntry();\n      motionQueueEntry._autoDelete = autoDelete;\n      motionQueueEntry._motion = motion;\n      this._motions.push(motionQueueEntry);\n      return motionQueueEntry._motionQueueEntryHandle;\n    }\n    isFinished() {\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        if (!motionQueueEntry.isFinished()) {\n          return false;\n        }\n        i++;\n      }\n      return true;\n    }\n    isFinishedByHandle(motionQueueEntryNumber) {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    stopAllMotions() {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry != null) {\n          motionQueueEntry.release();\n        }\n      }\n      this._motions = [];\n    }\n    getCubismMotionQueueEntry(motionQueueEntryNumber) {\n      return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n    }\n    setEventCallback(callback, customData = null) {\n      this._eventCallBack = callback;\n      this._eventCustomData = customData;\n    }\n    doUpdateMotion(model, userTimeSeconds) {\n      let updated = false;\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n        updated = true;\n        const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n        for (let i2 = 0; i2 < firedList.length; ++i2) {\n          this._eventCallBack(this, firedList[i2], this._eventCustomData);\n        }\n        motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n        if (motionQueueEntry.isFinished()) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n        } else {\n          if (motionQueueEntry.isTriggeredFadeOut()) {\n            motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n          }\n          i++;\n        }\n      }\n      return updated;\n    }\n  }\n  const InvalidMotionQueueEntryHandleValue = -1;\n  class Cubism4ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.Name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.File;\n    }\n    createExpression(data, definition) {\n      return CubismExpressionMotion.create(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n  }\n  class CubismModelSettingsJson {\n    constructor(json) {\n      this.groups = json.Groups;\n      this.hitAreas = json.HitAreas;\n      this.layout = json.Layout;\n      this.moc = json.FileReferences.Moc;\n      this.expressions = json.FileReferences.Expressions;\n      this.motions = json.FileReferences.Motions;\n      this.textures = json.FileReferences.Textures;\n      this.physics = json.FileReferences.Physics;\n      this.pose = json.FileReferences.Pose;\n    }\n    getEyeBlinkParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n    }\n    getLipSyncParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n    }\n  }\n  class Cubism4ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      if (!Cubism4ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      Object.assign(this, new CubismModelSettingsJson(json));\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      if (this.motions) {\n        for (const [group, motions] of Object.entries(this.motions)) {\n          for (let i = 0; i < motions.length; i++) {\n            motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n            if (motions[i].Sound !== void 0) {\n              motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n            }\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n        }\n      }\n    }\n  }\n  applyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\n  var CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n    return CubismMotionCurveTarget2;\n  })(CubismMotionCurveTarget || {});\n  var CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n    return CubismMotionSegmentType2;\n  })(CubismMotionSegmentType || {});\n  class CubismMotionPoint {\n    constructor(time = 0, value = 0) {\n      this.time = time;\n      this.value = value;\n    }\n  }\n  class CubismMotionSegment {\n    constructor() {\n      this.basePointIndex = 0;\n      this.segmentType = 0;\n    }\n  }\n  class CubismMotionCurve {\n    constructor() {\n      this.id = \"\";\n      this.type = 0;\n      this.segmentCount = 0;\n      this.baseSegmentIndex = 0;\n      this.fadeInTime = 0;\n      this.fadeOutTime = 0;\n    }\n  }\n  class CubismMotionEvent {\n    constructor() {\n      this.fireTime = 0;\n      this.value = \"\";\n    }\n  }\n  class CubismMotionData {\n    constructor() {\n      this.duration = 0;\n      this.loop = false;\n      this.curveCount = 0;\n      this.eventCount = 0;\n      this.fps = 0;\n      this.curves = [];\n      this.segments = [];\n      this.points = [];\n      this.events = [];\n    }\n  }\n  class CubismMotionJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getMotionDuration() {\n      return this._json.Meta.Duration;\n    }\n    isMotionLoop() {\n      return this._json.Meta.Loop || false;\n    }\n    getEvaluationOptionFlag(flagType) {\n      if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n        return !!this._json.Meta.AreBeziersRestricted;\n      }\n      return false;\n    }\n    getMotionCurveCount() {\n      return this._json.Meta.CurveCount;\n    }\n    getMotionFps() {\n      return this._json.Meta.Fps;\n    }\n    getMotionTotalSegmentCount() {\n      return this._json.Meta.TotalSegmentCount;\n    }\n    getMotionTotalPointCount() {\n      return this._json.Meta.TotalPointCount;\n    }\n    getMotionFadeInTime() {\n      return this._json.Meta.FadeInTime;\n    }\n    getMotionFadeOutTime() {\n      return this._json.Meta.FadeOutTime;\n    }\n    getMotionCurveTarget(curveIndex) {\n      return this._json.Curves[curveIndex].Target;\n    }\n    getMotionCurveId(curveIndex) {\n      return this._json.Curves[curveIndex].Id;\n    }\n    getMotionCurveFadeInTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeInTime;\n    }\n    getMotionCurveFadeOutTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeOutTime;\n    }\n    getMotionCurveSegmentCount(curveIndex) {\n      return this._json.Curves[curveIndex].Segments.length;\n    }\n    getMotionCurveSegment(curveIndex, segmentIndex) {\n      return this._json.Curves[curveIndex].Segments[segmentIndex];\n    }\n    getEventCount() {\n      return this._json.Meta.UserDataCount || 0;\n    }\n    getTotalEventValueSize() {\n      return this._json.Meta.TotalUserDataSize;\n    }\n    getEventTime(userDataIndex) {\n      return this._json.UserData[userDataIndex].Time;\n    }\n    getEventValue(userDataIndex) {\n      return this._json.UserData[userDataIndex].Value;\n    }\n  }\n  var EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n    EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n    return EvaluationOptionFlag2;\n  })(EvaluationOptionFlag || {});\n  const EffectNameEyeBlink = \"EyeBlink\";\n  const EffectNameLipSync = \"LipSync\";\n  const TargetNameModel = \"Model\";\n  const TargetNameParameter = \"Parameter\";\n  const TargetNamePartOpacity = \"PartOpacity\";\n  const UseOldBeziersCurveMotion = false;\n  function lerpPoints(a, b, t) {\n    const result = new CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n  }\n  function linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n  }\n  function bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n    const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n    const c = 3 * cx1 - 3 * x1;\n    const d = x1 - x;\n    const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function steppedEvaluate(points, time) {\n    return points[0].value;\n  }\n  function inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n  }\n  function evaluateCurve(motionData, index, time) {\n    const curve = motionData.curves[index];\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n      pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n      if (motionData.points[pointPosition].time > time) {\n        target = i;\n        break;\n      }\n    }\n    if (target == -1) {\n      return motionData.points[pointPosition].value;\n    }\n    const segment = motionData.segments[target];\n    return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n  }\n  class CubismMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._eyeBlinkParameterIds = [];\n      this._lipSyncParameterIds = [];\n      this._sourceFrameRate = 30;\n      this._loopDurationSeconds = -1;\n      this._isLoop = false;\n      this._isLoopFadeIn = true;\n      this._lastWeight = 0;\n    }\n    static create(json, onFinishedMotionHandler) {\n      const ret = new CubismMotion();\n      ret.parse(json);\n      ret._sourceFrameRate = ret._motionData.fps;\n      ret._loopDurationSeconds = ret._motionData.duration;\n      ret._onFinishedMotion = onFinishedMotionHandler;\n      return ret;\n    }\n    doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n      if (this._modelCurveIdEyeBlink == null) {\n        this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n      }\n      if (this._modelCurveIdLipSync == null) {\n        this._modelCurveIdLipSync = EffectNameLipSync;\n      }\n      let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n      if (timeOffsetSeconds < 0) {\n        timeOffsetSeconds = 0;\n      }\n      let lipSyncValue = Number.MAX_VALUE;\n      let eyeBlinkValue = Number.MAX_VALUE;\n      const MaxTargetSize = 64;\n      let lipSyncFlags = 0;\n      let eyeBlinkFlags = 0;\n      if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n      }\n      if (this._lipSyncParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n      }\n      const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      let value;\n      let c, parameterIndex;\n      let time = timeOffsetSeconds;\n      if (this._isLoop) {\n        while (time > this._motionData.duration) {\n          time -= this._motionData.duration;\n        }\n      }\n      const curves = this._motionData.curves;\n      for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (curves[c].id == this._modelCurveIdEyeBlink) {\n          eyeBlinkValue = value;\n        } else if (curves[c].id == this._modelCurveIdLipSync) {\n          lipSyncValue = value;\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        const sourceValue = model.getParameterValueByIndex(parameterIndex);\n        value = evaluateCurve(this._motionData, c, time);\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n              value *= eyeBlinkValue;\n              eyeBlinkFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._lipSyncParameterIds[i] == curves[c].id) {\n              value += lipSyncValue;\n              lipSyncFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        let v;\n        if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n          v = sourceValue + (value - sourceValue) * fadeWeight;\n        } else {\n          let fin;\n          let fout;\n          if (curves[c].fadeInTime < 0) {\n            fin = tmpFadeIn;\n          } else {\n            fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n          }\n          if (curves[c].fadeOutTime < 0) {\n            fout = tmpFadeOut;\n          } else {\n            fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n          }\n          const paramWeight = this._weight * fin * fout;\n          v = sourceValue + (value - sourceValue) * paramWeight;\n        }\n        model.setParameterValueByIndex(parameterIndex, v, 1);\n      }\n      {\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n            if (eyeBlinkFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n            if (lipSyncFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._lipSyncParameterIds[i], v);\n          }\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (CubismConfig.setOpacityFromMotion) {\n          model.setPartOpacityById(curves[c].id, value);\n        } else {\n          parameterIndex = model.getParameterIndex(curves[c].id);\n          if (parameterIndex == -1) {\n            continue;\n          }\n          model.setParameterValueByIndex(parameterIndex, value);\n        }\n      }\n      if (timeOffsetSeconds >= this._motionData.duration) {\n        if (this._isLoop) {\n          motionQueueEntry.setStartTime(userTimeSeconds);\n          if (this._isLoopFadeIn) {\n            motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n          }\n        } else {\n          if (this._onFinishedMotion) {\n            this._onFinishedMotion(this);\n          }\n          motionQueueEntry.setIsFinished(true);\n        }\n      }\n      this._lastWeight = fadeWeight;\n    }\n    setIsLoop(loop) {\n      this._isLoop = loop;\n    }\n    isLoop() {\n      return this._isLoop;\n    }\n    setIsLoopFadeIn(loopFadeIn) {\n      this._isLoopFadeIn = loopFadeIn;\n    }\n    isLoopFadeIn() {\n      return this._isLoopFadeIn;\n    }\n    getDuration() {\n      return this._isLoop ? -1 : this._loopDurationSeconds;\n    }\n    getLoopDuration() {\n      return this._loopDurationSeconds;\n    }\n    setParameterFadeInTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeInTime = value;\n          return;\n        }\n      }\n    }\n    setParameterFadeOutTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeOutTime = value;\n          return;\n        }\n      }\n    }\n    getParameterFadeInTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeInTime;\n        }\n      }\n      return -1;\n    }\n    getParameterFadeOutTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeOutTime;\n        }\n      }\n      return -1;\n    }\n    setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n      this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n      this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    release() {\n      this._motionData = void 0;\n    }\n    parse(motionJson) {\n      this._motionData = new CubismMotionData();\n      let json = new CubismMotionJson(motionJson);\n      this._motionData.duration = json.getMotionDuration();\n      this._motionData.loop = json.isMotionLoop();\n      this._motionData.curveCount = json.getMotionCurveCount();\n      this._motionData.fps = json.getMotionFps();\n      this._motionData.eventCount = json.getEventCount();\n      const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n      const fadeInSeconds = json.getMotionFadeInTime();\n      const fadeOutSeconds = json.getMotionFadeOutTime();\n      if (fadeInSeconds !== void 0) {\n        this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n      } else {\n        this._fadeInSeconds = 1;\n      }\n      if (fadeOutSeconds !== void 0) {\n        this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n      } else {\n        this._fadeOutSeconds = 1;\n      }\n      this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n      this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n      this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n      this._motionData.points = [];\n      let totalPointCount = 0;\n      let totalSegmentCount = 0;\n      for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n        const curve = this._motionData.curves[curveCount];\n        switch (json.getMotionCurveTarget(curveCount)) {\n          case TargetNameModel:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            break;\n          case TargetNameParameter:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            break;\n          case TargetNamePartOpacity:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            break;\n          default:\n            CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n        }\n        curve.id = json.getMotionCurveId(curveCount);\n        curve.baseSegmentIndex = totalSegmentCount;\n        const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n        const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n        curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n        curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n        for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n          if (segmentPosition == 0) {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n            totalPointCount += 1;\n            segmentPosition += 2;\n          } else {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n          }\n          const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n          switch (segment) {\n            case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n              } else {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n              }\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n              this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n              totalPointCount += 3;\n              segmentPosition += 7;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          }\n          ++curve.segmentCount;\n          ++totalSegmentCount;\n        }\n        this._motionData.curves.push(curve);\n      }\n      for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n        this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n        this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n      }\n      json.release();\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      this._firedEventValues.length = 0;\n      for (let u = 0; u < this._motionData.eventCount; ++u) {\n        if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n          this._firedEventValues.push(this._motionData.events[u].value);\n        }\n      }\n      return this._firedEventValues;\n    }\n  }\n  class Cubism4MotionManager extends MotionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.groups = { idle: \"Idle\" };\n      this.motionDataType = \"json\";\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.motions) != null ? _a : {};\n      this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n      this.lipSyncIds = settings.getLipSyncParameters() || [];\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n      }\n      this.queueManager.setEventCallback((caller, eventValue, customData) => {\n        this.emit(\"motion:\" + eventValue);\n      });\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    _startMotion(motion, onFinish) {\n      motion.setFinishedMotionHandler(onFinish);\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    createMotion(data, group, definition) {\n      const motion = CubismMotion.create(data);\n      const json = new CubismMotionJson(data);\n      const defaultFadingDuration = (group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration) / 1e3;\n      if (json.getMotionFadeInTime() === void 0) {\n        motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n      }\n      if (json.getMotionFadeOutTime() === void 0) {\n        motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n      }\n      motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.File;\n    }\n    getMotionName(definition) {\n      return definition.File;\n    }\n    getSoundFile(definition) {\n      return definition.Sound;\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager.release();\n      this.queueManager = void 0;\n    }\n  }\n  const ParamAngleX = \"ParamAngleX\";\n  const ParamAngleY = \"ParamAngleY\";\n  const ParamAngleZ = \"ParamAngleZ\";\n  const ParamEyeBallX = \"ParamEyeBallX\";\n  const ParamEyeBallY = \"ParamEyeBallY\";\n  const ParamBodyAngleX = \"ParamBodyAngleX\";\n  const ParamBreath = \"ParamBreath\";\n  class CubismBreath {\n    constructor() {\n      this._breathParameters = [];\n      this._currentTime = 0;\n    }\n    static create() {\n      return new CubismBreath();\n    }\n    setParameters(breathParameters) {\n      this._breathParameters = breathParameters;\n    }\n    getParameters() {\n      return this._breathParameters;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._currentTime += deltaTimeSeconds;\n      const t = this._currentTime * 2 * 3.14159;\n      for (let i = 0; i < this._breathParameters.length; ++i) {\n        const data = this._breathParameters[i];\n        model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n      }\n    }\n  }\n  class BreathParameterData {\n    constructor(parameterId, offset, peak, cycle, weight) {\n      this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n      this.offset = offset == void 0 ? 0 : offset;\n      this.peak = peak == void 0 ? 0 : peak;\n      this.cycle = cycle == void 0 ? 0 : cycle;\n      this.weight = weight == void 0 ? 0 : weight;\n    }\n  }\n  const _CubismEyeBlink = class {\n    static create(modelSetting) {\n      return new _CubismEyeBlink(modelSetting);\n    }\n    setBlinkingInterval(blinkingInterval) {\n      this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    setBlinkingSetting(closing, closed, opening) {\n      this._closingSeconds = closing;\n      this._closedSeconds = closed;\n      this._openingSeconds = opening;\n    }\n    setParameterIds(parameterIds) {\n      this._parameterIds = parameterIds;\n    }\n    getParameterIds() {\n      return this._parameterIds;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._userTimeSeconds += deltaTimeSeconds;\n      let parameterValue;\n      let t = 0;\n      switch (this._blinkingState) {\n        case EyeState.EyeState_Closing:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Closed;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1 - t;\n          break;\n        case EyeState.EyeState_Closed:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n          if (t >= 1) {\n            this._blinkingState = EyeState.EyeState_Opening;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 0;\n          break;\n        case EyeState.EyeState_Opening:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Interval;\n            this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          }\n          parameterValue = t;\n          break;\n        case EyeState.EyeState_Interval:\n          if (this._nextBlinkingTime < this._userTimeSeconds) {\n            this._blinkingState = EyeState.EyeState_Closing;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1;\n          break;\n        case EyeState.EyeState_First:\n        default:\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          parameterValue = 1;\n          break;\n      }\n      if (!_CubismEyeBlink.CloseIfZero) {\n        parameterValue = -parameterValue;\n      }\n      for (let i = 0; i < this._parameterIds.length; ++i) {\n        model.setParameterValueById(this._parameterIds[i], parameterValue);\n      }\n    }\n    constructor(modelSetting) {\n      var _a, _b;\n      this._blinkingState = EyeState.EyeState_First;\n      this._nextBlinkingTime = 0;\n      this._stateStartTimeSeconds = 0;\n      this._blinkingIntervalSeconds = 4;\n      this._closingSeconds = 0.1;\n      this._closedSeconds = 0.05;\n      this._openingSeconds = 0.15;\n      this._userTimeSeconds = 0;\n      this._parameterIds = [];\n      if (modelSetting == null) {\n        return;\n      }\n      this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n    }\n    determinNextBlinkingTiming() {\n      const r = Math.random();\n      return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n    }\n  };\n  let CubismEyeBlink = _CubismEyeBlink;\n  CubismEyeBlink.CloseIfZero = true;\n  var EyeState = /* @__PURE__ */ ((EyeState2) => {\n    EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n    return EyeState2;\n  })(EyeState || {});\n  class csmRect {\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n      this.x = x;\n      this.y = y;\n      this.width = w;\n      this.height = h;\n    }\n    getCenterX() {\n      return this.x + 0.5 * this.width;\n    }\n    getCenterY() {\n      return this.y + 0.5 * this.height;\n    }\n    getRight() {\n      return this.x + this.width;\n    }\n    getBottom() {\n      return this.y + this.height;\n    }\n    setRect(r) {\n      this.x = r.x;\n      this.y = r.y;\n      this.width = r.width;\n      this.height = r.height;\n    }\n    expand(w, h) {\n      this.x -= w;\n      this.y -= h;\n      this.width += w * 2;\n      this.height += h * 2;\n    }\n  }\n  const ColorChannelCount = 4;\n  const shaderCount = 10;\n  let s_instance;\n  let s_viewport;\n  let s_fbo;\n  class CubismClippingManager_WebGL {\n    getChannelFlagAsColor(channelNo) {\n      return this._channelColors[channelNo];\n    }\n    getMaskRenderTexture() {\n      let ret = 0;\n      if (this._maskTexture && this._maskTexture.texture != 0) {\n        this._maskTexture.frameNo = this._currentFrameNo;\n        ret = this._maskTexture.texture;\n      }\n      if (ret == 0) {\n        const size = this._clippingMaskBufferSize;\n        this._colorBuffer = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n        ret = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n      }\n      return ret;\n    }\n    setGL(gl) {\n      this.gl = gl;\n    }\n    calcClippedDrawTotalBounds(model, clippingContext) {\n      let clippedDrawTotalMinX = Number.MAX_VALUE;\n      let clippedDrawTotalMinY = Number.MAX_VALUE;\n      let clippedDrawTotalMaxX = Number.MIN_VALUE;\n      let clippedDrawTotalMaxY = Number.MIN_VALUE;\n      const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n      for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n        const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n        const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n        const drawableVertexes = model.getDrawableVertices(drawableIndex);\n        let minX = Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxX = Number.MIN_VALUE;\n        let maxY = Number.MIN_VALUE;\n        const loop = drawableVertexCount * Constant.vertexStep;\n        for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n          const x = drawableVertexes[pi];\n          const y = drawableVertexes[pi + 1];\n          if (x < minX) {\n            minX = x;\n          }\n          if (x > maxX) {\n            maxX = x;\n          }\n          if (y < minY) {\n            minY = y;\n          }\n          if (y > maxY) {\n            maxY = y;\n          }\n        }\n        if (minX == Number.MAX_VALUE) {\n          continue;\n        }\n        if (minX < clippedDrawTotalMinX) {\n          clippedDrawTotalMinX = minX;\n        }\n        if (minY < clippedDrawTotalMinY) {\n          clippedDrawTotalMinY = minY;\n        }\n        if (maxX > clippedDrawTotalMaxX) {\n          clippedDrawTotalMaxX = maxX;\n        }\n        if (maxY > clippedDrawTotalMaxY) {\n          clippedDrawTotalMaxY = maxY;\n        }\n        if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n          clippingContext._allClippedDrawRect.x = 0;\n          clippingContext._allClippedDrawRect.y = 0;\n          clippingContext._allClippedDrawRect.width = 0;\n          clippingContext._allClippedDrawRect.height = 0;\n          clippingContext._isUsing = false;\n        } else {\n          clippingContext._isUsing = true;\n          const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n          const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n          clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.width = w;\n          clippingContext._allClippedDrawRect.height = h;\n        }\n      }\n    }\n    constructor() {\n      this._maskRenderTexture = null;\n      this._colorBuffer = null;\n      this._currentFrameNo = 0;\n      this._clippingMaskBufferSize = 256;\n      this._clippingContextListForMask = [];\n      this._clippingContextListForDraw = [];\n      this._channelColors = [];\n      this._tmpBoundsOnModel = new csmRect();\n      this._tmpMatrix = new CubismMatrix44();\n      this._tmpMatrixForMask = new CubismMatrix44();\n      this._tmpMatrixForDraw = new CubismMatrix44();\n      let tmp = new CubismTextureColor();\n      tmp.R = 1;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 1;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 1;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 1;\n      this._channelColors.push(tmp);\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        if (this._clippingContextListForMask[i]) {\n          (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n        }\n      }\n      self2._clippingContextListForMask = void 0;\n      self2._clippingContextListForDraw = void 0;\n      if (this._maskTexture) {\n        (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n        self2._maskTexture = void 0;\n      }\n      self2._channelColors = void 0;\n      (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n      this._colorBuffer = null;\n    }\n    initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < drawableCount; i++) {\n        if (drawableMaskCounts[i] <= 0) {\n          this._clippingContextListForDraw.push(null);\n          continue;\n        }\n        let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n        if (clippingContext == null) {\n          clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n          this._clippingContextListForMask.push(clippingContext);\n        }\n        clippingContext.addClippedDrawable(i);\n        this._clippingContextListForDraw.push(clippingContext);\n      }\n    }\n    setupClippingContext(model, renderer) {\n      this._currentFrameNo++;\n      let usingClipCount = 0;\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const cc = this._clippingContextListForMask[clipIndex];\n        this.calcClippedDrawTotalBounds(model, cc);\n        if (cc._isUsing) {\n          usingClipCount++;\n        }\n      }\n      if (usingClipCount > 0) {\n        this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n        this._maskRenderTexture = this.getMaskRenderTexture();\n        renderer.getMvpMatrix();\n        renderer.preDraw();\n        this.setupLayoutBounds(usingClipCount);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n        this.gl.clearColor(1, 1, 1, 1);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n          const clipContext = this._clippingContextListForMask[clipIndex];\n          const allClipedDrawRect = clipContext._allClippedDrawRect;\n          const layoutBoundsOnTex01 = clipContext._layoutBounds;\n          const MARGIN = 0.05;\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n          this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n          const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n          const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(-1, -1);\n              this._tmpMatrix.scaleRelative(2, 2);\n            }\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n          }\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n          }\n          clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n          clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n          const clipDrawCount = clipContext._clippingIdCount;\n          for (let i = 0; i < clipDrawCount; i++) {\n            const clipDrawIndex = clipContext._clippingIdList[i];\n            if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n              continue;\n            }\n            renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n            renderer.setClippingContextBufferForMask(clipContext);\n            renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n          }\n        }\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        renderer.setClippingContextBufferForMask(null);\n        this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n      }\n    }\n    findSameClip(drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        const clippingContext = this._clippingContextListForMask[i];\n        const count = clippingContext._clippingIdCount;\n        if (count != drawableMaskCounts) {\n          continue;\n        }\n        let sameCount = 0;\n        for (let j = 0; j < count; j++) {\n          const clipId = clippingContext._clippingIdList[j];\n          for (let k = 0; k < count; k++) {\n            if (drawableMasks[k] == clipId) {\n              sameCount++;\n              break;\n            }\n          }\n        }\n        if (sameCount == count) {\n          return clippingContext;\n        }\n      }\n      return null;\n    }\n    setupLayoutBounds(usingClipCount) {\n      let div = usingClipCount / ColorChannelCount;\n      let mod = usingClipCount % ColorChannelCount;\n      div = ~~div;\n      mod = ~~mod;\n      let curClipIndex = 0;\n      for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n        const layoutCount = div + (channelNo < mod ? 1 : 0);\n        if (layoutCount == 0)\n          ;\n        else if (layoutCount == 1) {\n          const clipContext = this._clippingContextListForMask[curClipIndex++];\n          clipContext._layoutChannelNo = channelNo;\n          clipContext._layoutBounds.x = 0;\n          clipContext._layoutBounds.y = 0;\n          clipContext._layoutBounds.width = 1;\n          clipContext._layoutBounds.height = 1;\n        } else if (layoutCount == 2) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            xpos = ~~xpos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = 0;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 1;\n          }\n        } else if (layoutCount <= 4) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            let ypos = i / 2;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = ypos * 0.5;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 0.5;\n          }\n        } else if (layoutCount <= 9) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 3;\n            let ypos = i / 3;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 3;\n            cc._layoutBounds.y = ypos / 3;\n            cc._layoutBounds.width = 1 / 3;\n            cc._layoutBounds.height = 1 / 3;\n          }\n        } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 4;\n            let ypos = i / 4;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 4;\n            cc._layoutBounds.y = ypos / 4;\n            cc._layoutBounds.width = 1 / 4;\n            cc._layoutBounds.height = 1 / 4;\n          }\n        } else {\n          CubismLogError(\"not supported mask count : {0}\", layoutCount);\n        }\n      }\n    }\n    getColorBuffer() {\n      return this._colorBuffer;\n    }\n    getClippingContextListForDraw() {\n      return this._clippingContextListForDraw;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingMaskBufferSize = size;\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingMaskBufferSize;\n    }\n  }\n  class CubismRenderTextureResource {\n    constructor(frameNo, texture) {\n      this.frameNo = frameNo;\n      this.texture = texture;\n    }\n  }\n  class CubismClippingContext {\n    constructor(manager, clippingDrawableIndices, clipCount) {\n      this._isUsing = false;\n      this._owner = manager;\n      this._clippingIdList = clippingDrawableIndices;\n      this._clippingIdCount = clipCount;\n      this._allClippedDrawRect = new csmRect();\n      this._layoutBounds = new csmRect();\n      this._clippedDrawableIndexList = [];\n      this._matrixForMask = new CubismMatrix44();\n      this._matrixForDraw = new CubismMatrix44();\n    }\n    release() {\n      const self2 = this;\n      self2._layoutBounds = void 0;\n      self2._allClippedDrawRect = void 0;\n      self2._clippedDrawableIndexList = void 0;\n    }\n    addClippedDrawable(drawableIndex) {\n      this._clippedDrawableIndexList.push(drawableIndex);\n    }\n    getClippingManager() {\n      return this._owner;\n    }\n    setGl(gl) {\n      this._owner.setGL(gl);\n    }\n  }\n  class CubismShader_WebGL {\n    static getInstance() {\n      if (s_instance == null) {\n        s_instance = new CubismShader_WebGL();\n        return s_instance;\n      }\n      return s_instance;\n    }\n    static deleteInstance() {\n      if (s_instance) {\n        s_instance.release();\n        s_instance = void 0;\n      }\n    }\n    constructor() {\n      this._shaderSets = [];\n    }\n    release() {\n      this.releaseShaderProgram();\n    }\n    setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n      if (!isPremultipliedAlpha) {\n        CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n      }\n      if (this._shaderSets.length == 0) {\n        this.generateShaders();\n      }\n      let SRC_COLOR;\n      let DST_COLOR;\n      let SRC_ALPHA;\n      let DST_ALPHA;\n      const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n      if (clippingContextBufferForMask != null) {\n        const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n        this.gl.useProgram(shaderSet.shaderProgram);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        const channelNo = clippingContextBufferForMask._layoutChannelNo;\n        const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n        const rect = clippingContextBufferForMask._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n        SRC_COLOR = this.gl.ZERO;\n        DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n        SRC_ALPHA = this.gl.ZERO;\n        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n      } else {\n        const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n        const masked = clippingContextBufferForDraw != null;\n        const offset = masked ? invertedMask ? 2 : 1 : 0;\n        let shaderSet;\n        switch (colorBlendMode) {\n          case CubismBlendMode.CubismBlendMode_Normal:\n          default:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ONE;\n            DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n            break;\n          case CubismBlendMode.CubismBlendMode_Additive:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n          case CubismBlendMode.CubismBlendMode_Multiplicative:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.DST_COLOR;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (clippingContextBufferForDraw != null) {\n          this.gl.activeTexture(this.gl.TEXTURE1);\n          const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n          this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n          this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n          this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n          const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n          const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n          this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        }\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n      }\n      if (bufferData.index == null) {\n        bufferData.index = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n    }\n    releaseShaderProgram() {\n      for (let i = 0; i < this._shaderSets.length; i++) {\n        this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n        this._shaderSets[i].shaderProgram = 0;\n      }\n      this._shaderSets = [];\n    }\n    generateShaders() {\n      for (let i = 0; i < shaderCount; i++) {\n        this._shaderSets.push({});\n      }\n      this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n      this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n      this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n      this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n      this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n      this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n      this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n      this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n      this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n      this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n      this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n      this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n      this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n      this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n      this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n      this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n      this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n      this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n      this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n      this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n      this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n      this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n      this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n      this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n      this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n      this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n      this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n      this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n      this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n      this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n      this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n      this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n      this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n      this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n      this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n      this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n      this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n      this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n      this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n      this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n      this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n      this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n      this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n      this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n      this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n      this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n      this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n      this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n      this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n      this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n      this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n      this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n      this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n      this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n      this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n      this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n      this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n      this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n      this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n    }\n    loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n      let shaderProgram = this.gl.createProgram();\n      let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n      if (!vertShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n      if (!fragShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      this.gl.attachShader(shaderProgram, vertShader);\n      this.gl.attachShader(shaderProgram, fragShader);\n      this.gl.linkProgram(shaderProgram);\n      const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n      if (!linkStatus) {\n        CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        if (shaderProgram) {\n          this.gl.deleteProgram(shaderProgram);\n        }\n        return 0;\n      }\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      return shaderProgram;\n    }\n    compileShaderSource(shaderType, shaderSource) {\n      const source = shaderSource;\n      const shader = this.gl.createShader(shaderType);\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!shader) {\n        const log = this.gl.getShaderInfoLog(shader);\n        CubismLogError(\"Shader compile log: {0} \", log);\n      }\n      const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n      if (!status) {\n        this.gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    }\n    setGl(gl) {\n      this.gl = gl;\n    }\n  }\n  var ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n    ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n    return ShaderNames2;\n  })(ShaderNames || {});\n  const vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\n  const vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\n  const fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\n  const fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\n  class CubismRenderer_WebGL extends CubismRenderer {\n    constructor() {\n      super();\n      this._clippingContextBufferForMask = null;\n      this._clippingContextBufferForDraw = null;\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this.firstDraw = true;\n      this._textures = {};\n      this._sortedDrawableIndexList = [];\n      this._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n    }\n    initialize(model) {\n      if (model.isUsingMasking()) {\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n      }\n      for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n        this._sortedDrawableIndexList[i] = 0;\n      }\n      super.initialize(model);\n    }\n    bindTexture(modelTextureNo, glTexture) {\n      this._textures[modelTextureNo] = glTexture;\n    }\n    getBindedTextures() {\n      return this._textures;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingManager.release();\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.setClippingMaskBufferSize(size);\n      this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingManager.getClippingMaskBufferSize();\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      this._clippingManager.release();\n      self2._clippingManager = void 0;\n      (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n      this._bufferData.vertex = null;\n      (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n      this._bufferData.uv = null;\n      (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n      this._bufferData.index = null;\n      self2._bufferData = void 0;\n      self2._textures = void 0;\n    }\n    doDrawModel() {\n      this.preDraw();\n      if (this._clippingManager != null) {\n        this._clippingManager.setupClippingContext(this.getModel(), this);\n      }\n      const drawableCount = this.getModel().getDrawableCount();\n      const renderOrder = this.getModel().getDrawableRenderOrders();\n      for (let i = 0; i < drawableCount; ++i) {\n        const order = renderOrder[i];\n        this._sortedDrawableIndexList[order] = i;\n      }\n      for (let i = 0; i < drawableCount; ++i) {\n        const drawableIndex = this._sortedDrawableIndexList[i];\n        if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n          continue;\n        }\n        this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n        this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n        this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n      }\n    }\n    drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n      if (this.isCulling()) {\n        this.gl.enable(this.gl.CULL_FACE);\n      } else {\n        this.gl.disable(this.gl.CULL_FACE);\n      }\n      this.gl.frontFace(this.gl.CCW);\n      const modelColorRGBA = this.getModelColor();\n      if (this.getClippingContextBufferForMask() == null) {\n        modelColorRGBA.A *= opacity;\n        if (this.isPremultipliedAlpha()) {\n          modelColorRGBA.R *= modelColorRGBA.A;\n          modelColorRGBA.G *= modelColorRGBA.A;\n          modelColorRGBA.B *= modelColorRGBA.A;\n        }\n      }\n      let drawtexture = null;\n      if (this._textures[textureNo] != null) {\n        drawtexture = this._textures[textureNo];\n      }\n      CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n      this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n      this.gl.useProgram(null);\n      this.setClippingContextBufferForDraw(null);\n      this.setClippingContextBufferForMask(null);\n    }\n    static doStaticRelease() {\n      CubismShader_WebGL.deleteInstance();\n    }\n    setRenderState(fbo, viewport) {\n      s_fbo = fbo;\n      s_viewport = viewport;\n    }\n    preDraw() {\n      if (this.firstDraw) {\n        this.firstDraw = false;\n        this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n      }\n      this.gl.disable(this.gl.SCISSOR_TEST);\n      this.gl.disable(this.gl.STENCIL_TEST);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.frontFace(this.gl.CW);\n      this.gl.enable(this.gl.BLEND);\n      this.gl.colorMask(true, true, true, true);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    setClippingContextBufferForMask(clip) {\n      this._clippingContextBufferForMask = clip;\n    }\n    getClippingContextBufferForMask() {\n      return this._clippingContextBufferForMask;\n    }\n    setClippingContextBufferForDraw(clip) {\n      this._clippingContextBufferForDraw = clip;\n    }\n    getClippingContextBufferForDraw() {\n      return this._clippingContextBufferForDraw;\n    }\n    startUp(gl) {\n      this.gl = gl;\n      this._clippingManager.setGL(gl);\n      CubismShader_WebGL.getInstance().setGl(gl);\n    }\n  }\n  CubismRenderer.staticRelease = () => {\n    CubismRenderer_WebGL.doStaticRelease();\n  };\n  const tempMatrix = new CubismMatrix44();\n  class Cubism4InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.lipSync = true;\n      this.breath = CubismBreath.create();\n      this.renderer = new CubismRenderer_WebGL();\n      this.idParamAngleX = ParamAngleX;\n      this.idParamAngleY = ParamAngleY;\n      this.idParamAngleZ = ParamAngleZ;\n      this.idParamEyeBallX = ParamEyeBallX;\n      this.idParamEyeBallY = ParamEyeBallY;\n      this.idParamBodyAngleX = ParamBodyAngleX;\n      this.idParamBreath = ParamBreath;\n      this.pixelsPerUnit = 1;\n      this.centeringTransform = new math.Matrix();\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism4MotionManager(settings, options);\n      this.init();\n    }\n    init() {\n      var _a;\n      super.init();\n      if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n        this.eyeBlink = CubismEyeBlink.create(this.settings);\n      }\n      this.breath.setParameters([\n        new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n        new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n        new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n        new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n        new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n      ]);\n      this.renderer.initialize(this.coreModel);\n      this.renderer.setIsPremultipliedAlpha(true);\n    }\n    getSize() {\n      return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    setupLayout() {\n      super.setupLayout();\n      this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n      this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n    }\n    updateWebGLContext(gl, glContextID) {\n      this.renderer.firstDraw = true;\n      this.renderer._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n      this.renderer.startUp(gl);\n      this.renderer._clippingManager._currentFrameNo = glContextID;\n      this.renderer._clippingManager._maskTexture = void 0;\n      CubismShader_WebGL.getInstance()._shaderSets = [];\n    }\n    bindTexture(index, texture) {\n      this.renderer.bindTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a, _b;\n      return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.Id,\n        name: hitArea.Name,\n        index: this.coreModel.getDrawableIndex(hitArea.Id)\n      }))) != null ? _b : [];\n    }\n    getDrawableIDs() {\n      return this.coreModel.getDrawableIds();\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawableIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n      for (let i = 0; i < arr.length; i += 2) {\n        arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n        arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n      }\n      return arr;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      dt /= 1e3;\n      now /= 1e3;\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParameters();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt * 1e3, now * 1e3);\n      (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n      (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParameters();\n    }\n    updateFocus() {\n      this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n      this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n      this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      var _a;\n      (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n    }\n    draw(gl) {\n      const matrix = this.drawingMatrix;\n      const array = tempMatrix.getArray();\n      array[0] = matrix.a;\n      array[1] = matrix.b;\n      array[4] = -matrix.c;\n      array[5] = -matrix.d;\n      array[12] = matrix.tx;\n      array[13] = matrix.ty;\n      this.renderer.setMvpMatrix(tempMatrix);\n      this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n      this.renderer.drawModel();\n    }\n    destroy() {\n      super.destroy();\n      this.renderer.release();\n      this.coreModel.release();\n      this.renderer = void 0;\n      this.coreModel = void 0;\n    }\n  }\n  let startupPromise;\n  let startupRetries = 20;\n  function cubism4Ready() {\n    if (CubismFramework.isStarted()) {\n      return Promise.resolve();\n    }\n    startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n      function startUpWithRetry() {\n        try {\n          startUpCubism4();\n          resolve();\n        } catch (e) {\n          startupRetries--;\n          if (startupRetries < 0) {\n            const err = new Error(\"Failed to start up Cubism 4 framework.\");\n            err.cause = e;\n            reject(err);\n            return;\n          }\n          logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n          setTimeout(startUpWithRetry, 10);\n        }\n      }\n      startUpWithRetry();\n    });\n    return startupPromise;\n  }\n  function startUpCubism4(options) {\n    options = Object.assign({\n      logFunction: console.log,\n      loggingLevel: LogLevel.LogLevel_Verbose\n    }, options);\n    CubismFramework.startUp(options);\n    CubismFramework.initialize();\n  }\n  const Epsilon = 1e-3;\n  const DefaultFadeInSeconds = 0.5;\n  class CubismPose {\n    static create(pose3json) {\n      const ret = new CubismPose();\n      if (typeof pose3json.FadeInTime === \"number\") {\n        ret._fadeTimeSeconds = pose3json.FadeInTime;\n        if (ret._fadeTimeSeconds <= 0) {\n          ret._fadeTimeSeconds = DefaultFadeInSeconds;\n        }\n      }\n      const poseListInfo = pose3json.Groups;\n      const poseCount = poseListInfo.length;\n      for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n        const idListInfo = poseListInfo[poseIndex];\n        const idCount = idListInfo.length;\n        let groupCount = 0;\n        for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n          const partInfo = idListInfo[groupIndex];\n          const partData = new PartData();\n          partData.partId = partInfo.Id;\n          const linkListInfo = partInfo.Link;\n          if (linkListInfo) {\n            const linkCount = linkListInfo.length;\n            for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n              const linkPart = new PartData();\n              linkPart.partId = linkListInfo[linkIndex];\n              partData.link.push(linkPart);\n            }\n          }\n          ret._partGroups.push(partData);\n          ++groupCount;\n        }\n        ret._partGroupCounts.push(groupCount);\n      }\n      return ret;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      if (model != this._lastModel) {\n        this.reset(model);\n      }\n      this._lastModel = model;\n      if (deltaTimeSeconds < 0) {\n        deltaTimeSeconds = 0;\n      }\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; i++) {\n        const partGroupCount = this._partGroupCounts[i];\n        this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n        beginIndex += partGroupCount;\n      }\n      this.copyPartOpacities(model);\n    }\n    reset(model) {\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; ++i) {\n        const groupCount = this._partGroupCounts[i];\n        for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n          this._partGroups[j].initialize(model);\n          const partsIndex = this._partGroups[j].partIndex;\n          const paramIndex = this._partGroups[j].parameterIndex;\n          if (partsIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n          model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n          for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n            this._partGroups[j].link[k].initialize(model);\n          }\n        }\n        beginIndex += groupCount;\n      }\n    }\n    copyPartOpacities(model) {\n      for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n        const partData = this._partGroups[groupIndex];\n        if (partData.link.length == 0) {\n          continue;\n        }\n        const partIndex = this._partGroups[groupIndex].partIndex;\n        const opacity = model.getPartOpacityByIndex(partIndex);\n        for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n          const linkPart = partData.link[linkIndex];\n          const linkPartIndex = linkPart.partIndex;\n          if (linkPartIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(linkPartIndex, opacity);\n        }\n      }\n    }\n    doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n      let visiblePartIndex = -1;\n      let newOpacity = 1;\n      const phi = 0.5;\n      const backOpacityThreshold = 0.15;\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partIndex = this._partGroups[i].partIndex;\n        const paramIndex = this._partGroups[i].parameterIndex;\n        if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n          if (visiblePartIndex >= 0) {\n            break;\n          }\n          visiblePartIndex = i;\n          newOpacity = model.getPartOpacityByIndex(partIndex);\n          newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n          if (newOpacity > 1) {\n            newOpacity = 1;\n          }\n        }\n      }\n      if (visiblePartIndex < 0) {\n        visiblePartIndex = 0;\n        newOpacity = 1;\n      }\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partsIndex = this._partGroups[i].partIndex;\n        if (visiblePartIndex == i) {\n          model.setPartOpacityByIndex(partsIndex, newOpacity);\n        } else {\n          let opacity = model.getPartOpacityByIndex(partsIndex);\n          let a1;\n          if (newOpacity < phi) {\n            a1 = newOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - newOpacity) * phi / (1 - phi);\n          }\n          const backOpacity = (1 - a1) * (1 - newOpacity);\n          if (backOpacity > backOpacityThreshold) {\n            a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartOpacityByIndex(partsIndex, opacity);\n        }\n      }\n    }\n    constructor() {\n      this._fadeTimeSeconds = DefaultFadeInSeconds;\n      this._lastModel = void 0;\n      this._partGroups = [];\n      this._partGroupCounts = [];\n    }\n  }\n  class PartData {\n    constructor(v) {\n      this.parameterIndex = 0;\n      this.partIndex = 0;\n      this.partId = \"\";\n      this.link = [];\n      if (v != void 0) {\n        this.assignment(v);\n      }\n    }\n    assignment(v) {\n      this.partId = v.partId;\n      this.link = v.link.map((link) => link.clone());\n      return this;\n    }\n    initialize(model) {\n      this.parameterIndex = model.getParameterIndex(this.partId);\n      this.partIndex = model.getPartIndex(this.partId);\n      model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    clone() {\n      const clonePartData = new PartData();\n      clonePartData.partId = this.partId;\n      clonePartData.parameterIndex = this.parameterIndex;\n      clonePartData.partIndex = this.partIndex;\n      clonePartData.link = this.link.map((link) => link.clone());\n      return clonePartData;\n    }\n  }\n  class CubismModel {\n    update() {\n      this._model.update();\n      this._model.drawables.resetDynamicFlags();\n    }\n    getCanvasWidth() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n    }\n    getCanvasHeight() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n    }\n    saveParameters() {\n      const parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      for (let i = 0; i < parameterCount; ++i) {\n        if (i < savedParameterCount) {\n          this._savedParameters[i] = this._parameterValues[i];\n        } else {\n          this._savedParameters.push(this._parameterValues[i]);\n        }\n      }\n    }\n    getModel() {\n      return this._model;\n    }\n    getPartIndex(partId) {\n      let partIndex;\n      const partCount = this._model.parts.count;\n      for (partIndex = 0; partIndex < partCount; ++partIndex) {\n        if (partId == this._partIds[partIndex]) {\n          return partIndex;\n        }\n      }\n      if (partId in this._notExistPartId) {\n        return this._notExistPartId[partId];\n      }\n      partIndex = partCount + this._notExistPartId.length;\n      this._notExistPartId[partId] = partIndex;\n      this._notExistPartOpacities[partIndex] = 0;\n      return partIndex;\n    }\n    getPartCount() {\n      return this._model.parts.count;\n    }\n    setPartOpacityByIndex(partIndex, opacity) {\n      if (partIndex in this._notExistPartOpacities) {\n        this._notExistPartOpacities[partIndex] = opacity;\n        return;\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      this._partOpacities[partIndex] = opacity;\n    }\n    setPartOpacityById(partId, opacity) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return;\n      }\n      this.setPartOpacityByIndex(index, opacity);\n    }\n    getPartOpacityByIndex(partIndex) {\n      if (partIndex in this._notExistPartOpacities) {\n        return this._notExistPartOpacities[partIndex];\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      return this._partOpacities[partIndex];\n    }\n    getPartOpacityById(partId) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return 0;\n      }\n      return this.getPartOpacityByIndex(index);\n    }\n    getParameterIndex(parameterId) {\n      let parameterIndex;\n      const idCount = this._model.parameters.count;\n      for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n        if (parameterId != this._parameterIds[parameterIndex]) {\n          continue;\n        }\n        return parameterIndex;\n      }\n      if (parameterId in this._notExistParameterId) {\n        return this._notExistParameterId[parameterId];\n      }\n      parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n      this._notExistParameterId[parameterId] = parameterIndex;\n      this._notExistParameterValues[parameterIndex] = 0;\n      return parameterIndex;\n    }\n    getParameterCount() {\n      return this._model.parameters.count;\n    }\n    getParameterMaximumValue(parameterIndex) {\n      return this._model.parameters.maximumValues[parameterIndex];\n    }\n    getParameterMinimumValue(parameterIndex) {\n      return this._model.parameters.minimumValues[parameterIndex];\n    }\n    getParameterDefaultValue(parameterIndex) {\n      return this._model.parameters.defaultValues[parameterIndex];\n    }\n    getParameterValueByIndex(parameterIndex) {\n      if (parameterIndex in this._notExistParameterValues) {\n        return this._notExistParameterValues[parameterIndex];\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      return this._parameterValues[parameterIndex];\n    }\n    getParameterValueById(parameterId) {\n      const parameterIndex = this.getParameterIndex(parameterId);\n      return this.getParameterValueByIndex(parameterIndex);\n    }\n    setParameterValueByIndex(parameterIndex, value, weight = 1) {\n      if (parameterIndex in this._notExistParameterValues) {\n        this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n        return;\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      if (this._model.parameters.maximumValues[parameterIndex] < value) {\n        value = this._model.parameters.maximumValues[parameterIndex];\n      }\n      if (this._model.parameters.minimumValues[parameterIndex] > value) {\n        value = this._model.parameters.minimumValues[parameterIndex];\n      }\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n    setParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.setParameterValueByIndex(index, value, weight);\n    }\n    addParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    addParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.addParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n    }\n    getDrawableIds() {\n      return this._drawableIds.slice();\n    }\n    getDrawableIndex(drawableId) {\n      const drawableCount = this._model.drawables.count;\n      for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n        if (this._drawableIds[drawableIndex] == drawableId) {\n          return drawableIndex;\n        }\n      }\n      return -1;\n    }\n    getDrawableCount() {\n      return this._model.drawables.count;\n    }\n    getDrawableId(drawableIndex) {\n      return this._model.drawables.ids[drawableIndex];\n    }\n    getDrawableRenderOrders() {\n      return this._model.drawables.renderOrders;\n    }\n    getDrawableTextureIndices(drawableIndex) {\n      return this._model.drawables.textureIndices[drawableIndex];\n    }\n    getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableVertexIndexCount(drawableIndex) {\n      return this._model.drawables.indexCounts[drawableIndex];\n    }\n    getDrawableVertexCount(drawableIndex) {\n      return this._model.drawables.vertexCounts[drawableIndex];\n    }\n    getDrawableVertices(drawableIndex) {\n      return this.getDrawableVertexPositions(drawableIndex);\n    }\n    getDrawableVertexIndices(drawableIndex) {\n      return this._model.drawables.indices[drawableIndex];\n    }\n    getDrawableVertexPositions(drawableIndex) {\n      return this._model.drawables.vertexPositions[drawableIndex];\n    }\n    getDrawableVertexUvs(drawableIndex) {\n      return this._model.drawables.vertexUvs[drawableIndex];\n    }\n    getDrawableOpacity(drawableIndex) {\n      return this._model.drawables.opacities[drawableIndex];\n    }\n    getDrawableCulling(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    getDrawableBlendMode(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n    }\n    getDrawableInvertedMaskBit(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    getDrawableMasks() {\n      return this._model.drawables.masks;\n    }\n    getDrawableMaskCounts() {\n      return this._model.drawables.maskCounts;\n    }\n    isUsingMasking() {\n      for (let d = 0; d < this._model.drawables.count; ++d) {\n        if (this._model.drawables.maskCounts[d] <= 0) {\n          continue;\n        }\n        return true;\n      }\n      return false;\n    }\n    getDrawableDynamicFlagIsVisible(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    loadParameters() {\n      let parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      if (parameterCount > savedParameterCount) {\n        parameterCount = savedParameterCount;\n      }\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterValues[i] = this._savedParameters[i];\n      }\n    }\n    initialize() {\n      this._parameterValues = this._model.parameters.values;\n      this._partOpacities = this._model.parts.opacities;\n      this._parameterMaximumValues = this._model.parameters.maximumValues;\n      this._parameterMinimumValues = this._model.parameters.minimumValues;\n      {\n        const parameterIds = this._model.parameters.ids;\n        const parameterCount = this._model.parameters.count;\n        for (let i = 0; i < parameterCount; ++i) {\n          this._parameterIds.push(parameterIds[i]);\n        }\n      }\n      {\n        const partIds = this._model.parts.ids;\n        const partCount = this._model.parts.count;\n        for (let i = 0; i < partCount; ++i) {\n          this._partIds.push(partIds[i]);\n        }\n      }\n      {\n        const drawableIds = this._model.drawables.ids;\n        const drawableCount = this._model.drawables.count;\n        for (let i = 0; i < drawableCount; ++i) {\n          this._drawableIds.push(drawableIds[i]);\n        }\n      }\n    }\n    constructor(model) {\n      this._model = model;\n      this._savedParameters = [];\n      this._parameterIds = [];\n      this._drawableIds = [];\n      this._partIds = [];\n      this._notExistPartId = {};\n      this._notExistParameterId = {};\n      this._notExistParameterValues = {};\n      this._notExistPartOpacities = {};\n      this.initialize();\n    }\n    release() {\n      this._model.release();\n      this._model = void 0;\n    }\n  }\n  class CubismMoc {\n    static create(mocBytes) {\n      const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n      if (moc) {\n        return new CubismMoc(moc);\n      }\n      throw new Error(\"Unknown error\");\n    }\n    createModel() {\n      let cubismModel;\n      const model = Live2DCubismCore.Model.fromMoc(this._moc);\n      if (model) {\n        cubismModel = new CubismModel(model);\n        ++this._modelCount;\n        return cubismModel;\n      }\n      throw new Error(\"Unknown error\");\n    }\n    deleteModel(model) {\n      if (model != null) {\n        --this._modelCount;\n      }\n    }\n    constructor(moc) {\n      this._moc = moc;\n      this._modelCount = 0;\n    }\n    release() {\n      this._moc._release();\n      this._moc = void 0;\n    }\n  }\n  var CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n    CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n    return CubismPhysicsTargetType2;\n  })(CubismPhysicsTargetType || {});\n  var CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n    return CubismPhysicsSource2;\n  })(CubismPhysicsSource || {});\n  class CubismPhysicsParticle {\n    constructor() {\n      this.initialPosition = new CubismVector2(0, 0);\n      this.position = new CubismVector2(0, 0);\n      this.lastPosition = new CubismVector2(0, 0);\n      this.lastGravity = new CubismVector2(0, 0);\n      this.force = new CubismVector2(0, 0);\n      this.velocity = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsSubRig {\n    constructor() {\n      this.normalizationPosition = {};\n      this.normalizationAngle = {};\n    }\n  }\n  class CubismPhysicsInput {\n    constructor() {\n      this.source = {};\n    }\n  }\n  class CubismPhysicsOutput {\n    constructor() {\n      this.destination = {};\n      this.translationScale = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsRig {\n    constructor() {\n      this.settings = [];\n      this.inputs = [];\n      this.outputs = [];\n      this.particles = [];\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getGravity() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n      ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n      return ret;\n    }\n    getWind() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Wind.X;\n      ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n      return ret;\n    }\n    getSubRigCount() {\n      return this._json.Meta.PhysicsSettingCount;\n    }\n    getTotalInputCount() {\n      return this._json.Meta.TotalInputCount;\n    }\n    getTotalOutputCount() {\n      return this._json.Meta.TotalOutputCount;\n    }\n    getVertexCount() {\n      return this._json.Meta.VertexCount;\n    }\n    getNormalizationPositionMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n    }\n    getNormalizationPositionMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n    }\n    getNormalizationPositionDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n    }\n    getNormalizationAngleMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n    }\n    getNormalizationAngleMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n    }\n    getNormalizationAngleDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n    }\n    getInputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n    }\n    getInputWeight(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n    }\n    getInputReflect(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n    }\n    getInputType(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n    }\n    getInputSourceId(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n    }\n    getOutputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n    }\n    getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n    }\n    getOutputAngleScale(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n    }\n    getOutputWeight(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n    }\n    getOutputDestinationId(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n    }\n    getOutputType(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n    }\n    getOutputReflect(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n    }\n    getParticleCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n    }\n    getParticleMobility(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n    }\n    getParticleDelay(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n    }\n    getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n    }\n    getParticleRadius(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n    }\n    getParticlePosition(physicsSettingIndex, vertexIndex) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n      ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n      return ret;\n    }\n  }\n  const PhysicsTypeTagX = \"X\";\n  const PhysicsTypeTagY = \"Y\";\n  const PhysicsTypeTagAngle = \"Angle\";\n  const AirResistance = 5;\n  const MaximumWeight = 100;\n  const MovementThreshold = 1e-3;\n  class CubismPhysics {\n    static create(json) {\n      const ret = new CubismPhysics();\n      ret.parse(json);\n      ret._physicsRig.gravity.y = 0;\n      return ret;\n    }\n    evaluate(model, deltaTimeSeconds) {\n      let totalAngle;\n      let weight;\n      let radAngle;\n      let outputValue;\n      const totalTranslation = new CubismVector2();\n      let currentSetting;\n      let currentInput;\n      let currentOutput;\n      let currentParticles;\n      let parameterValue;\n      let parameterMaximumValue;\n      let parameterMinimumValue;\n      let parameterDefaultValue;\n      parameterValue = model.getModel().parameters.values;\n      parameterMaximumValue = model.getModel().parameters.maximumValues;\n      parameterMinimumValue = model.getModel().parameters.minimumValues;\n      parameterDefaultValue = model.getModel().parameters.defaultValues;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        totalAngle = { angle: 0 };\n        totalTranslation.x = 0;\n        totalTranslation.y = 0;\n        currentSetting = this._physicsRig.settings[settingIndex];\n        currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n        currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n        currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        for (let i = 0; i < currentSetting.inputCount; ++i) {\n          weight = currentInput[i].weight / MaximumWeight;\n          if (currentInput[i].sourceParameterIndex == -1) {\n            currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n          }\n          currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n        }\n        radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n        totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n        totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n        updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\n          const particleIndex = currentOutput[i].vertexIndex;\n          if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n            break;\n          }\n          if (currentOutput[i].destinationParameterIndex == -1) {\n            currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n          }\n          const translation = new CubismVector2();\n          translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n          translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n          outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n          const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n          const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n          updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n          for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n            parameterValue[offset] = outParameterValue[outParamIndex];\n          }\n        }\n      }\n    }\n    setOptions(options) {\n      this._options = options;\n    }\n    getOption() {\n      return this._options;\n    }\n    constructor() {\n      this._options = new Options();\n      this._options.gravity.y = -1;\n      this._options.gravity.x = 0;\n      this._options.wind.x = 0;\n      this._options.wind.y = 0;\n    }\n    release() {\n      this._physicsRig = void 0;\n    }\n    parse(physicsJson) {\n      this._physicsRig = new CubismPhysicsRig();\n      let json = new CubismPhysicsJson(physicsJson);\n      this._physicsRig.gravity = json.getGravity();\n      this._physicsRig.wind = json.getWind();\n      this._physicsRig.subRigCount = json.getSubRigCount();\n      let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n      for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n        const setting = new CubismPhysicsSubRig();\n        setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n        setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n        setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n        setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n        setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n        setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n        setting.inputCount = json.getInputCount(i);\n        setting.baseInputIndex = inputIndex;\n        inputIndex += setting.inputCount;\n        for (let j = 0; j < setting.inputCount; ++j) {\n          const input = new CubismPhysicsInput();\n          input.sourceParameterIndex = -1;\n          input.weight = json.getInputWeight(i, j);\n          input.reflect = json.getInputReflect(i, j);\n          switch (json.getInputType(i, j)) {\n            case PhysicsTypeTagX:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n              break;\n            case PhysicsTypeTagY:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n              break;\n            case PhysicsTypeTagAngle:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n              break;\n          }\n          input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          input.source.id = json.getInputSourceId(i, j);\n          this._physicsRig.inputs.push(input);\n        }\n        setting.outputCount = json.getOutputCount(i);\n        setting.baseOutputIndex = outputIndex;\n        outputIndex += setting.outputCount;\n        for (let j = 0; j < setting.outputCount; ++j) {\n          const output = new CubismPhysicsOutput();\n          output.destinationParameterIndex = -1;\n          output.vertexIndex = json.getOutputVertexIndex(i, j);\n          output.angleScale = json.getOutputAngleScale(i, j);\n          output.weight = json.getOutputWeight(i, j);\n          output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          output.destination.id = json.getOutputDestinationId(i, j);\n          switch (json.getOutputType(i, j)) {\n            case PhysicsTypeTagX:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              output.getValue = getOutputTranslationX;\n              output.getScale = getOutputScaleTranslationX;\n              break;\n            case PhysicsTypeTagY:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              output.getValue = getOutputTranslationY;\n              output.getScale = getOutputScaleTranslationY;\n              break;\n            case PhysicsTypeTagAngle:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              output.getValue = getOutputAngle;\n              output.getScale = getOutputScaleAngle;\n              break;\n          }\n          output.reflect = json.getOutputReflect(i, j);\n          this._physicsRig.outputs.push(output);\n        }\n        setting.particleCount = json.getParticleCount(i);\n        setting.baseParticleIndex = particleIndex;\n        particleIndex += setting.particleCount;\n        for (let j = 0; j < setting.particleCount; ++j) {\n          const particle = new CubismPhysicsParticle();\n          particle.mobility = json.getParticleMobility(i, j);\n          particle.delay = json.getParticleDelay(i, j);\n          particle.acceleration = json.getParticleAcceleration(i, j);\n          particle.radius = json.getParticleRadius(i, j);\n          particle.position = json.getParticlePosition(i, j);\n          this._physicsRig.particles.push(particle);\n        }\n        this._physicsRig.settings.push(setting);\n      }\n      this.initialize();\n      json.release();\n    }\n    initialize() {\n      let strand;\n      let currentSetting;\n      let radius;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        currentSetting = this._physicsRig.settings[settingIndex];\n        strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        strand[0].initialPosition = new CubismVector2(0, 0);\n        strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n        strand[0].lastGravity = new CubismVector2(0, -1);\n        strand[0].lastGravity.y *= -1;\n        strand[0].velocity = new CubismVector2(0, 0);\n        strand[0].force = new CubismVector2(0, 0);\n        for (let i = 1; i < currentSetting.particleCount; ++i) {\n          radius = new CubismVector2(0, 0);\n          radius.y = strand[i].radius;\n          strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n          strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastGravity = new CubismVector2(0, -1);\n          strand[i].lastGravity.y *= -1;\n          strand[i].velocity = new CubismVector2(0, 0);\n          strand[i].force = new CubismVector2(0, 0);\n        }\n      }\n    }\n  }\n  class Options {\n    constructor() {\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  function getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n  }\n  function getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n      parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    } else {\n      parentGravity = parentGravity.multiplyByScaler(-1);\n    }\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getRangeValue(min, max) {\n    return Math.abs(Math.max(min, max) - Math.min(min, max));\n  }\n  function getDefaultValue(min, max) {\n    const minValue = Math.min(min, max);\n    return minValue + getRangeValue(min, max) / 2;\n  }\n  function getOutputScaleTranslationX(translationScale, angleScale) {\n    return translationScale.x;\n  }\n  function getOutputScaleTranslationY(translationScale, angleScale) {\n    return translationScale.y;\n  }\n  function getOutputScaleAngle(translationScale, angleScale) {\n    return angleScale;\n  }\n  function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let totalRadian;\n    let delay;\n    let radian;\n    let currentGravity;\n    let direction = new CubismVector2(0, 0);\n    let velocity = new CubismVector2(0, 0);\n    let force = new CubismVector2(0, 0);\n    let newDirection = new CubismVector2(0, 0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    totalRadian = CubismMath.degreesToRadian(totalAngle);\n    currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n      strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n      strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n      delay = strand[i].delay * deltaTimeSeconds * 30;\n      direction = strand[i].position.substract(strand[i - 1].position);\n      radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n      direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n      direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n      strand[i].position = strand[i - 1].position.add(direction);\n      velocity = strand[i].velocity.multiplyByScaler(delay);\n      force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n      strand[i].position = strand[i].position.add(velocity).add(force);\n      newDirection = strand[i].position.substract(strand[i - 1].position);\n      newDirection.normalize();\n      strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n      if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n        strand[i].position.x = 0;\n      }\n      if (delay != 0) {\n        strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n        strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n        strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n      }\n      strand[i].force = new CubismVector2(0, 0);\n      strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n  }\n  function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let outputScale;\n    let value;\n    let weight;\n    outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n      if (value < output.valueBelowMinimum) {\n        output.valueBelowMinimum = value;\n      }\n      value = parameterValueMinimum;\n    } else if (value > parameterValueMaximum) {\n      if (value > output.valueExceededMaximum) {\n        output.valueExceededMaximum = value;\n      }\n      value = parameterValueMaximum;\n    }\n    weight = output.weight / MaximumWeight;\n    if (weight >= 1) {\n      parameterValue[0] = value;\n    } else {\n      value = parameterValue[0] * (1 - weight) + value * weight;\n      parameterValue[0] = value;\n    }\n  }\n  function normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0;\n    const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n      value = maxValue;\n    }\n    const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n      value = minValue;\n    }\n    const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch (Math.sign(paramValue)) {\n      case 1: {\n        const nLength = maxNormValue - middleNormValue;\n        const pLength = maxValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case -1: {\n        const nLength = minNormValue - middleNormValue;\n        const pLength = minValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case 0: {\n        result = middleNormValue;\n        break;\n      }\n    }\n    return isInverted ? result : result * -1;\n  }\n  Live2DFactory.registerRuntime({\n    version: 4,\n    ready: cubism4Ready,\n    test(source) {\n      return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 4) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 4);\n      return String.fromCharCode(...view) === \"MOC3\";\n    },\n    createModelSettings(json) {\n      return new Cubism4ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const moc = CubismMoc.create(data);\n      try {\n        const model = moc.createModel();\n        model.__moc = moc;\n        return model;\n      } catch (e) {\n        try {\n          moc.release();\n        } catch (ignored) {\n        }\n        throw e;\n      }\n    },\n    createInternalModel(coreModel, settings, options) {\n      const model = new Cubism4InternalModel(coreModel, settings, options);\n      const coreModelWithMoc = coreModel;\n      if (coreModelWithMoc.__moc) {\n        model.__moc = coreModelWithMoc.__moc;\n        delete coreModelWithMoc.__moc;\n        model.once(\"destroy\", releaseMoc);\n      }\n      return model;\n    },\n    createPhysics(coreModel, data) {\n      return CubismPhysics.create(data);\n    },\n    createPose(coreModel, data) {\n      return CubismPose.create(data);\n    }\n  });\n  function releaseMoc() {\n    var _a;\n    (_a = this.__moc) == null ? void 0 : _a.release();\n  }\n  exports2.Cubism2ExpressionManager = Cubism2ExpressionManager;\n  exports2.Cubism2InternalModel = Cubism2InternalModel;\n  exports2.Cubism2ModelSettings = Cubism2ModelSettings;\n  exports2.Cubism2MotionManager = Cubism2MotionManager;\n  exports2.Cubism4ExpressionManager = Cubism4ExpressionManager;\n  exports2.Cubism4InternalModel = Cubism4InternalModel;\n  exports2.Cubism4ModelSettings = Cubism4ModelSettings;\n  exports2.Cubism4MotionManager = Cubism4MotionManager;\n  exports2.ExpressionManager = ExpressionManager;\n  exports2.FileLoader = FileLoader;\n  exports2.FocusController = FocusController;\n  exports2.InteractionMixin = InteractionMixin;\n  exports2.InternalModel = InternalModel;\n  exports2.LOGICAL_HEIGHT = LOGICAL_HEIGHT;\n  exports2.LOGICAL_WIDTH = LOGICAL_WIDTH;\n  exports2.Live2DExpression = Live2DExpression;\n  exports2.Live2DEyeBlink = Live2DEyeBlink;\n  exports2.Live2DFactory = Live2DFactory;\n  exports2.Live2DLoader = Live2DLoader;\n  exports2.Live2DModel = Live2DModel;\n  exports2.Live2DPhysics = Live2DPhysics;\n  exports2.Live2DPose = Live2DPose;\n  exports2.Live2DTransform = Live2DTransform;\n  exports2.ModelSettings = ModelSettings;\n  exports2.MotionManager = MotionManager;\n  exports2.MotionPreloadStrategy = MotionPreloadStrategy;\n  exports2.MotionPriority = MotionPriority;\n  exports2.MotionState = MotionState;\n  exports2.SoundManager = SoundManager;\n  exports2.VERSION = VERSION;\n  exports2.XHRLoader = XHRLoader;\n  exports2.ZipLoader = ZipLoader;\n  exports2.applyMixins = applyMixins;\n  exports2.clamp = clamp;\n  exports2.copyArray = copyArray;\n  exports2.copyProperty = copyProperty;\n  exports2.cubism4Ready = cubism4Ready;\n  exports2.folderName = folderName;\n  exports2.logger = logger;\n  exports2.rand = rand;\n  exports2.remove = remove;\n  exports2.startUpCubism4 = startUpCubism4;\n  Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: \"Module\" } });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklive2d\"] = self[\"webpackChunklive2d\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3730); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","ref","on","handleMouseDown","handleMouseMove","handleMouseUp","staticRenderFns","_setupProxy","staticClass","handlerClick","drawer","$event","$store","dispatch","live2d","_v","mouseDown","model","value","state","percentage","callback","$$v","$set","expression","defineComponent","name","data","customColor","x","dragging","methods","setTimeout","$refs","per","style","width","e","offsetX","parentElement","clientWidth","clientX","computed","scale","watch","handler","newValue","window","localStorage","setItem","mounted","document","addEventListener","events","code","amplify","reduce","component","websocket","initWebSocket","wsuri","location","host","WebSocket","onopen","websocketonopen","onerror","websocketonerror","onclose","websocketclose","_Message","message","type","base64ToArrayBuffer","base64","binary_string","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","arrayAdd","a","audioCtx","analyser","frequencyData","playing","o","async","getWav","store","response","axios","url","voice","method","responseType","run","getByteFrequencyData","arr","push","setMouthOpenY","v","Math","max","min","console","log","model4","internalModel","coreModel","setParameterValueByIndex","parameterIndex","audioData","decodeAudioData","source","createBufferSource","connect","destination","start","motion","onended","send","catch","error","createAnalyser","AudioContext","frequencyBinCount","__pow","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","throw","done","then","apply","CubismBreath","constructor","_breathParameters","_currentTime","static","setParameters","breathParameters","getParameters","updateParameters","deltaTimeSeconds","t","addParameterValueById","parameterId","offset","peak","sin","cycle","weight","BreathParameterData","_CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_userTimeSeconds","_blinkingState","EyeState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","_a","_b","getEyeBlinkParameters","slice","r","random","CubismEyeBlink","EyeState2","Epsilon","DefaultFadeInSeconds","CubismPose","pose3json","ret","FadeInTime","_fadeTimeSeconds","poseListInfo","Groups","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","Id","linkListInfo","Link","linkCount","linkIndex","linkPart","link","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","j","initialize","partsIndex","partIndex","paramIndex","setPartOpacityByIndex","k","opacity","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","backOpacityThreshold","getParameterValueByIndex","a1","backOpacity","assignment","map","clone","getParameterIndex","getPartIndex","clonePartData","CubismVector2","y","add","vector2","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","sqrt","getDistanceWith","dot","normalize","isEqual","rhs","isNotEqual","_CubismMath","cos","abs","cx","isNegativeNumber","Infinity","exp","PI","left","right","degrees","radian","from","to","q1","atan2","q2","directionToRadian","degree","radianToDegrees","totalAngle","b","c","d","range","quadraticEquation","ba","ca","da","p","p3","q","discriminant","center","threshold","mp3","mp33","cosphi","acos","crtr","cbrt","t1","root12","root2","root3","u12","sd","u1","v1","root1","CubismMath","CubismMatrix44","_tr","Float32Array","loadIdentity","dst","n","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translate","translateX","translateY","scaleRelative","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","R","G","B","A","getModelColor","Object","assign","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","_anisortopy","getAnisotropy","CubismTextureColor","CubismBlendMode","CubismBlendMode2","s_option","s_isStarted","s_isInitialized","Constant","vertexOffset","vertexStep","CubismFramework","option","CubismLogInfo","Live2DCubismCore","_isStarted","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","major","minor","patch","versionNumber","CubismLogWarning","staticRelease","csmGetLogFunction","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CSM_ASSERT","CubismLogDebug","fmt","_len2","arguments","args","Array","_key2","CubismDebug","print","LogLevel_Debug","_len3","_key3","LogLevel_Info","_len4","_key4","LogLevel_Warning","CubismLogError","_len5","_key5","LogLevel_Error","logLevel","format","getLoggingLevel","logPrint","coreLogFunction","replace","CubismModel","update","drawables","resetDynamicFlags","getCanvasWidth","canvasinfo","CanvasWidth","PixelsPerUnit","getCanvasHeight","CanvasHeight","saveParameters","parameterCount","parameters","count","savedParameterCount","_savedParameters","_parameterValues","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartCount","_partOpacities","setPartOpacityById","index","getPartOpacityById","_notExistParameterId","keys","_notExistParameterValues","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","getParameterValueById","undefined","user","ids","includes","addParameterValueByIndex","multiplyParameterValueById","multiplyParameterValueByIndex","getDrawableIds","_drawableIds","getDrawableIndex","drawableId","drawableCount","drawableIndex","getDrawableCount","getDrawableId","getDrawableRenderOrders","renderOrders","getDrawableTextureIndices","textureIndices","getDrawableDynamicFlagVertexPositionsDidChange","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","getDrawableVertexIndexCount","indexCounts","getDrawableVertexCount","vertexCounts","getDrawableVertices","getDrawableVertexPositions","getDrawableVertexIndices","indices","vertexPositions","getDrawableVertexUvs","vertexUvs","getDrawableOpacity","opacities","getDrawableCulling","constantFlags","hasIsDoubleSidedBit","getDrawableBlendMode","hasBlendAdditiveBit","CubismBlendMode_Additive","hasBlendMultiplicativeBit","CubismBlendMode_Multiplicative","CubismBlendMode_Normal","getDrawableInvertedMaskBit","hasIsInvertedMaskBit","getDrawableMasks","masks","getDrawableMaskCounts","maskCounts","isUsingMasking","getDrawableDynamicFlagIsVisible","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","loadParameters","values","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","release","CubismMoc","mocBytes","moc","Moc","fromArrayBuffer","Error","createModel","cubismModel","Model","fromMoc","_moc","_modelCount","deleteModel","_release","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","fadeIn","getEasingSine","getFadeInStartTime","fadeOut","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","DefaultFadeTime","CubismExpressionMotion","super","_parameters","json","fadeInTime","fadeOutTime","FadeOutTime","Parameters","param","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","item","parameter","CubismConfig","ExpressionBlendType2","CubismConfig2","supportMoreMaskDivisions","setOpacityFromMotion","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","time","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","id","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","EvaluationOptionFlag2","EffectNameEyeBlink","EffectNameLipSync","TargetNameModel","TargetNameParameter","TargetNamePartOpacity","UseOldBeziersCurveMotion","lerpPoints","result","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","cardanoAlgorithmForBezier","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","target","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","parse","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","sourceValue","fin","fout","paramWeight","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","areBeziersRestructed","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_eventCustomData","_motions","startMotion","autoDelete","InvalidMotionQueueEntryHandleValue","splice","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntry","find","entry","setEventCallback","customData","_eventCallBack","doUpdateMotion","updated","firedList","i2","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","CubismPhysicsParticle","initialPosition","position","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagX","PhysicsTypeTagY","PhysicsTypeTagAngle","AirResistance","MaximumWeight","MovementThreshold","CubismPhysics","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","angle","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","_options","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","prototype","JSON","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","options","getOption","Options","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getRangeValue","getDefaultValue","minValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","nLength","pLength","csmRect","w","h","height","getCenterX","getCenterY","getRight","getBottom","setRect","expand","ColorChannelCount","shaderCount","s_instance","s_viewport","s_fbo","CubismClippingManager_WebGL","getChannelFlagAsColor","channelNo","_channelColors","getMaskRenderTexture","_maskTexture","texture","frameNo","_currentFrameNo","size","_clippingMaskBufferSize","_colorBuffer","gl","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","_maskRenderTexture","_clippingContextListForMask","_clippingContextListForDraw","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","self","deleteFramebuffer","deleteTexture","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","renderer","usingClipCount","clipIndex","cc","viewport","preDraw","setupLayoutBounds","clearColor","clear","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","setClippingContextBufferForMask","drawMesh","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","manager","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","masked","ShaderNames_NormalPremultipliedAlpha","ONE","ShaderNames_AddPremultipliedAlpha","ShaderNames_MultPremultipliedAlpha","TEXTURE1","tex","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","linkStatus","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","status","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","firstDraw","_textures","_sortedDrawableIndexList","_bufferData","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","order","setClippingContextBufferForDraw","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","getInstance","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteInstance","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","startUp","doStaticRelease","CubismModelSettingsJson","groups","hitAreas","HitAreas","layout","Layout","FileReferences","expressions","Expressions","motions","Motions","textures","Textures","physics","Physics","pose","Pose","group","Name","Ids","getLipSyncParameters","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeBallX","ParamEyeBallY","ParamBodyAngleX","ParamBreath","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","config2","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","logger","tag","_len6","messages","_key6","warn","_len7","_key7","_len8","_key8","clamp","num","lower","upper","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","folderName","url2","lastSlashIndex","lastIndexOf","remove","array","indexOf","ExpressionManager","EventEmitter","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","_loadExpression","setRandomExpression","availableIndices","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","now","destroy","emit","EPSILON","MAX_SPEED","ACCELERATION_TIME","FocusController","targetX","targetY","vx","vy","focus","instant","dt","dx","dy","maxSpeed","ax","ay","maxA","maxV","ModelSettings","TypeError","resolveURL","path","replaceFiles","replacer","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","essentialFiles","definedFiles","filter","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","reserve","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","setCurrent","complete","isActive","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","key","join","TAG$2","VOLUME","SoundManager","volume","_volume","audios","audio","onFinish","onError","Audio","preload","dispose","play","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionManager","motionGroups","idleMotionGroup","idle","setupMotions","motionPreload","loadMotion","_loadMotion","_0","_1","_this","NORMAL","definition","currentAudio","soundURL","getSoundFile","readyToPlay","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","IDLE","tempBounds","InternalModel","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","textureFlipY","setupLayout","setupHitAreas","getSize","getLayout","centerX","offsetY","centerY","top","bottom","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","updateTransform","transform","copyFrom","append","motionManager","TAG$1","NetworkError","aborted","_XHRLoader","onload","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","get","Set","set","listeners","cancelXHRs","once","open","onabort","onloadend","delete","abort","WeakMap","XHRLoader","runMiddlewares","middleware","context","err","fn","bind","err2","loader","createXHR","Live2DLoader","middlewares","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","load","TAG","urlToJSON","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","tasks","createPose","createPhysics","all","setupEssentials","live2DModel","textureLoadings","createInternalModel","modelData","isValidMoc","createCoreModel","_Live2DFactory","runtimes","sort","test","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","onTap","off","registerInteraction","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","Transform","tempPoint","Point","tempMatrix$1","tickerRef","Live2DModel","Container","anchor","ObservablePoint","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","setupLive2DModel","onLoad","tickerClass","autoUpdate","PIXI","Ticker","_destroyed","shared","onTickerUpdate","interactive","pivot","toModelPosition","tx","ty","hitAreaNames","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","plugins","interaction","batch","geometry","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","_FileLoader","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","reader","FileReader","readAsText","FileLoader","factory","isArray","File","createSettings","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","unshift","_ZipLoader","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","paths","ZipLoader","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","Cubism4ExpressionManager","queueManager","findIndex","create","Cubism4ModelSettings","isValidJSON","every","entries","Sound","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","defaultFadingDuration","tempMatrix","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","eyeBlink","commonKey","charAt","toLowerCase","getDrawableIDs","prepend","_d","motionUpdated","updateFocus","updateNaturalMovements","matrix","getParameter","FRAMEBUFFER_BINDING","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","LogLevel_Verbose","releaseMoc","__moc","modelName","app","view","autoStart","backgroundAlpha","stage","addChild","registerRuntime","byteLength","Int8Array","String","fromCharCode","ignored","coreModelWithMoc","components","Drawer","isDragging","lastX","lastY","onresize","created","onmessage","close","clientY","deltaX","deltaY","parseInt","Vue","Vuex","getItem","mutations","actions","increase","decrease","parseFloat","resizeTo","App","beforeCreate","$mount","exports","require","exports2","utils","math","core","display","VERSION","_len","_key","rand","copyProperty","fromKey","toKey","copyArray","self2","MotionPreloadStrategy","MotionPreloadStrategy2","fromURL","Live2D","originalUpdateParam","Live2DMotion","updateParam","call","onFinishHandler","Live2DExpression","AMotion","params","setFadeIn","fade_in","fade_out","calc","defaultValue","val","updateParamExe","motionQueueEnt","setParamFloat","Cubism2ExpressionManager","MotionQueueManager","Cubism2MotionManager","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","tempMatrixArray","Cubism2InternalModel","drawDataCount","disableCulling","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","_ref","initOpacities","_ref2","setPartsOpacity","saveParam","getModelContext","_$aS","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","glno","prop","hasOwnProperty","WebGLBuffer","curFrameNo","setTexture","getDrawDataIndex","drawData","getDrawData","getDrawDataID","getTransformedPoints","loadParam","addToParamFloat","Cubism2ModelSettings","copy","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","_ref3","ptype","addSrcParam","targets","_ref4","addTargetParam","elapsed","Live2DPartsParam","initIndex","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","_ref5","_ref6","l","visible","getParamFloat","normalizePartsOpacityGroup","partsGroup","maxBackOpacity","visibleOpacity","visibleIndex","_ref7","originalOpacity","getPartsOpacity","_ref8","backOp","copyOpacity","_ref9","_ref10","partsIndex2","partGroup","Live2DModelWebGL","loadModel","getError","defineProperties","__esModule","Symbol","toStringTag","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","deferred","O","chunkIds","notFulfilled","getter","enumerable","g","globalThis","Function","obj","nmd","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}