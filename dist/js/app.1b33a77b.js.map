{"version":3,"file":"js/app.1b33a77b.js","mappings":"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","sources":["webpack://live2d/./src/App.vue","webpack://live2d/./src/pixi-live2d-display/dist/cubism4.es.js","webpack://live2d/src/App.vue","webpack://live2d/./src/App.vue?51dd","webpack://live2d/./src/App.vue?0e40","webpack://live2d/./src/main.js","webpack://live2d/./src/pixi-live2d-display/dist/index.js","webpack://live2d/webpack/bootstrap","webpack://live2d/webpack/runtime/chunk loaded","webpack://live2d/webpack/runtime/compat get default export","webpack://live2d/webpack/runtime/define property getters","webpack://live2d/webpack/runtime/global","webpack://live2d/webpack/runtime/hasOwnProperty shorthand","webpack://live2d/webpack/runtime/make namespace object","webpack://live2d/webpack/runtime/node module decorator","webpack://live2d/webpack/runtime/jsonp chunk loading","webpack://live2d/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"show_setting\",on:{\"click\":function($event){_vm.drawer = true}}},[_c('i',{staticClass:\"el-icon-arrow-right\"})]),_c('el-drawer',{attrs:{\"visible\":_vm.drawer,\"with-header\":false,\"direction\":\"ltr\"},on:{\"update:visible\":function($event){_vm.drawer=$event}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showButton),expression:\"showButton\"}],staticClass:\"button\"},[_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showButton),expression:\"showButton\"}],staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":_vm.amplify}},[_vm._v(\"放大\")]),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showButton),expression:\"showButton\"}],staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":_vm.reduce}},[_vm._v(\"缩小\")])],1),_c('el-progress',{staticStyle:{\"height\":\"3vh\",\"width\":\"30vw\",\"margin-top\":\"5vh\"},attrs:{\"percentage\":_vm.percentage,\"color\":_vm.customColor}}),_c('el-button-group',[_c('el-button',{staticStyle:{\"height\":\"4vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-minus\"},on:{\"click\":_vm.decrease}}),_c('el-button',{staticStyle:{\"height\":\"4vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.increase}})],1)],1),_c('canvas',{ref:\"live2d\",staticStyle:{\"position\":\"relative\"},on:{\"mousedown\":_vm.handleMouseDown,\"mousemove\":_vm.handleMouseMove,\"mouseup\":_vm.handleMouseUp}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogVerbose(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, \"[CSM][V]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1,user=false) {\n\n    // let p=this.getParameterIndex(\"ParamMouthOpenY\");\n    //\n    // if(parameterIndex in this._notExistParameterValues){\n    //   p=this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\");\n    // }\n    let p;\n\n    if (this._model.parameters.ids.includes(\"ParamMouthOpenY\")){\n      p = this.getParameterIndex(\"ParamMouthOpenY\")\n    }\n\n    if (this._model.parameters.ids.includes(\"PARAM_MOUTH_OPEN_Y\")){\n      p = this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\n    }\n\n    if (this._model.parameters.ids.includes(\"ParamMouthA\")){\n      p = this.getParameterIndex(\"ParamMouthA\")\n    }\n\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    if (parameterIndex != p || user){\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n\n  }\n  setParameterValueById(parameterId, value, weight = 1,user=false) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight,user);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nclass CubismModelUserDataJson {\n  constructor(json, size) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getUserDataCount() {\n    return this._json.Meta.UserDataCount;\n  }\n  getTotalUserDataSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getUserDataTargetType(i) {\n    return this._json.UserData[i].Target;\n  }\n  getUserDataId(i) {\n    return this._json.UserData[i].Id;\n  }\n  getUserDataValue(i) {\n    return this._json.UserData[i].Value;\n  }\n}\nconst ArtMesh = \"ArtMesh\";\nclass CubismModelUserData {\n  static create(json, size) {\n    const ret = new CubismModelUserData();\n    ret.parseUserData(json, size);\n    return ret;\n  }\n  getArtMeshUserDatas() {\n    return this._artMeshUserDataNode;\n  }\n  parseUserData(data, size) {\n    let json = new CubismModelUserDataJson(data, size);\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount = json.getUserDataCount();\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i)\n      };\n      this._userDataNodes.push(addNode);\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n    json.release();\n  }\n  constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n  release() {\n    this._userDataNodes = null;\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass CubismMotionManager extends CubismMotionQueueManager {\n  constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n  getReservePriority() {\n    return this._reservePriority;\n  }\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0;\n    }\n    this._currentPriority = priority;\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0;\n    }\n    return updated;\n  }\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nconst HitAreaPrefix = \"HitArea\";\nconst HitAreaHead = \"Head\";\nconst HitAreaBody = \"Body\";\nconst PartsIdCore = \"Parts01Core\";\nconst PartsArmPrefix = \"Parts01Arm_\";\nconst PartsArmLPrefix = \"Parts01ArmL_\";\nconst PartsArmRPrefix = \"Parts01ArmR_\";\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeLOpen = \"ParamEyeLOpen\";\nconst ParamEyeLSmile = \"ParamEyeLSmile\";\nconst ParamEyeROpen = \"ParamEyeROpen\";\nconst ParamEyeRSmile = \"ParamEyeRSmile\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamEyeBallForm = \"ParamEyeBallForm\";\nconst ParamBrowLY = \"ParamBrowLY\";\nconst ParamBrowRY = \"ParamBrowRY\";\nconst ParamBrowLX = \"ParamBrowLX\";\nconst ParamBrowRX = \"ParamBrowRX\";\nconst ParamBrowLAngle = \"ParamBrowLAngle\";\nconst ParamBrowRAngle = \"ParamBrowRAngle\";\nconst ParamBrowLForm = \"ParamBrowLForm\";\nconst ParamBrowRForm = \"ParamBrowRForm\";\nconst ParamMouthForm = \"ParamMouthForm\";\nconst ParamMouthOpenY = \"ParamMouthOpenY\";\nconst ParamCheek = \"ParamCheek\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBodyAngleY = \"ParamBodyAngleY\";\nconst ParamBodyAngleZ = \"ParamBodyAngleZ\";\nconst ParamBreath = \"ParamBreath\";\nconst ParamArmLA = \"ParamArmLA\";\nconst ParamArmRA = \"ParamArmRA\";\nconst ParamArmLB = \"ParamArmLB\";\nconst ParamArmRB = \"ParamArmRB\";\nconst ParamHandL = \"ParamHandL\";\nconst ParamHandR = \"ParamHandR\";\nconst ParamHairFront = \"ParamHairFront\";\nconst ParamHairSide = \"ParamHairSide\";\nconst ParamHairBack = \"ParamHairBack\";\nconst ParamHairFluffy = \"ParamHairFluffy\";\nconst ParamShoulderY = \"ParamShoulderY\";\nconst ParamBustX = \"ParamBustX\";\nconst ParamBustY = \"ParamBustY\";\nconst ParamBaseX = \"ParamBaseX\";\nconst ParamBaseY = \"ParamBaseY\";\nconst ParamNONE = \"NONE:\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { ACubismMotion, BreathParameterData, CSM_ASSERT, Constant, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, CubismBlendMode, CubismBreath, CubismClippingContext, CubismClippingManager_WebGL, CubismConfig, CubismDebug, CubismExpressionMotion, CubismEyeBlink, CubismFramework, CubismLogDebug, CubismLogError, CubismLogInfo, CubismLogVerbose, CubismLogWarning, CubismMath, CubismMatrix44, CubismMoc, CubismModel, CubismModelSettingsJson, CubismModelUserData, CubismModelUserDataJson, CubismMotion, CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionJson, CubismMotionManager, CubismMotionPoint, CubismMotionQueueEntry, CubismMotionQueueManager, CubismMotionSegment, CubismMotionSegmentType, CubismPhysics, CubismPhysicsInput, CubismPhysicsJson, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType, CubismPose, CubismRenderTextureResource, CubismRenderer, CubismRenderer_WebGL, CubismShader_WebGL, CubismTextureColor, CubismVector2, EvaluationOptionFlag, ExpressionBlendType, ExpressionManager, EyeState, FileLoader, FocusController, HitAreaBody, HitAreaHead, HitAreaPrefix, InteractionMixin, InternalModel, InvalidMotionQueueEntryHandleValue, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DFactory, Live2DLoader, Live2DModel, Live2DTransform, LogLevel, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, Options, ParamAngleX, ParamAngleY, ParamAngleZ, ParamArmLA, ParamArmLB, ParamArmRA, ParamArmRB, ParamBaseX, ParamBaseY, ParamBodyAngleX, ParamBodyAngleY, ParamBodyAngleZ, ParamBreath, ParamBrowLAngle, ParamBrowLForm, ParamBrowLX, ParamBrowLY, ParamBrowRAngle, ParamBrowRForm, ParamBrowRX, ParamBrowRY, ParamBustX, ParamBustY, ParamCheek, ParamEyeBallForm, ParamEyeBallX, ParamEyeBallY, ParamEyeLOpen, ParamEyeLSmile, ParamEyeROpen, ParamEyeRSmile, ParamHairBack, ParamHairFluffy, ParamHairFront, ParamHairSide, ParamHandL, ParamHandR, ParamMouthForm, ParamMouthOpenY, ParamNONE, ParamShoulderY, PartData, PartsArmLPrefix, PartsArmPrefix, PartsArmRPrefix, PartsIdCore, PhysicsJsonEffectiveForces, ShaderNames, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, csmRect, cubism4Ready, folderName, fragmentShaderSrcMaskInvertedPremultipliedAlpha, fragmentShaderSrcMaskPremultipliedAlpha, fragmentShaderSrcPremultipliedAlpha, fragmentShaderSrcsetupMask, logger, rand, remove, startUpCubism4, vertexShaderSrc, vertexShaderSrcMasked, vertexShaderSrcSetupMask };\n","<template>\n  <div id=\"app\" style=\"text-align: center;\" >\n\n    <div class=\"show_setting\" @click=\"drawer = true\">\n      <i class=\"el-icon-arrow-right\"></i>\n    </div>\n\n    <el-drawer\n        :visible.sync=\"drawer\"\n        :with-header=\"false\"\n        direction=\"ltr\">\n\n      <div class=\"button\" v-show=\"showButton\" >\n        <el-button  @click=\"amplify\" v-show=\"showButton\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\" >放大</el-button>\n        <el-button  @click=\"reduce\" v-show=\"showButton\" type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\">缩小</el-button>\n      </div>\n\n      <el-progress :percentage=\"percentage\" :color=\"customColor\" style=\"height: 3vh; width: 30vw;margin-top: 5vh\"></el-progress>\n      <el-button-group>\n        <el-button icon=\"el-icon-minus\" @click=\"decrease\" style=\"height: 4vh;width: 4vw;font-size: 2vh;line-height: 0vh;\" ></el-button>\n        <el-button icon=\"el-icon-plus\" @click=\"increase\" style=\"height: 4vh;width: 4vw;font-size: 2vh;line-height: 0vh;\"></el-button>\n      </el-button-group>\n    </el-drawer>\n\n    <canvas ref=\"live2d\"\n            @mousedown=\"handleMouseDown\"\n            @mousemove=\"handleMouseMove\"\n            @mouseup=\"handleMouseUp\"\n            style=\"position: relative;\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\n\nimport * as PIXI from 'pixi.js';\nimport { Live2DModel } from './pixi-live2d-display/dist/cubism4.es';\nimport axios from \"axios\"\nimport { config } from './pixi-live2d-display';\n\n// log level\nconfig.logLevel = config.LOG_LEVEL_WARNING; // LOG_LEVEL_VERBOSE, LOG_LEVEL_ERROR, LOG_LEVEL_NONE\n\n\n\n\n\nexport default {\n  name:\"app\",\n  data(){\n  return{\n\n    websock:\"\",\n    model4:\"\",\n    playing:false,\n    audioCtx:\"\",\n    analyser:\"\",\n    frequencyData:\"\",\n    o :80,\n    isDragging: false,\n    lastX: 0,\n    lastY: 0,\n    scale:1,\n    parameterIndex:\"\",\n    drawer: false,\n    percentage: 60,\n    customColor: '#409eff',\n    showButton:true\n\n  }\n  },\n  mounted() {\n    window.PIXI = PIXI;\n\n\n    this.$on(\"start\", this.getWav);\n\n    (async () => {\n      await this.createModel()\n\n      this.createAnalyser()\n\n\n    })()\n\n    window.onresize = () => {\n      this.model4.x = this.$refs.live2d.clientWidth / 2 - this.model4.width / 2\n\n\n    }\n\n\n    document.addEventListener(\"keydown\", (events) => {\n          if(events.code==\"ArrowLeft\"){\n            this.drawer=false\n          }\n          if(events.code==\"ArrowRight\"){\n            this.drawer=true\n          }\n          if(events.code==\"ArrowUp\"){\n            this.amplify()\n          }\n          if(events.code==\"ArrowDown\"){\n            this.reduce()\n          }\n        }\n    )\n\n\n\n    // window.onclick=()=>{\n    //   this.getWav({\n    //     voice :\"synthesize.wav\",\n    //     VType:1\n    //   })\n    //   console.log(123)\n    // }\n\n  }\n  ,\n  created() {\n    this.initWebSocket();\n\n  },\n  destroyed() {\n    this.websock.close(); //离开路由之后断开websocket连接\n  },\n  methods:{\n\n    increase() {\n      this.percentage += 5;\n      if (this.percentage > 100) {\n        this.percentage = 100;\n      }\n    },\n    decrease() {\n      this.percentage -= 5;\n      if (this.percentage <= 1) {\n        this.percentage = 1;\n      }\n    }\n    ,\n\n    reduce(){\n      if(this.scale<=0.2){\n        return\n      }\n      this.scale-=0.1\n      this.model4.scale.set(this.scale)\n      this.$refs.live2d.width=this.model4.width\n      this.$refs.live2d.height=this.model4.height\n      this.app.resizeTo=this.$refs.live2d\n    },\n    amplify(){\n      if (this.scale>=1.5){\n        return\n      }\n      this.scale+=0.1\n      this.model4.scale.set(this.scale)\n      this.$refs.live2d.width=this.model4.width\n      this.$refs.live2d.height=this.model4.height\n      this.app.resizeTo=this.$refs.live2d\n    },\n\n    handleMouseDown(event) {\n      this.isDragging = true;\n      this.lastX = event.clientX;\n      this.lastY = event.clientY;\n    },\n    handleMouseMove(event) {\n      if (this.isDragging) {\n        const deltaX = event.clientX - this.lastX;\n        const deltaY = event.clientY - this.lastY;\n        this.$refs.live2d.style.left = parseInt(this.$refs.live2d.style.left || 0) + deltaX + \"px\";\n        this.$refs.live2d.style.top = parseInt(this.$refs.live2d.style.top || 0) + deltaY + \"px\";\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n      }\n    },\n    handleMouseUp(event) {\n      this.isDragging = false;\n      this.isDragging = false;\n      this.isDragging = false;\n\n    }\n  ,\n\n    initWebSocket() {\n      //初始化weosocket\n      const wsuri = `ws://127.0.01:9000/live2d`;\n\n      this.websock = new WebSocket(wsuri);\n      // 客户端接收服务端数据时触发\n      this.websock.onmessage = this.websocketonmessage;\n      // 连接建立时触发\n      this.websock.onopen = this.websocketonopen;\n      // 通信发生错误时触发\n      this.websock.onerror = this.websocketonerror;\n      // 连接关闭时触发\n      this.websock.onclose = this.websocketclose;\n    },\n    websocketonmessage(event){\n      let data=JSON.parse(event.data)\n      this.getWav(data)\n\n    },\n    websocketonopen(){\n      this.$message({\n        message: '成功建立连接 ₍ᐢ..ᐢ₎♡ ',\n        type: 'success'\n      });\n    },\n    websocketonerror(){\n      this.$message({\n        message: '连接发生了错误! ̊ଳ ̊ᵎᵎᵎᵎ ',\n        type: 'warning'\n      });\n    },\n    websocketclose(){\n      this.$message({\n        message: '连接已断开!!! ˃̣̣̥᷄⌓˂̣̣̥᷅ ',\n        type: 'warning'\n      });\n    },\n    async createModel(){\n\n      let modelName= await axios({\n        url:\"/get\",\n        method:\"get\"\n      }).catch( err => {\n        console.log(err)\n\n      })\n\n      this.model4 = await Live2DModel.from(\"./model/\"+ modelName.data,{ autoUpdate: true });\n      this.set=this.model4.internalModel.coreModel.setParameterValueById\n      this.app = new PIXI.Application({\n        view: this.$refs.live2d,\n        autoStart: true,\n        width:this.model4.width,\n        height:this.model4.height,\n        backgroundAlpha:0\n      });\n\n      this.app.stage.addChild(this.model4);\n\n      this.model4.x=this.$refs.live2d.clientWidth/2-this.model4.width/2\n\n\n      if (this.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthOpenY\")){\n        this.parameterIndex = this.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthOpenY\")\n      }\n\n      if (this.model4.internalModel.coreModel._parameterIds.includes(\"PARAM_MOUTH_OPEN_Y\")){\n        this.parameterIndex = this.model4.internalModel.coreModel.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\n      }\n\n      if (this.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthA\")){\n        this.parameterIndex = this.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthA\")\n      }\n\n\n\n\n    },\n    setMouthOpenY(v){\n      v = Math.max(0, Math.min(1, v));\n      console.log(v)\n\n\n      this.model4.internalModel.coreModel.setParameterValueByIndex(this.parameterIndex, v,1,true)\n\n\n\n    },\n    createAnalyser() {\n      this.audioCtx = new AudioContext();\n      // 新建分析仪\n      this.analyser = this.audioCtx.createAnalyser();\n      // 根据 频率分辨率建立个 Uint8Array 数组备用\n      this.frequencyData = new Uint8Array(this.analyser.frequencyBinCount);\n      // 取音频文件成 arraybuffer\n    },\n    getByteFrequencyData(){\n      this.analyser.getByteFrequencyData(this.frequencyData);\n      return this.frequencyData\n    },\n    run(){\n\n      if(!this.playing) return;\n\n      const frequencyData = this.getByteFrequencyData();\n\n      const arr = [];\n      // 频率范围还是太广了，跳采！\n      for (var i = 0; i < 700; i += this.o) {\n        arr.push(frequencyData[i]);\n      }\n\n      this.setMouthOpenY((this.arrayAdd(arr)/arr.length - 20)/this.percentage);\n\n      setTimeout(this.run,1000/60);\n    },\n    base64ToArrayBuffer(base64) {\n              let binary_string =  window.atob(base64);\n              let len = binary_string.length;\n              let bytes = new Uint8Array( len );\n              for (let i = 0; i < len; i++)        {\n                bytes[i] = binary_string.charCodeAt(i);\n              }\n              return bytes.buffer;\n   },\n    arrayAdd(a){return a.reduce((i,a)=>i+a,0)},\n    async getWav(data){\n      let response\n\n      switch (data[\"VType\"]) {\n        case 1 :\n          response =  await axios({\n          url:data.voice,\n          method:\"get\",\n          responseType:\"arraybuffer\"\n        })\n          response = response.data\n           break\n        case 2  :\n          response = this.base64ToArrayBuffer(data.voice)\n        case 3  :\n          response = this.base64ToArrayBuffer(data.voice)\n\n      }\n\n\n\n      ((response) => {\n\n        const audioData = response;\n        this.audioCtx.decodeAudioData(audioData, (buffer)=>{\n          // 新建 Buffer 源\n          const source = this.audioCtx.createBufferSource();\n          source.buffer = buffer;\n          // 连接到 audioCtx\n          source.connect(this.audioCtx.destination);\n          // 连接到 音频分析器\n          source.connect(this.analyser);\n          // window.navigator.mediaDevices.getUserMedia({ audio: true });\n          // 开始播放\n\n          this.playing = true;\n          this.run()\n         setTimeout(() => {\n           source.start(0);\n         },0.5)\n\n          this.model4.expression(data.expression)\n          this.model4.motion(data[\"act\"],data[\"movement\"])\n\n\n\n          source.onended = ()=>{\n            // 停止播放\n            this.playing = false;\n            this.websock.send(0)\n            this.model4.expression(0);\n          }\n        }).catch(error => {\n          console.log(error)\n          this.websock.send(-1)\n        })\n      })(response)\n  },\n\n\n},\n  watch:{\n\n\n\n  }\n}\n\n\n</script>\n\n<style>\n\nbody {\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  background-color: #01FE00;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n\n}\n\n.button {\n  z-index: 100;\n  cursor: pointer;\n  margin-top: 8vh;\n}\n\n.el-drawer__body {\n  background-image: url(\"../public/drawer.webp\");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.show_setting {\n  position: relative;\n  width: 1.5vw;\n  height: 4vw;\n  background:rgba(139,139,139,0.6);\n  top: 50vh;\n  transform: translateY(-4vw);\n  font-size: 16px;\n  line-height: 4vw;\n  text-align: center;\n\n}\n\n\n\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=c1d4de40&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=c1d4de40&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport {Button, Drawer, Message, Progress} from \"element-ui\";\n\n\n\n\nVue.config.productionTip = false\n\n// navigator.mediaDevices.getUserMedia({ audio: true });\nVue.use(Button)\nVue.use(Drawer)\nVue.use(Progress)\n\n\nnew Vue({\n  render: h => h(App),\n  beforeCreate() {\n    Vue.prototype.$message = Message;\n  }\n}).$mount('#app')\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n(function(global, factory) {\n  typeof exports === \"object\" && typeof module !== \"undefined\" ? factory(exports, require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\")) : typeof define === \"function\" && define.amd ? define([\"exports\", \"@pixi/utils\", \"@pixi/math\", \"@pixi/core\", \"@pixi/display\"], factory) : (global = typeof globalThis !== \"undefined\" ? globalThis : global || self, factory((global.PIXI = global.PIXI || {}, global.PIXI.live2d = global.PIXI.live2d || {}), global.PIXI.utils, global.PIXI, global.PIXI, global.PIXI));\n})(this, function(exports2, utils, math, core, display) {\n  \"use strict\";\n  const LOGICAL_WIDTH = 2;\n  const LOGICAL_HEIGHT = 2;\n  var CubismConfig;\n  ((CubismConfig2) => {\n    CubismConfig2.supportMoreMaskDivisions = true;\n    CubismConfig2.setOpacityFromMotion = false;\n  })(CubismConfig || (CubismConfig = {}));\n  exports2.config = void 0;\n  ((config2) => {\n    config2.LOG_LEVEL_VERBOSE = 0;\n    config2.LOG_LEVEL_WARNING = 1;\n    config2.LOG_LEVEL_ERROR = 2;\n    config2.LOG_LEVEL_NONE = 999;\n    config2.logLevel = config2.LOG_LEVEL_WARNING;\n    config2.sound = true;\n    config2.motionSync = true;\n    config2.motionFadingDuration = 500;\n    config2.idleMotionFadingDuration = 2e3;\n    config2.expressionFadingDuration = 500;\n    config2.preserveExpressionOnMotion = true;\n    config2.cubism4 = CubismConfig;\n  })(exports2.config || (exports2.config = {}));\n  const VERSION = \"0.4.0\";\n  const logger = {\n    log(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_VERBOSE) {\n        console.log(`[${tag}]`, ...messages);\n      }\n    },\n    warn(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_WARNING) {\n        console.warn(`[${tag}]`, ...messages);\n      }\n    },\n    error(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_ERROR) {\n        console.error(`[${tag}]`, ...messages);\n      }\n    }\n  };\n  function clamp(num, lower, upper) {\n    return num < lower ? lower : num > upper ? upper : num;\n  }\n  function rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  function copyProperty(type, from, to, fromKey, toKey) {\n    const value = from[fromKey];\n    if (value !== null && typeof value === type) {\n      to[toKey] = value;\n    }\n  }\n  function copyArray(type, from, to, fromKey, toKey) {\n    const array = from[fromKey];\n    if (Array.isArray(array)) {\n      to[toKey] = array.filter((item) => item !== null && typeof item === type);\n    }\n  }\n  function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n        if (name !== \"constructor\") {\n          Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n        }\n      });\n    });\n  }\n  function folderName(url) {\n    let lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex != -1) {\n      url = url.slice(0, lastSlashIndex);\n    }\n    lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex !== -1) {\n      url = url.slice(lastSlashIndex + 1);\n    }\n    return url;\n  }\n  function remove(array, item) {\n    const index = array.indexOf(item);\n    if (index !== -1) {\n      array.splice(index, 1);\n    }\n  }\n  class ExpressionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.expressions = [];\n      this.reserveExpressionIndex = -1;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `ExpressionManager(${settings.name})`;\n    }\n    init() {\n      this.defaultExpression = this.createExpression({}, void 0);\n      this.currentExpression = this.defaultExpression;\n      this.stopAllExpressions();\n    }\n    loadExpression(index) {\n      return __async(this, null, function* () {\n        if (!this.definitions[index]) {\n          logger.warn(this.tag, `Undefined expression at [${index}]`);\n          return void 0;\n        }\n        if (this.expressions[index] === null) {\n          logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.expressions[index]) {\n          return this.expressions[index];\n        }\n        const expression = yield this._loadExpression(index);\n        this.expressions[index] = expression;\n        return expression;\n      });\n    }\n    _loadExpression(index) {\n      throw new Error(\"Not implemented.\");\n    }\n    setRandomExpression() {\n      return __async(this, null, function* () {\n        if (this.definitions.length) {\n          const availableIndices = [];\n          for (let i = 0; i < this.definitions.length; i++) {\n            if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.setExpression(index);\n          }\n        }\n        return false;\n      });\n    }\n    resetExpression() {\n      this._setExpression(this.defaultExpression);\n    }\n    restoreExpression() {\n      this._setExpression(this.currentExpression);\n    }\n    setExpression(index) {\n      return __async(this, null, function* () {\n        if (typeof index !== \"number\") {\n          index = this.getExpressionIndex(index);\n        }\n        if (!(index > -1 && index < this.definitions.length)) {\n          return false;\n        }\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n          return false;\n        }\n        this.reserveExpressionIndex = index;\n        const expression = yield this.loadExpression(index);\n        if (!expression || this.reserveExpressionIndex !== index) {\n          return false;\n        }\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n        return true;\n      });\n    }\n    update(model, now) {\n      if (!this.isFinished()) {\n        return this.updateParameters(model, now);\n      }\n      return false;\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.expressions = void 0;\n    }\n  }\n  const EPSILON = 0.01;\n  const MAX_SPEED = 40 / 7.5;\n  const ACCELERATION_TIME = 1 / (0.15 * 1e3);\n  class FocusController {\n    constructor() {\n      this.targetX = 0;\n      this.targetY = 0;\n      this.x = 0;\n      this.y = 0;\n      this.vx = 0;\n      this.vy = 0;\n    }\n    focus(x, y, instant = false) {\n      this.targetX = clamp(x, -1, 1);\n      this.targetY = clamp(y, -1, 1);\n      if (instant) {\n        this.x = this.targetX;\n        this.y = this.targetY;\n      }\n    }\n    update(dt) {\n      const dx = this.targetX - this.x;\n      const dy = this.targetY - this.y;\n      if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n        return;\n      const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n      const maxSpeed = MAX_SPEED / (1e3 / dt);\n      let ax = maxSpeed * (dx / d) - this.vx;\n      let ay = maxSpeed * (dy / d) - this.vy;\n      const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n      const maxA = maxSpeed * ACCELERATION_TIME * dt;\n      if (a > maxA) {\n        ax *= maxA / a;\n        ay *= maxA / a;\n      }\n      this.vx += ax;\n      this.vy += ay;\n      const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n      const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n      if (v > maxV) {\n        this.vx *= maxV / v;\n        this.vy *= maxV / v;\n      }\n      this.x += this.vx;\n      this.y += this.vy;\n    }\n  }\n  class ModelSettings {\n    constructor(json) {\n      this.json = json;\n      let url2 = json.url;\n      if (typeof url2 !== \"string\") {\n        throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n      }\n      this.url = url2;\n      this.name = folderName(this.url);\n    }\n    resolveURL(path) {\n      return utils.url.resolve(this.url, path);\n    }\n    replaceFiles(replacer) {\n      this.moc = replacer(this.moc, \"moc\");\n      if (this.pose !== void 0) {\n        this.pose = replacer(this.pose, \"pose\");\n      }\n      if (this.physics !== void 0) {\n        this.physics = replacer(this.physics, \"physics\");\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n      }\n    }\n    getDefinedFiles() {\n      const files = [];\n      this.replaceFiles((file) => {\n        files.push(file);\n        return file;\n      });\n      return files;\n    }\n    validateFiles(files) {\n      const assertFileExists = (expectedFile, shouldThrow) => {\n        const actualPath = this.resolveURL(expectedFile);\n        if (!files.includes(actualPath)) {\n          if (shouldThrow) {\n            throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n          }\n          return false;\n        }\n        return true;\n      };\n      const essentialFiles = [this.moc, ...this.textures];\n      essentialFiles.forEach((texture) => assertFileExists(texture, true));\n      const definedFiles = this.getDefinedFiles();\n      return definedFiles.filter((file) => assertFileExists(file, false));\n    }\n  }\n  var MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n    MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n    MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n    MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n    MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n    return MotionPriority2;\n  })(MotionPriority || {});\n  class MotionState {\n    constructor() {\n      this.debug = false;\n      this.currentPriority = 0;\n      this.reservePriority = 0;\n    }\n    reserve(group, index, priority) {\n      if (priority <= 0) {\n        logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n        return false;\n      }\n      if (group === this.currentGroup && index === this.currentIndex) {\n        logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n        return false;\n      }\n      if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n        logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n        return false;\n      }\n      if (priority === 1) {\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n          return false;\n        }\n        if (this.reservedIdleGroup !== void 0) {\n          logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n          return false;\n        }\n        this.setReservedIdle(group, index);\n      } else {\n        if (priority < 3) {\n          if (priority <= this.currentPriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n          if (priority <= this.reservePriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n        }\n        this.setReserved(group, index, priority);\n      }\n      return true;\n    }\n    start(motion, group, index, priority) {\n      if (priority === 1) {\n        this.setReservedIdle(void 0, void 0);\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n          return false;\n        }\n      } else {\n        if (group !== this.reservedGroup || index !== this.reservedIndex) {\n          logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n          return false;\n        }\n        this.setReserved(void 0, void 0, 0);\n      }\n      if (!motion) {\n        return false;\n      }\n      this.setCurrent(group, index, priority);\n      return true;\n    }\n    complete() {\n      this.setCurrent(void 0, void 0, 0);\n    }\n    setCurrent(group, index, priority) {\n      this.currentPriority = priority;\n      this.currentGroup = group;\n      this.currentIndex = index;\n    }\n    setReserved(group, index, priority) {\n      this.reservePriority = priority;\n      this.reservedGroup = group;\n      this.reservedIndex = index;\n    }\n    setReservedIdle(group, index) {\n      this.reservedIdleGroup = group;\n      this.reservedIdleIndex = index;\n    }\n    isActive(group, index) {\n      return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n    }\n    reset() {\n      this.setCurrent(void 0, void 0, 0);\n      this.setReserved(void 0, void 0, 0);\n      this.setReservedIdle(void 0, void 0);\n    }\n    shouldRequestIdleMotion() {\n      return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n    }\n    shouldOverrideExpression() {\n      return !exports2.config.preserveExpressionOnMotion && this.currentPriority > 1;\n    }\n    dump(requestedGroup, requestedIndex) {\n      if (this.debug) {\n        const keys = [\n          \"currentPriority\",\n          \"reservePriority\",\n          \"currentGroup\",\n          \"currentIndex\",\n          \"reservedGroup\",\n          \"reservedIndex\",\n          \"reservedIdleGroup\",\n          \"reservedIdleIndex\"\n        ];\n        return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n      }\n      return \"\";\n    }\n  }\n  const TAG$2 = \"SoundManager\";\n  const VOLUME = 0.5;\n  class SoundManager {\n    static get volume() {\n      return this._volume;\n    }\n    static set volume(value) {\n      this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n      this.audios.forEach((audio) => audio.volume = this._volume);\n    }\n    static add(file, onFinish, onError) {\n      const audio = new Audio(file);\n      audio.volume = this._volume;\n      audio.preload = \"auto\";\n      audio.addEventListener(\"ended\", () => {\n        this.dispose(audio);\n        onFinish == null ? void 0 : onFinish();\n      });\n      audio.addEventListener(\"error\", (e) => {\n        this.dispose(audio);\n        logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n        onError == null ? void 0 : onError(e.error);\n      });\n      this.audios.push(audio);\n      return audio;\n    }\n    static play(audio) {\n      return new Promise((resolve, reject) => {\n        var _a;\n        (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n          audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n          reject(e);\n        });\n        if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n          resolve();\n        } else {\n          audio.addEventListener(\"canplaythrough\", resolve);\n        }\n      });\n    }\n    static dispose(audio) {\n      audio.pause();\n      audio.removeAttribute(\"src\");\n      remove(this.audios, audio);\n    }\n    static destroy() {\n      for (let i = this.audios.length - 1; i >= 0; i--) {\n        this.dispose(this.audios[i]);\n      }\n    }\n  }\n  SoundManager.audios = [];\n  SoundManager._volume = VOLUME;\n  var MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n    MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n    MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n    MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n    return MotionPreloadStrategy2;\n  })(MotionPreloadStrategy || {});\n  class MotionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.motionGroups = {};\n      this.state = new MotionState();\n      this.playing = false;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `MotionManager(${settings.name})`;\n      this.state.tag = this.tag;\n    }\n    init(options) {\n      if (options == null ? void 0 : options.idleMotionGroup) {\n        this.groups.idle = options.idleMotionGroup;\n      }\n      this.setupMotions(options);\n      this.stopAllMotions();\n    }\n    setupMotions(options) {\n      for (const group of Object.keys(this.definitions)) {\n        this.motionGroups[group] = [];\n      }\n      let groups;\n      switch (options == null ? void 0 : options.motionPreload) {\n        case \"NONE\":\n          return;\n        case \"ALL\":\n          groups = Object.keys(this.definitions);\n          break;\n        case \"IDLE\":\n        default:\n          groups = [this.groups.idle];\n          break;\n      }\n      for (const group of groups) {\n        if (this.definitions[group]) {\n          for (let i = 0; i < this.definitions[group].length; i++) {\n            this.loadMotion(group, i).then();\n          }\n        }\n      }\n    }\n    loadMotion(group, index) {\n      return __async(this, null, function* () {\n        var _a;\n        if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n          logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index] === null) {\n          logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index]) {\n          return this.motionGroups[group][index];\n        }\n        const motion = yield this._loadMotion(group, index);\n        if (this.destroyed) {\n          return;\n        }\n        this.motionGroups[group][index] = motion != null ? motion : null;\n        return motion;\n      });\n    }\n    _loadMotion(group, index) {\n      throw new Error(\"Not implemented.\");\n    }\n    startMotion(_0, _1) {\n      return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n        var _a;\n        if (!this.state.reserve(group, index, priority)) {\n          return false;\n        }\n        const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return false;\n        }\n        if (this.currentAudio) {\n          SoundManager.dispose(this.currentAudio);\n        }\n        let audio;\n        if (exports2.config.sound) {\n          const soundURL = this.getSoundFile(definition);\n          if (soundURL) {\n            try {\n              audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n              this.currentAudio = audio;\n            } catch (e) {\n              logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n            }\n          }\n        }\n        const motion = yield this.loadMotion(group, index);\n        if (audio) {\n          const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n          if (exports2.config.motionSync) {\n            yield readyToPlay;\n          }\n        }\n        if (!this.state.start(motion, group, index, priority)) {\n          if (audio) {\n            SoundManager.dispose(audio);\n            this.currentAudio = void 0;\n          }\n          return false;\n        }\n        logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n        this.emit(\"motionStart\", group, index, audio);\n        if (this.state.shouldOverrideExpression()) {\n          this.expressionManager && this.expressionManager.resetExpression();\n        }\n        this.playing = true;\n        this._startMotion(motion);\n        return true;\n      });\n    }\n    startRandomMotion(group, priority) {\n      return __async(this, null, function* () {\n        const groupDefs = this.definitions[group];\n        if (groupDefs == null ? void 0 : groupDefs.length) {\n          const availableIndices = [];\n          for (let i = 0; i < groupDefs.length; i++) {\n            if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.startMotion(group, availableIndices[index], priority);\n          }\n        }\n        return false;\n      });\n    }\n    stopAllMotions() {\n      this._stopAllMotions();\n      this.state.reset();\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n        this.currentAudio = void 0;\n      }\n    }\n    update(model, now) {\n      var _a;\n      if (this.isFinished()) {\n        if (this.playing) {\n          this.playing = false;\n          this.emit(\"motionFinish\");\n        }\n        if (this.state.shouldOverrideExpression()) {\n          (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n        }\n        this.state.complete();\n        if (this.state.shouldRequestIdleMotion()) {\n          this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n        }\n      }\n      return this.updateParameters(model, now);\n    }\n    destroy() {\n      var _a;\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.stopAllMotions();\n      (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.motionGroups = void 0;\n    }\n  }\n  const tempBounds = { x: 0, y: 0, width: 0, height: 0 };\n  class InternalModel extends utils.EventEmitter {\n    constructor() {\n      super(...arguments);\n      this.focusController = new FocusController();\n      this.originalWidth = 0;\n      this.originalHeight = 0;\n      this.width = 0;\n      this.height = 0;\n      this.localTransform = new math.Matrix();\n      this.drawingMatrix = new math.Matrix();\n      this.hitAreas = {};\n      this.textureFlipY = false;\n      this.viewport = [0, 0, 0, 0];\n      this.destroyed = false;\n    }\n    init() {\n      this.setupLayout();\n      this.setupHitAreas();\n    }\n    setupLayout() {\n      const self2 = this;\n      const size = this.getSize();\n      self2.originalWidth = size[0];\n      self2.originalHeight = size[1];\n      const layout = Object.assign({\n        width: LOGICAL_WIDTH,\n        height: LOGICAL_HEIGHT\n      }, this.getLayout());\n      this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n      self2.width = this.originalWidth * this.localTransform.a;\n      self2.height = this.originalHeight * this.localTransform.d;\n      const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n      const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n      this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n    setupHitAreas() {\n      const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n      for (const def of definitions) {\n        this.hitAreas[def.name] = def;\n      }\n    }\n    hitTest(x, y) {\n      return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n    }\n    isHit(hitAreaName, x, y) {\n      if (!this.hitAreas[hitAreaName]) {\n        return false;\n      }\n      const drawIndex = this.hitAreas[hitAreaName].index;\n      const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n      return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n    getDrawableBounds(index, bounds) {\n      const vertices = this.getDrawableVertices(index);\n      let left = vertices[0];\n      let right = vertices[0];\n      let top = vertices[1];\n      let bottom = vertices[1];\n      for (let i = 0; i < vertices.length; i += 2) {\n        const vx = vertices[i];\n        const vy = vertices[i + 1];\n        left = Math.min(vx, left);\n        right = Math.max(vx, right);\n        top = Math.min(vy, top);\n        bottom = Math.max(vy, bottom);\n      }\n      bounds != null ? bounds : bounds = {};\n      bounds.x = left;\n      bounds.y = top;\n      bounds.width = right - left;\n      bounds.height = bottom - top;\n      return bounds;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n    update(dt, now) {\n      this.focusController.update(dt);\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.motionManager.destroy();\n      this.motionManager = void 0;\n    }\n  }\n  const TAG$1 = \"XHRLoader\";\n  class NetworkError extends Error {\n    constructor(message, url, status, aborted = false) {\n      super(message);\n      this.url = url;\n      this.status = status;\n      this.aborted = aborted;\n    }\n  }\n  const _XHRLoader = class {\n    static createXHR(target, url, type, onload, onerror) {\n      const xhr = new XMLHttpRequest();\n      _XHRLoader.allXhrSet.add(xhr);\n      if (target) {\n        let xhrSet = _XHRLoader.xhrMap.get(target);\n        if (!xhrSet) {\n          xhrSet = /* @__PURE__ */ new Set([xhr]);\n          _XHRLoader.xhrMap.set(target, xhrSet);\n        } else {\n          xhrSet.add(xhr);\n        }\n        if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n          target.once(\"destroy\", _XHRLoader.cancelXHRs);\n        }\n      }\n      xhr.open(\"GET\", url);\n      xhr.responseType = type;\n      xhr.onload = () => {\n        if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n          onload(xhr.response);\n        } else {\n          xhr.onerror();\n        }\n      };\n      xhr.onerror = () => {\n        logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n        onerror(new NetworkError(\"Network error.\", url, xhr.status));\n      };\n      xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url, xhr.status, true));\n      xhr.onloadend = () => {\n        var _a;\n        _XHRLoader.allXhrSet.delete(xhr);\n        if (target) {\n          (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n        }\n      };\n      return xhr;\n    }\n    static cancelXHRs() {\n      var _a;\n      (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n        xhr.abort();\n        _XHRLoader.allXhrSet.delete(xhr);\n      });\n      _XHRLoader.xhrMap.delete(this);\n    }\n    static release() {\n      _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n      _XHRLoader.allXhrSet.clear();\n      _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n    }\n  };\n  let XHRLoader = _XHRLoader;\n  XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  XHRLoader.allXhrSet = /* @__PURE__ */ new Set();\n  XHRLoader.loader = (context, next) => {\n    return new Promise((resolve, reject) => {\n      const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n        context.result = data;\n        resolve();\n      }, reject);\n      xhr.send();\n    });\n  };\n  function runMiddlewares(middleware, context) {\n    let index = -1;\n    return dispatch(0);\n    function dispatch(i, err) {\n      if (err)\n        return Promise.reject(err);\n      if (i <= index)\n        return Promise.reject(new Error(\"next() called multiple times\"));\n      index = i;\n      const fn = middleware[i];\n      if (!fn)\n        return Promise.resolve();\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err2) {\n        return Promise.reject(err2);\n      }\n    }\n  }\n  class Live2DLoader {\n    static load(context) {\n      return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n  }\n  Live2DLoader.middlewares = [XHRLoader.loader];\n  function createTexture(url, options = {}) {\n    var _a;\n    const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n    if (core.Texture.fromURL) {\n      return core.Texture.fromURL(url, textureOptions).catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        }\n        const err = new Error(\"Texture loading error\");\n        err.event = e;\n        throw err;\n      });\n    }\n    textureOptions.resourceOptions.autoLoad = false;\n    const texture = core.Texture.from(url, textureOptions);\n    if (texture.baseTexture.valid) {\n      return Promise.resolve(texture);\n    }\n    const resource = texture.baseTexture.resource;\n    (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n      const errorHandler = (event) => {\n        resource.source.removeEventListener(\"error\", errorHandler);\n        const err = new Error(\"Texture loading error\");\n        err.event = event;\n        reject(err);\n      };\n      resource.source.addEventListener(\"error\", errorHandler);\n      resource.load().then(() => resolve(texture)).catch(errorHandler);\n    });\n    return resource._live2d_load;\n  }\n  const TAG = \"Live2DFactory\";\n  const urlToJSON = (context, next) => __async(this, null, function* () {\n    if (typeof context.source === \"string\") {\n      const data = yield Live2DLoader.load({\n        url: context.source,\n        type: \"json\",\n        target: context.live2dModel\n      });\n      data.url = context.source;\n      context.source = data;\n      context.live2dModel.emit(\"settingsJSONLoaded\", data);\n    }\n    return next();\n  });\n  const jsonToSettings = (context, next) => __async(this, null, function* () {\n    if (context.source instanceof ModelSettings) {\n      context.settings = context.source;\n      return next();\n    } else if (typeof context.source === \"object\") {\n      const runtime = Live2DFactory.findRuntime(context.source);\n      if (runtime) {\n        const settings = runtime.createModelSettings(context.source);\n        context.settings = settings;\n        context.live2dModel.emit(\"settingsLoaded\", settings);\n        return next();\n      }\n    }\n    throw new TypeError(\"Unknown settings format.\");\n  });\n  const waitUntilReady = (context, next) => {\n    if (context.settings) {\n      const runtime = Live2DFactory.findRuntime(context.settings);\n      if (runtime) {\n        return runtime.ready().then(next);\n      }\n    }\n    return next();\n  };\n  const setupOptionals = (context, next) => __async(this, null, function* () {\n    yield next();\n    const internalModel = context.internalModel;\n    if (internalModel) {\n      const settings = context.settings;\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (runtime) {\n        const tasks = [];\n        if (settings.pose) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.pose,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n            context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n          }).catch((e) => {\n            context.live2dModel.emit(\"poseLoadError\", e);\n            logger.warn(TAG, \"Failed to load pose.\", e);\n          }));\n        }\n        if (settings.physics) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.physics,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n            context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n          }).catch((e) => {\n            context.live2dModel.emit(\"physicsLoadError\", e);\n            logger.warn(TAG, \"Failed to load physics.\", e);\n          }));\n        }\n        if (tasks.length) {\n          yield Promise.all(tasks);\n        }\n      }\n    }\n  });\n  const setupEssentials = (context, next) => __async(this, null, function* () {\n    if (context.settings) {\n      const live2DModel = context.live2dModel;\n      const textureLoadings = context.settings.textures.map((tex) => {\n        const url = context.settings.resolveURL(tex);\n        return createTexture(url, { crossOrigin: context.options.crossOrigin });\n      });\n      yield next();\n      if (context.internalModel) {\n        live2DModel.internalModel = context.internalModel;\n        live2DModel.emit(\"modelLoaded\", context.internalModel);\n      } else {\n        throw new TypeError(\"Missing internal model.\");\n      }\n      live2DModel.textures = yield Promise.all(textureLoadings);\n      live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n    } else {\n      throw new TypeError(\"Missing settings.\");\n    }\n  });\n  const createInternalModel = (context, next) => __async(this, null, function* () {\n    const settings = context.settings;\n    if (settings instanceof ModelSettings) {\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (!runtime) {\n        throw new TypeError(\"Unknown model settings.\");\n      }\n      const modelData = yield Live2DLoader.load({\n        settings,\n        url: settings.moc,\n        type: \"arraybuffer\",\n        target: context.live2dModel\n      });\n      if (!runtime.isValidMoc(modelData)) {\n        throw new Error(\"Invalid moc data\");\n      }\n      const coreModel = runtime.createCoreModel(modelData);\n      context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n      return next();\n    }\n    throw new TypeError(\"Missing settings.\");\n  });\n  const _Live2DFactory = class {\n    static registerRuntime(runtime) {\n      _Live2DFactory.runtimes.push(runtime);\n      _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n    static findRuntime(source) {\n      for (const runtime of _Live2DFactory.runtimes) {\n        if (runtime.test(source)) {\n          return runtime;\n        }\n      }\n    }\n    static setupLive2DModel(live2dModel, source, options) {\n      return __async(this, null, function* () {\n        const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n        const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n        yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n          live2dModel,\n          source,\n          options: options || {}\n        });\n        yield readyEventEmitted;\n        live2dModel.emit(\"load\");\n      });\n    }\n    static loadMotion(motionManager, group, index) {\n      var _a, _b;\n      const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n      try {\n        const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n        if (!tasks) {\n          tasks = {};\n          _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n        }\n        let taskGroup = tasks[group];\n        if (!taskGroup) {\n          taskGroup = [];\n          tasks[group] = taskGroup;\n        }\n        const path = motionManager.getMotionFile(definition);\n        (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n          url: path,\n          settings: motionManager.settings,\n          type: motionManager.motionDataType,\n          target: motionManager\n        }).then((data) => {\n          var _a2;\n          const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n          if (taskGroup2) {\n            delete taskGroup2[index];\n          }\n          const motion = motionManager.createMotion(data, group, definition);\n          motionManager.emit(\"motionLoaded\", group, index, motion);\n          return motion;\n        }).catch((e) => {\n          logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n          handleError(e);\n        });\n        return taskGroup[index];\n      } catch (e) {\n        logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static loadExpression(expressionManager, index) {\n      var _a;\n      const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n      try {\n        const definition = expressionManager.definitions[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (!tasks) {\n          tasks = [];\n          _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n        }\n        const path = expressionManager.getExpressionFile(definition);\n        (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n          url: path,\n          settings: expressionManager.settings,\n          type: \"json\",\n          target: expressionManager\n        }).then((data) => {\n          const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n          if (tasks2) {\n            delete tasks2[index];\n          }\n          const expression = expressionManager.createExpression(data, definition);\n          expressionManager.emit(\"expressionLoaded\", index, expression);\n          return expression;\n        }).catch((e) => {\n          logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n          handleError(e);\n        });\n        return tasks[index];\n      } catch (e) {\n        logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static releaseTasks() {\n      if (this instanceof MotionManager) {\n        _Live2DFactory.motionTasksMap.delete(this);\n      } else {\n        _Live2DFactory.expressionTasksMap.delete(this);\n      }\n    }\n  };\n  let Live2DFactory = _Live2DFactory;\n  Live2DFactory.runtimes = [];\n  Live2DFactory.urlToJSON = urlToJSON;\n  Live2DFactory.jsonToSettings = jsonToSettings;\n  Live2DFactory.waitUntilReady = waitUntilReady;\n  Live2DFactory.setupOptionals = setupOptionals;\n  Live2DFactory.setupEssentials = setupEssentials;\n  Live2DFactory.createInternalModel = createInternalModel;\n  Live2DFactory.live2DModelMiddlewares = [\n    urlToJSON,\n    jsonToSettings,\n    waitUntilReady,\n    setupOptionals,\n    setupEssentials,\n    createInternalModel\n  ];\n  Live2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\n  Live2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\n  MotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n    return Live2DFactory.loadMotion(this, group, index);\n  };\n  ExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n    return Live2DFactory.loadExpression(this, index);\n  };\n  class InteractionMixin {\n    constructor() {\n      this._autoInteract = false;\n    }\n    get autoInteract() {\n      return this._autoInteract;\n    }\n    set autoInteract(autoInteract) {\n      if (autoInteract !== this._autoInteract) {\n        if (autoInteract) {\n          this.on(\"pointertap\", onTap, this);\n        } else {\n          this.off(\"pointertap\", onTap, this);\n        }\n        this._autoInteract = autoInteract;\n      }\n    }\n    registerInteraction(manager) {\n      if (manager !== this.interactionManager) {\n        this.unregisterInteraction();\n        if (this._autoInteract && manager) {\n          this.interactionManager = manager;\n          manager.on(\"pointermove\", onPointerMove, this);\n        }\n      }\n    }\n    unregisterInteraction() {\n      var _a;\n      if (this.interactionManager) {\n        (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n        this.interactionManager = void 0;\n      }\n    }\n  }\n  function onTap(event) {\n    this.tap(event.data.global.x, event.data.global.y);\n  }\n  function onPointerMove(event) {\n    this.focus(event.data.global.x, event.data.global.y);\n  }\n  class Live2DTransform extends math.Transform {\n  }\n  const tempPoint = new math.Point();\n  const tempMatrix$1 = new math.Matrix();\n  let tickerRef;\n  class Live2DModel extends display.Container {\n    constructor(options) {\n      super();\n      this.tag = \"Live2DModel(uninitialized)\";\n      this.textures = [];\n      this.transform = new Live2DTransform();\n      this.anchor = new math.ObservablePoint(this.onAnchorChange, this, 0, 0);\n      this.glContextID = -1;\n      this.elapsedTime = performance.now();\n      this.deltaTime = 0;\n      this._autoUpdate = false;\n      this.once(\"modelLoaded\", () => this.init(options));\n    }\n    static from(source, options) {\n      const model = new this(options);\n      return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n    static fromSync(source, options) {\n      const model = new this(options);\n      Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n      return model;\n    }\n    static registerTicker(tickerClass) {\n      tickerRef = tickerClass;\n    }\n    get autoUpdate() {\n      return this._autoUpdate;\n    }\n    set autoUpdate(autoUpdate) {\n      var _a;\n      tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n      if (autoUpdate) {\n        if (!this._destroyed) {\n          if (tickerRef) {\n            tickerRef.shared.add(this.onTickerUpdate, this);\n            this._autoUpdate = true;\n          } else {\n            logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n          }\n        }\n      } else {\n        tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n        this._autoUpdate = false;\n      }\n    }\n    init(options) {\n      this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n      const _options = Object.assign({\n        autoUpdate: true,\n        autoInteract: true\n      }, options);\n      if (_options.autoInteract) {\n        this.interactive = true;\n      }\n      this.autoInteract = _options.autoInteract;\n      this.autoUpdate = _options.autoUpdate;\n    }\n    onAnchorChange() {\n      this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n    motion(group, index, priority) {\n      return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n    expression(id) {\n      if (this.internalModel.motionManager.expressionManager) {\n        return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n      }\n      return Promise.resolve(false);\n    }\n    focus(x, y, instant = false) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint, true);\n      let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n      let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n      let radian = Math.atan2(ty, tx);\n      this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n    }\n    tap(x, y) {\n      const hitAreaNames = this.hitTest(x, y);\n      if (hitAreaNames.length) {\n        logger.log(this.tag, `Hit`, hitAreaNames);\n        this.emit(\"hit\", hitAreaNames);\n      }\n    }\n    hitTest(x, y) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint);\n      return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n    toModelPosition(position, result = position.clone(), skipUpdate) {\n      if (!skipUpdate) {\n        this._recursivePostUpdateTransform();\n        if (!this.parent) {\n          this.parent = this._tempDisplayObjectParent;\n          this.displayObjectUpdateTransform();\n          this.parent = null;\n        } else {\n          this.displayObjectUpdateTransform();\n        }\n      }\n      this.transform.worldTransform.applyInverse(position, result);\n      this.internalModel.localTransform.applyInverse(result, result);\n      return result;\n    }\n    containsPoint(point) {\n      return this.getBounds(true).contains(point.x, point.y);\n    }\n    _calculateBounds() {\n      this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n    onTickerUpdate() {\n      this.update(tickerRef.shared.deltaMS);\n    }\n    update(dt) {\n      this.deltaTime += dt;\n      this.elapsedTime += dt;\n    }\n    _render(renderer) {\n      this.registerInteraction(renderer.plugins.interaction);\n      renderer.batch.reset();\n      renderer.geometry.reset();\n      renderer.shader.reset();\n      renderer.state.reset();\n      let shouldUpdateTexture = false;\n      if (this.glContextID !== renderer.CONTEXT_UID) {\n        this.glContextID = renderer.CONTEXT_UID;\n        this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n        shouldUpdateTexture = true;\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        const texture = this.textures[i];\n        if (!texture.valid) {\n          continue;\n        }\n        if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n          renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n          renderer.texture.bind(texture.baseTexture, 0);\n        }\n        this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n        texture.baseTexture.touched = renderer.textureGC.count;\n      }\n      const viewport = renderer.framebuffer.viewport;\n      this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n      if (this.deltaTime) {\n        this.internalModel.update(this.deltaTime, this.elapsedTime);\n        this.deltaTime = 0;\n      }\n      const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n      this.internalModel.updateTransform(internalTransform);\n      this.internalModel.draw(renderer.gl);\n      renderer.state.reset();\n      renderer.texture.reset();\n    }\n    destroy(options) {\n      this.emit(\"destroy\");\n      this.autoUpdate = false;\n      this.unregisterInteraction();\n      if (options == null ? void 0 : options.texture) {\n        this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n      }\n      this.internalModel.destroy();\n      super.destroy(options);\n    }\n  }\n  applyMixins(Live2DModel, [InteractionMixin]);\n  const _FileLoader = class {\n    static resolveURL(settingsURL, filePath) {\n      var _a;\n      const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n      if (resolved === void 0) {\n        throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n      }\n      return resolved;\n    }\n    static upload(files, settings) {\n      return __async(this, null, function* () {\n        const fileMap = {};\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n          if (actualFile) {\n            fileMap[definedFile] = URL.createObjectURL(actualFile);\n          }\n        }\n        _FileLoader.filesMap[settings._objectURL] = fileMap;\n      });\n    }\n    static createSettings(files) {\n      return __async(this, null, function* () {\n        const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n        if (!settingsFile) {\n          throw new TypeError(\"Settings file not found\");\n        }\n        const settingsText = yield _FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFile.webkitRelativePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        const settings = runtime.createModelSettings(settingsJSON);\n        settings._objectURL = URL.createObjectURL(settingsFile);\n        return settings;\n      });\n    }\n    static readText(file) {\n      return __async(this, null, function* () {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsText(file, \"utf8\");\n        });\n      });\n    }\n  };\n  let FileLoader = _FileLoader;\n  FileLoader.filesMap = {};\n  FileLoader.factory = (context, next) => __async(this, null, function* () {\n    if (Array.isArray(context.source) && context.source[0] instanceof File) {\n      const files = context.source;\n      let settings = files.settings;\n      if (!settings) {\n        settings = yield _FileLoader.createSettings(files);\n      } else if (!settings._objectURL) {\n        throw new Error('\"_objectURL\" must be specified in ModelSettings');\n      }\n      settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n      yield _FileLoader.upload(files, settings);\n      settings.resolveURL = function(url) {\n        return _FileLoader.resolveURL(this._objectURL, url);\n      };\n      context.source = settings;\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          const objectURL = this.settings._objectURL;\n          URL.revokeObjectURL(objectURL);\n          if (_FileLoader.filesMap[objectURL]) {\n            for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n              URL.revokeObjectURL(resourceObjectURL);\n            }\n          }\n          delete _FileLoader.filesMap[objectURL];\n        });\n      });\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n  const _ZipLoader = class {\n    static unzip(reader, settings) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const requiredFilePaths = [];\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          if (filePaths.includes(actualPath)) {\n            requiredFilePaths.push(actualPath);\n          }\n        }\n        const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n        for (let i = 0; i < files.length; i++) {\n          const path = requiredFilePaths[i];\n          const file = files[i];\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: path\n          });\n        }\n        return files;\n      });\n    }\n    static createSettings(reader) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n        if (!settingsFilePath) {\n          throw new Error(\"Settings file not found\");\n        }\n        const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n        if (!settingsText) {\n          throw new Error(\"Empty settings file: \" + settingsFilePath);\n        }\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFilePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        return runtime.createModelSettings(settingsJSON);\n      });\n    }\n    static zipReader(data, url) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFilePaths(reader) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFiles(reader, paths) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static readText(reader, path) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static releaseReader(reader) {\n    }\n  };\n  let ZipLoader = _ZipLoader;\n  ZipLoader.ZIP_PROTOCOL = \"zip://\";\n  ZipLoader.uid = 0;\n  ZipLoader.factory = (context, next) => __async(this, null, function* () {\n    const source = context.source;\n    let sourceURL;\n    let zipBlob;\n    let settings;\n    if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n      if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n        sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n      } else {\n        sourceURL = source;\n      }\n      zipBlob = yield Live2DLoader.load({\n        url: sourceURL,\n        type: \"blob\",\n        target: context.live2dModel\n      });\n    } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n      zipBlob = source[0];\n      sourceURL = URL.createObjectURL(zipBlob);\n      settings = source.settings;\n    }\n    if (zipBlob) {\n      if (!zipBlob.size) {\n        throw new Error(\"Empty zip file\");\n      }\n      const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n      if (!settings) {\n        settings = yield _ZipLoader.createSettings(reader);\n      }\n      settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n      const files = yield _ZipLoader.unzip(reader, settings);\n      files.settings = settings;\n      context.source = files;\n      if (sourceURL.startsWith(\"blob:\")) {\n        context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n          internalModel.once(\"destroy\", function() {\n            URL.revokeObjectURL(sourceURL);\n          });\n        });\n      }\n      _ZipLoader.releaseReader(reader);\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n  if (!window.Live2D) {\n    throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n  }\n  const originalUpdateParam = Live2DMotion.prototype.updateParam;\n  Live2DMotion.prototype.updateParam = function(model, entry) {\n    originalUpdateParam.call(this, model, entry);\n    if (entry.isFinished() && this.onFinishHandler) {\n      this.onFinishHandler(this);\n      delete this.onFinishHandler;\n    }\n  };\n  class Live2DExpression extends AMotion {\n    constructor(json) {\n      super();\n      this.params = [];\n      this.setFadeIn(json.fade_in > 0 ? json.fade_in : exports2.config.expressionFadingDuration);\n      this.setFadeOut(json.fade_out > 0 ? json.fade_out : exports2.config.expressionFadingDuration);\n      if (Array.isArray(json.params)) {\n        json.params.forEach((param) => {\n          const calc = param.calc || \"add\";\n          if (calc === \"add\") {\n            const defaultValue = param.def || 0;\n            param.val -= defaultValue;\n          } else if (calc === \"mult\") {\n            const defaultValue = param.def || 1;\n            param.val /= defaultValue;\n          }\n          this.params.push({\n            calc,\n            val: param.val,\n            id: param.id\n          });\n        });\n      }\n    }\n    updateParamExe(model, time, weight, motionQueueEnt) {\n      this.params.forEach((param) => {\n        model.setParamFloat(param.id, param.val * weight);\n      });\n    }\n  }\n  class Cubism2ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new MotionQueueManager();\n      this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.file;\n    }\n    createExpression(data, definition) {\n      return new Live2DExpression(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion);\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, dt) {\n      return this.queueManager.updateParam(model);\n    }\n  }\n  class Cubism2MotionManager extends MotionManager {\n    constructor(settings, options) {\n      super(settings, options);\n      this.groups = { idle: \"idle\" };\n      this.motionDataType = \"arraybuffer\";\n      this.queueManager = new MotionQueueManager();\n      this.definitions = this.settings.motions;\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n      }\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    createMotion(data, group, definition) {\n      const motion = Live2DMotion.loadMotion(data);\n      const defaultFadingDuration = group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration;\n      motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n      motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.file;\n    }\n    getMotionName(definition) {\n      return definition.file;\n    }\n    getSoundFile(definition) {\n      return definition.sound;\n    }\n    _startMotion(motion, onFinish) {\n      motion.onFinishHandler = onFinish;\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion);\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.updateParam(model);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager = void 0;\n    }\n  }\n  class Live2DEyeBlink {\n    constructor(coreModel) {\n      this.coreModel = coreModel;\n      this.blinkInterval = 4e3;\n      this.closingDuration = 100;\n      this.closedDuration = 50;\n      this.openingDuration = 150;\n      this.eyeState = 0;\n      this.eyeParamValue = 1;\n      this.closedTimer = 0;\n      this.nextBlinkTimeLeft = this.blinkInterval;\n      this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n      this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n    }\n    setEyeParams(value) {\n      this.eyeParamValue = clamp(value, 0, 1);\n      this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n      this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n    }\n    update(dt) {\n      switch (this.eyeState) {\n        case 0:\n          this.nextBlinkTimeLeft -= dt;\n          if (this.nextBlinkTimeLeft < 0) {\n            this.eyeState = 1;\n            this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n          }\n          break;\n        case 1:\n          this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n          if (this.eyeParamValue <= 0) {\n            this.eyeState = 2;\n            this.closedTimer = 0;\n          }\n          break;\n        case 2:\n          this.closedTimer += dt;\n          if (this.closedTimer >= this.closedDuration) {\n            this.eyeState = 3;\n          }\n          break;\n        case 3:\n          this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n          if (this.eyeParamValue >= 1) {\n            this.eyeState = 0;\n          }\n      }\n    }\n  }\n  const tempMatrixArray = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  class Cubism2InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.textureFlipY = true;\n      this.drawDataCount = 0;\n      this.disableCulling = false;\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism2MotionManager(settings, options);\n      this.eyeBlink = new Live2DEyeBlink(coreModel);\n      this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n      this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n      this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n      this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n      this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n      this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n      this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n      this.init();\n    }\n    init() {\n      super.init();\n      if (this.settings.initParams) {\n        this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n      }\n      if (this.settings.initOpacities) {\n        this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n      }\n      this.coreModel.saveParam();\n      const arr = this.coreModel.getModelContext()._$aS;\n      if (arr == null ? void 0 : arr.length) {\n        this.drawDataCount = arr.length;\n      }\n      let culling = this.coreModel.drawParamWebGL.culling;\n      Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n        set: (v) => culling = v,\n        get: () => this.disableCulling ? false : culling\n      });\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      const originalSetupClip = clipManager.setupClip;\n      clipManager.setupClip = (modelContext, drawParam) => {\n        originalSetupClip.call(clipManager, modelContext, drawParam);\n        drawParam.gl.viewport(...this.viewport);\n      };\n    }\n    getSize() {\n      return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          let commonKey = key;\n          if (key === \"center_x\") {\n            commonKey = \"centerX\";\n          } else if (key === \"center_y\") {\n            commonKey = \"centerY\";\n          }\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    updateWebGLContext(gl, glContextID) {\n      const drawParamWebGL = this.coreModel.drawParamWebGL;\n      drawParamWebGL.firstDraw = true;\n      drawParamWebGL.setGL(gl);\n      drawParamWebGL.glno = glContextID;\n      for (const prop in drawParamWebGL) {\n        if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n          drawParamWebGL[prop] = null;\n        }\n      }\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      clipManager.curFrameNo = glContextID;\n      const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n      clipManager.getMaskRenderTexture();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    bindTexture(index, texture) {\n      this.coreModel.setTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a;\n      return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.id,\n        name: hitArea.name,\n        index: this.coreModel.getDrawDataIndex(hitArea.id)\n      }))) || [];\n    }\n    getDrawableIDs() {\n      const modelContext = this.coreModel.getModelContext();\n      const ids = [];\n      for (let i = 0; i < this.drawDataCount; i++) {\n        const drawData = modelContext.getDrawData(i);\n        if (drawData) {\n          ids.push(drawData.getDrawDataID().id);\n        }\n      }\n      return ids;\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawDataIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      return this.coreModel.getTransformedPoints(drawIndex).slice();\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParam();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt, now);\n      (_c = this.physics) == null ? void 0 : _c.update(now);\n      (_d = this.pose) == null ? void 0 : _d.update(dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParam();\n    }\n    updateFocus() {\n      this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n      this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n      this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      const t = now / 1e3 * 2 * Math.PI;\n      this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n      this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n    }\n    draw(gl) {\n      const disableCulling = this.disableCulling;\n      if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n        this.disableCulling = true;\n      }\n      const matrix = this.drawingMatrix;\n      tempMatrixArray[0] = matrix.a;\n      tempMatrixArray[1] = matrix.b;\n      tempMatrixArray[4] = matrix.c;\n      tempMatrixArray[5] = matrix.d;\n      tempMatrixArray[12] = matrix.tx;\n      tempMatrixArray[13] = matrix.ty;\n      this.coreModel.setMatrix(tempMatrixArray);\n      this.coreModel.draw();\n      this.disableCulling = disableCulling;\n    }\n    destroy() {\n      super.destroy();\n      this.coreModel = void 0;\n    }\n  }\n  class Cubism2ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      this.motions = {};\n      if (!Cubism2ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      this.moc = json.model;\n      copyArray(\"string\", json, this, \"textures\", \"textures\");\n      this.copy(json);\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every((item) => typeof item === \"string\");\n    }\n    copy(json) {\n      copyProperty(\"string\", json, this, \"name\", \"name\");\n      copyProperty(\"string\", json, this, \"pose\", \"pose\");\n      copyProperty(\"string\", json, this, \"physics\", \"physics\");\n      copyProperty(\"object\", json, this, \"layout\", \"layout\");\n      copyProperty(\"object\", json, this, \"motions\", \"motions\");\n      copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n      copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n      copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n      copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n          if (motions[i].sound !== void 0) {\n            motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n        }\n      }\n    }\n  }\n  const SRC_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  const TARGET_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  class Live2DPhysics {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.physicsHairs = [];\n      if (json.physics_hair) {\n        this.physicsHairs = json.physics_hair.map((definition) => {\n          const physicsHair = new PhysicsHair();\n          physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n          definition.src.forEach(({ id, ptype, scale, weight }) => {\n            const type = SRC_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addSrcParam(type, id, scale, weight);\n            }\n          });\n          definition.targets.forEach(({ id, ptype, scale, weight }) => {\n            const type = TARGET_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addTargetParam(type, id, scale, weight);\n            }\n          });\n          return physicsHair;\n        });\n      }\n    }\n    update(elapsed) {\n      this.physicsHairs.forEach((physicsHair) => physicsHair.update(this.coreModel, elapsed));\n    }\n  }\n  class Live2DPartsParam {\n    constructor(id) {\n      this.id = id;\n      this.paramIndex = -1;\n      this.partsIndex = -1;\n      this.link = [];\n    }\n    initIndex(model) {\n      this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n      this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n      model.setParamFloat(this.paramIndex, 1);\n    }\n  }\n  class Live2DPose {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.opacityAnimDuration = 500;\n      this.partsGroups = [];\n      if (json.parts_visible) {\n        this.partsGroups = json.parts_visible.map(({ group }) => group.map(({ id, link }) => {\n          const parts = new Live2DPartsParam(id);\n          if (link) {\n            parts.link = link.map((l) => new Live2DPartsParam(l));\n          }\n          return parts;\n        }));\n        this.init();\n      }\n    }\n    init() {\n      this.partsGroups.forEach((group) => {\n        group.forEach((parts) => {\n          parts.initIndex(this.coreModel);\n          if (parts.paramIndex >= 0) {\n            const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n            this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n            this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n            if (parts.link.length > 0) {\n              parts.link.forEach((p) => p.initIndex(this.coreModel));\n            }\n          }\n        });\n      });\n    }\n    normalizePartsOpacityGroup(partsGroup, dt) {\n      const model = this.coreModel;\n      const phi = 0.5;\n      const maxBackOpacity = 0.15;\n      let visibleOpacity = 1;\n      let visibleIndex = partsGroup.findIndex(({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n      if (visibleIndex >= 0) {\n        const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n        visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n      } else {\n        visibleIndex = 0;\n        visibleOpacity = 1;\n      }\n      partsGroup.forEach(({ partsIndex }, index) => {\n        if (partsIndex >= 0) {\n          if (visibleIndex == index) {\n            model.setPartsOpacity(partsIndex, visibleOpacity);\n          } else {\n            let opacity = model.getPartsOpacity(partsIndex);\n            let a1;\n            if (visibleOpacity < phi) {\n              a1 = visibleOpacity * (phi - 1) / phi + 1;\n            } else {\n              a1 = (1 - visibleOpacity) * phi / (1 - phi);\n            }\n            let backOp = (1 - a1) * (1 - visibleOpacity);\n            if (backOp > maxBackOpacity) {\n              a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n            }\n            if (opacity > a1) {\n              opacity = a1;\n            }\n            model.setPartsOpacity(partsIndex, opacity);\n          }\n        }\n      });\n    }\n    copyOpacity(partsGroup) {\n      const model = this.coreModel;\n      partsGroup.forEach(({ partsIndex, link }) => {\n        if (partsIndex >= 0 && link) {\n          const opacity = model.getPartsOpacity(partsIndex);\n          link.forEach(({ partsIndex: partsIndex2 }) => {\n            if (partsIndex2 >= 0) {\n              model.setPartsOpacity(partsIndex2, opacity);\n            }\n          });\n        }\n      });\n    }\n    update(dt) {\n      this.partsGroups.forEach((partGroup) => {\n        this.normalizePartsOpacityGroup(partGroup, dt);\n        this.copyOpacity(partGroup);\n      });\n    }\n  }\n  Live2DFactory.registerRuntime({\n    version: 2,\n    test(source) {\n      return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n    },\n    ready() {\n      return Promise.resolve();\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 3) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 3);\n      return String.fromCharCode(...view) === \"moc\";\n    },\n    createModelSettings(json) {\n      return new Cubism2ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const model = Live2DModelWebGL.loadModel(data);\n      const error = Live2D.getError();\n      if (error)\n        throw error;\n      return model;\n    },\n    createInternalModel(coreModel, settings, options) {\n      return new Cubism2InternalModel(coreModel, settings, options);\n    },\n    createPose(coreModel, data) {\n      return new Live2DPose(coreModel, data);\n    },\n    createPhysics(coreModel, data) {\n      return new Live2DPhysics(coreModel, data);\n    }\n  });\n  if (!window.Live2DCubismCore) {\n    throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n  }\n  class CubismVector2 {\n    constructor(x, y) {\n      this.x = x || 0;\n      this.y = y || 0;\n    }\n    add(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x + vector2.x;\n      ret.y = this.y + vector2.y;\n      return ret;\n    }\n    substract(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x - vector2.x;\n      ret.y = this.y - vector2.y;\n      return ret;\n    }\n    multiply(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x * vector2.x;\n      ret.y = this.y * vector2.y;\n      return ret;\n    }\n    multiplyByScaler(scalar) {\n      return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    division(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x / vector2.x;\n      ret.y = this.y / vector2.y;\n      return ret;\n    }\n    divisionByScalar(scalar) {\n      return this.division(new CubismVector2(scalar, scalar));\n    }\n    getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    getDistanceWith(a) {\n      return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    dot(a) {\n      return this.x * a.x + this.y * a.y;\n    }\n    normalize() {\n      const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n      this.x = this.x / length;\n      this.y = this.y / length;\n    }\n    isEqual(rhs) {\n      return this.x == rhs.x && this.y == rhs.y;\n    }\n    isNotEqual(rhs) {\n      return !this.isEqual(rhs);\n    }\n  }\n  const _CubismMath = class {\n    static range(value, min, max) {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n    static sin(x) {\n      return Math.sin(x);\n    }\n    static cos(x) {\n      return Math.cos(x);\n    }\n    static abs(x) {\n      return Math.abs(x);\n    }\n    static sqrt(x) {\n      return Math.sqrt(x);\n    }\n    static cbrt(x) {\n      if (x === 0) {\n        return x;\n      }\n      let cx = x;\n      const isNegativeNumber = cx < 0;\n      if (isNegativeNumber) {\n        cx = -cx;\n      }\n      let ret;\n      if (cx === Infinity) {\n        ret = Infinity;\n      } else {\n        ret = Math.exp(Math.log(cx) / 3);\n        ret = (cx / (ret * ret) + 2 * ret) / 3;\n      }\n      return isNegativeNumber ? -ret : ret;\n    }\n    static getEasingSine(value) {\n      if (value < 0) {\n        return 0;\n      } else if (value > 1) {\n        return 1;\n      }\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    static max(left, right) {\n      return left > right ? left : right;\n    }\n    static min(left, right) {\n      return left > right ? right : left;\n    }\n    static degreesToRadian(degrees) {\n      return degrees / 180 * Math.PI;\n    }\n    static radianToDegrees(radian) {\n      return radian * 180 / Math.PI;\n    }\n    static directionToRadian(from, to) {\n      const q1 = Math.atan2(to.y, to.x);\n      const q2 = Math.atan2(from.y, from.x);\n      let ret = q1 - q2;\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2;\n      }\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2;\n      }\n      return ret;\n    }\n    static directionToDegrees(from, to) {\n      const radian = this.directionToRadian(from, to);\n      let degree = this.radianToDegrees(radian);\n      if (to.x - from.x > 0) {\n        degree = -degree;\n      }\n      return degree;\n    }\n    static radianToDirection(totalAngle) {\n      const ret = new CubismVector2();\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n      return ret;\n    }\n    static quadraticEquation(a, b, c) {\n      if (this.abs(a) < _CubismMath.Epsilon) {\n        if (this.abs(b) < _CubismMath.Epsilon) {\n          return -c;\n        }\n        return -c / b;\n      }\n      return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n    }\n    static cardanoAlgorithmForBezier(a, b, c, d) {\n      if (this.sqrt(a) < _CubismMath.Epsilon) {\n        return this.range(this.quadraticEquation(b, c, d), 0, 1);\n      }\n      const ba = b / a;\n      const ca = c / a;\n      const da = d / a;\n      const p = (3 * ca - ba * ba) / 3;\n      const p3 = p / 3;\n      const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n      const q2 = q / 2;\n      const discriminant = q2 * q2 + p3 * p3 * p3;\n      const center = 0.5;\n      const threshold = center + 0.01;\n      if (discriminant < 0) {\n        const mp3 = -p / 3;\n        const mp33 = mp3 * mp3 * mp3;\n        const r = this.sqrt(mp33);\n        const t = -q / (2 * r);\n        const cosphi = this.range(t, -1, 1);\n        const phi = Math.acos(cosphi);\n        const crtr = this.cbrt(r);\n        const t1 = 2 * crtr;\n        const root12 = t1 * this.cos(phi / 3) - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n        if (this.abs(root2 - center) < threshold) {\n          return this.range(root2, 0, 1);\n        }\n        const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n        return this.range(root3, 0, 1);\n      }\n      if (discriminant == 0) {\n        let u12;\n        if (q2 < 0) {\n          u12 = this.cbrt(-q2);\n        } else {\n          u12 = -this.cbrt(q2);\n        }\n        const root12 = 2 * u12 - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = -u12 - ba / 3;\n        return this.range(root2, 0, 1);\n      }\n      const sd = this.sqrt(discriminant);\n      const u1 = this.cbrt(sd - q2);\n      const v1 = this.cbrt(sd + q2);\n      const root1 = u1 - v1 - ba / 3;\n      return this.range(root1, 0, 1);\n    }\n    constructor() {\n    }\n  };\n  let CubismMath = _CubismMath;\n  CubismMath.Epsilon = 1e-5;\n  class CubismMatrix44 {\n    constructor() {\n      this._tr = new Float32Array(16);\n      this.loadIdentity();\n    }\n    static multiply(a, b, dst) {\n      const c = new Float32Array([\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ]);\n      const n = 4;\n      for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < n; ++j) {\n          for (let k = 0; k < n; ++k) {\n            c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n          }\n        }\n      }\n      for (let i = 0; i < 16; ++i) {\n        dst[i] = c[i];\n      }\n    }\n    loadIdentity() {\n      const c = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      this.setMatrix(c);\n    }\n    setMatrix(tr) {\n      for (let i = 0; i < 16; ++i) {\n        this._tr[i] = tr[i];\n      }\n    }\n    getArray() {\n      return this._tr;\n    }\n    getScaleX() {\n      return this._tr[0];\n    }\n    getScaleY() {\n      return this._tr[5];\n    }\n    getTranslateX() {\n      return this._tr[12];\n    }\n    getTranslateY() {\n      return this._tr[13];\n    }\n    transformX(src) {\n      return this._tr[0] * src + this._tr[12];\n    }\n    transformY(src) {\n      return this._tr[5] * src + this._tr[13];\n    }\n    invertTransformX(src) {\n      return (src - this._tr[12]) / this._tr[0];\n    }\n    invertTransformY(src) {\n      return (src - this._tr[13]) / this._tr[5];\n    }\n    translateRelative(x, y) {\n      const tr1 = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        x,\n        y,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    translate(x, y) {\n      this._tr[12] = x;\n      this._tr[13] = y;\n    }\n    translateX(x) {\n      this._tr[12] = x;\n    }\n    translateY(y) {\n      this._tr[13] = y;\n    }\n    scaleRelative(x, y) {\n      const tr1 = new Float32Array([\n        x,\n        0,\n        0,\n        0,\n        0,\n        y,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    scale(x, y) {\n      this._tr[0] = x;\n      this._tr[5] = y;\n    }\n    multiplyByMatrix(m) {\n      CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    clone() {\n      const cloneMatrix = new CubismMatrix44();\n      for (let i = 0; i < this._tr.length; i++) {\n        cloneMatrix._tr[i] = this._tr[i];\n      }\n      return cloneMatrix;\n    }\n  }\n  class CubismRenderer {\n    initialize(model) {\n      this._model = model;\n    }\n    drawModel() {\n      if (this.getModel() == null)\n        return;\n      this.doDrawModel();\n    }\n    setMvpMatrix(matrix44) {\n      this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    getMvpMatrix() {\n      return this._mvpMatrix4x4;\n    }\n    setModelColor(red, green, blue, alpha) {\n      if (red < 0) {\n        red = 0;\n      } else if (red > 1) {\n        red = 1;\n      }\n      if (green < 0) {\n        green = 0;\n      } else if (green > 1) {\n        green = 1;\n      }\n      if (blue < 0) {\n        blue = 0;\n      } else if (blue > 1) {\n        blue = 1;\n      }\n      if (alpha < 0) {\n        alpha = 0;\n      } else if (alpha > 1) {\n        alpha = 1;\n      }\n      this._modelColor.R = red;\n      this._modelColor.G = green;\n      this._modelColor.B = blue;\n      this._modelColor.A = alpha;\n    }\n    getModelColor() {\n      return Object.assign({}, this._modelColor);\n    }\n    setIsPremultipliedAlpha(enable) {\n      this._isPremultipliedAlpha = enable;\n    }\n    isPremultipliedAlpha() {\n      return this._isPremultipliedAlpha;\n    }\n    setIsCulling(culling) {\n      this._isCulling = culling;\n    }\n    isCulling() {\n      return this._isCulling;\n    }\n    setAnisotropy(n) {\n      this._anisortopy = n;\n    }\n    getAnisotropy() {\n      return this._anisortopy;\n    }\n    getModel() {\n      return this._model;\n    }\n    constructor() {\n      this._isCulling = false;\n      this._isPremultipliedAlpha = false;\n      this._anisortopy = 0;\n      this._modelColor = new CubismTextureColor();\n      this._mvpMatrix4x4 = new CubismMatrix44();\n      this._mvpMatrix4x4.loadIdentity();\n    }\n  }\n  var CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n    return CubismBlendMode2;\n  })(CubismBlendMode || {});\n  class CubismTextureColor {\n    constructor() {\n      this.R = 1;\n      this.G = 1;\n      this.B = 1;\n      this.A = 1;\n    }\n  }\n  let s_isStarted = false;\n  let s_isInitialized = false;\n  let s_option = void 0;\n  const Constant = {\n    vertexOffset: 0,\n    vertexStep: 2\n  };\n  class CubismFramework {\n    static startUp(option) {\n      if (s_isStarted) {\n        CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n        return s_isStarted;\n      }\n      if (Live2DCubismCore._isStarted) {\n        s_isStarted = true;\n        return true;\n      }\n      Live2DCubismCore._isStarted = true;\n      s_option = option;\n      if (s_option) {\n        Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n      }\n      s_isStarted = true;\n      if (s_isStarted) {\n        const version = Live2DCubismCore.Version.csmGetVersion();\n        const major = (version & 4278190080) >> 24;\n        const minor = (version & 16711680) >> 16;\n        const patch = version & 65535;\n        const versionNumber = version;\n        CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n      }\n      CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n      return s_isStarted;\n    }\n    static cleanUp() {\n      s_isStarted = false;\n      s_isInitialized = false;\n      s_option = void 0;\n    }\n    static initialize() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n        return;\n      }\n      s_isInitialized = true;\n      CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n    }\n    static dispose() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (!s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n        return;\n      }\n      CubismRenderer.staticRelease();\n      s_isInitialized = false;\n      CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n    }\n    static isStarted() {\n      return s_isStarted;\n    }\n    static isInitialized() {\n      return s_isInitialized;\n    }\n    static coreLogFunction(message) {\n      if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n        return;\n      }\n      Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    static getLoggingLevel() {\n      if (s_option != null) {\n        return s_option.loggingLevel;\n      }\n      return LogLevel.LogLevel_Off;\n    }\n    constructor() {\n    }\n  }\n  var LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n    LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n    return LogLevel2;\n  })(LogLevel || {});\n  const CSM_ASSERT = () => {\n  };\n  function CubismLogDebug(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogInfo(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogWarning(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogError(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n  }\n  class CubismDebug {\n    static print(logLevel, format, args) {\n      if (logLevel < CubismFramework.getLoggingLevel()) {\n        return;\n      }\n      const logPrint = CubismFramework.coreLogFunction;\n      if (!logPrint)\n        return;\n      const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n        return args[k];\n      });\n      logPrint(buffer);\n    }\n    static dumpBytes(logLevel, data, length) {\n      for (let i = 0; i < length; i++) {\n        if (i % 16 == 0 && i > 0)\n          this.print(logLevel, \"\\n\");\n        else if (i % 8 == 0 && i > 0)\n          this.print(logLevel, \"  \");\n        this.print(logLevel, \"{0} \", [data[i] & 255]);\n      }\n      this.print(logLevel, \"\\n\");\n    }\n    constructor() {\n    }\n  }\n  class ACubismMotion {\n    constructor() {\n      this._fadeInSeconds = -1;\n      this._fadeOutSeconds = -1;\n      this._weight = 1;\n      this._offsetSeconds = 0;\n      this._firedEventValues = [];\n    }\n    release() {\n      this._weight = 0;\n    }\n    updateParameters(model, motionQueueEntry, userTimeSeconds) {\n      if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n        return;\n      }\n      if (!motionQueueEntry.isStarted()) {\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        const duration = this.getDuration();\n        if (motionQueueEntry.getEndTime() < 0) {\n          motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n        }\n      }\n      let fadeWeight = this._weight;\n      const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      fadeWeight = fadeWeight * fadeIn * fadeOut;\n      motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n      this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n      if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    setFadeInTime(fadeInSeconds) {\n      this._fadeInSeconds = fadeInSeconds;\n    }\n    setFadeOutTime(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n    }\n    getFadeOutTime() {\n      return this._fadeOutSeconds;\n    }\n    getFadeInTime() {\n      return this._fadeInSeconds;\n    }\n    setWeight(weight) {\n      this._weight = weight;\n    }\n    getWeight() {\n      return this._weight;\n    }\n    getDuration() {\n      return -1;\n    }\n    getLoopDuration() {\n      return -1;\n    }\n    setOffsetTime(offsetSeconds) {\n      this._offsetSeconds = offsetSeconds;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      return this._firedEventValues;\n    }\n    setFinishedMotionHandler(onFinishedMotionHandler) {\n      this._onFinishedMotion = onFinishedMotionHandler;\n    }\n    getFinishedMotionHandler() {\n      return this._onFinishedMotion;\n    }\n  }\n  const DefaultFadeTime = 1;\n  class CubismExpressionMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._parameters = [];\n    }\n    static create(json) {\n      const expression = new CubismExpressionMotion();\n      const fadeInTime = json.FadeInTime;\n      const fadeOutTime = json.FadeOutTime;\n      expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n      expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n      const parameters = json.Parameters || [];\n      for (let i = 0; i < parameters.length; ++i) {\n        const param = parameters[i];\n        const parameterId = param.Id;\n        const value = param.Value;\n        let blendType;\n        switch (param.Blend) {\n          case \"Multiply\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n            break;\n          case \"Overwrite\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n            break;\n          case \"Add\":\n          default:\n            blendType = ExpressionBlendType.ExpressionBlendType_Add;\n            break;\n        }\n        const item = {\n          parameterId,\n          blendType,\n          value\n        };\n        expression._parameters.push(item);\n      }\n      return expression;\n    }\n    doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n      for (let i = 0; i < this._parameters.length; ++i) {\n        const parameter = this._parameters[i];\n        switch (parameter.blendType) {\n          case ExpressionBlendType.ExpressionBlendType_Add: {\n            model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Multiply: {\n            model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n            model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        }\n      }\n    }\n  }\n  var ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n    return ExpressionBlendType2;\n  })(ExpressionBlendType || {});\n  class CubismMotionQueueEntry {\n    constructor() {\n      this._autoDelete = false;\n      this._available = true;\n      this._finished = false;\n      this._started = false;\n      this._startTimeSeconds = -1;\n      this._fadeInStartTimeSeconds = 0;\n      this._endTimeSeconds = -1;\n      this._stateTimeSeconds = 0;\n      this._stateWeight = 0;\n      this._lastEventCheckSeconds = 0;\n      this._motionQueueEntryHandle = this;\n      this._fadeOutSeconds = 0;\n      this._isTriggeredFadeOut = false;\n    }\n    release() {\n      if (this._autoDelete && this._motion) {\n        this._motion.release();\n      }\n    }\n    setFadeOut(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n    }\n    startFadeOut(fadeOutSeconds, userTimeSeconds) {\n      const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n      if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n        this._endTimeSeconds = newEndTimeSeconds;\n      }\n    }\n    isFinished() {\n      return this._finished;\n    }\n    isStarted() {\n      return this._started;\n    }\n    getStartTime() {\n      return this._startTimeSeconds;\n    }\n    getFadeInStartTime() {\n      return this._fadeInStartTimeSeconds;\n    }\n    getEndTime() {\n      return this._endTimeSeconds;\n    }\n    setStartTime(startTime) {\n      this._startTimeSeconds = startTime;\n    }\n    setFadeInStartTime(startTime) {\n      this._fadeInStartTimeSeconds = startTime;\n    }\n    setEndTime(endTime) {\n      this._endTimeSeconds = endTime;\n    }\n    setIsFinished(f) {\n      this._finished = f;\n    }\n    setIsStarted(f) {\n      this._started = f;\n    }\n    isAvailable() {\n      return this._available;\n    }\n    setIsAvailable(v) {\n      this._available = v;\n    }\n    setState(timeSeconds, weight) {\n      this._stateTimeSeconds = timeSeconds;\n      this._stateWeight = weight;\n    }\n    getStateTime() {\n      return this._stateTimeSeconds;\n    }\n    getStateWeight() {\n      return this._stateWeight;\n    }\n    getLastCheckEventSeconds() {\n      return this._lastEventCheckSeconds;\n    }\n    setLastCheckEventSeconds(checkSeconds) {\n      this._lastEventCheckSeconds = checkSeconds;\n    }\n    isTriggeredFadeOut() {\n      return this._isTriggeredFadeOut;\n    }\n    getFadeOutSeconds() {\n      return this._fadeOutSeconds;\n    }\n  }\n  class CubismMotionQueueManager {\n    constructor() {\n      this._userTimeSeconds = 0;\n      this._eventCustomData = null;\n      this._motions = [];\n    }\n    release() {\n      for (let i = 0; i < this._motions.length; ++i) {\n        if (this._motions[i]) {\n          this._motions[i].release();\n        }\n      }\n      this._motions = void 0;\n    }\n    startMotion(motion, autoDelete, userTimeSeconds) {\n      if (motion == null) {\n        return InvalidMotionQueueEntryHandleValue;\n      }\n      let motionQueueEntry;\n      for (let i = 0; i < this._motions.length; ++i) {\n        motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n      }\n      motionQueueEntry = new CubismMotionQueueEntry();\n      motionQueueEntry._autoDelete = autoDelete;\n      motionQueueEntry._motion = motion;\n      this._motions.push(motionQueueEntry);\n      return motionQueueEntry._motionQueueEntryHandle;\n    }\n    isFinished() {\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        if (!motionQueueEntry.isFinished()) {\n          return false;\n        }\n        i++;\n      }\n      return true;\n    }\n    isFinishedByHandle(motionQueueEntryNumber) {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    stopAllMotions() {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry != null) {\n          motionQueueEntry.release();\n        }\n      }\n      this._motions = [];\n    }\n    getCubismMotionQueueEntry(motionQueueEntryNumber) {\n      return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n    }\n    setEventCallback(callback, customData = null) {\n      this._eventCallBack = callback;\n      this._eventCustomData = customData;\n    }\n    doUpdateMotion(model, userTimeSeconds) {\n      let updated = false;\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n        updated = true;\n        const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n        for (let i2 = 0; i2 < firedList.length; ++i2) {\n          this._eventCallBack(this, firedList[i2], this._eventCustomData);\n        }\n        motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n        if (motionQueueEntry.isFinished()) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n        } else {\n          if (motionQueueEntry.isTriggeredFadeOut()) {\n            motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n          }\n          i++;\n        }\n      }\n      return updated;\n    }\n  }\n  const InvalidMotionQueueEntryHandleValue = -1;\n  class Cubism4ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.Name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.File;\n    }\n    createExpression(data, definition) {\n      return CubismExpressionMotion.create(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n  }\n  class CubismModelSettingsJson {\n    constructor(json) {\n      this.groups = json.Groups;\n      this.hitAreas = json.HitAreas;\n      this.layout = json.Layout;\n      this.moc = json.FileReferences.Moc;\n      this.expressions = json.FileReferences.Expressions;\n      this.motions = json.FileReferences.Motions;\n      this.textures = json.FileReferences.Textures;\n      this.physics = json.FileReferences.Physics;\n      this.pose = json.FileReferences.Pose;\n    }\n    getEyeBlinkParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n    }\n    getLipSyncParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n    }\n  }\n  class Cubism4ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      if (!Cubism4ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      Object.assign(this, new CubismModelSettingsJson(json));\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      if (this.motions) {\n        for (const [group, motions] of Object.entries(this.motions)) {\n          for (let i = 0; i < motions.length; i++) {\n            motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n            if (motions[i].Sound !== void 0) {\n              motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n            }\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n        }\n      }\n    }\n  }\n  applyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\n  var CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n    return CubismMotionCurveTarget2;\n  })(CubismMotionCurveTarget || {});\n  var CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n    return CubismMotionSegmentType2;\n  })(CubismMotionSegmentType || {});\n  class CubismMotionPoint {\n    constructor(time = 0, value = 0) {\n      this.time = time;\n      this.value = value;\n    }\n  }\n  class CubismMotionSegment {\n    constructor() {\n      this.basePointIndex = 0;\n      this.segmentType = 0;\n    }\n  }\n  class CubismMotionCurve {\n    constructor() {\n      this.id = \"\";\n      this.type = 0;\n      this.segmentCount = 0;\n      this.baseSegmentIndex = 0;\n      this.fadeInTime = 0;\n      this.fadeOutTime = 0;\n    }\n  }\n  class CubismMotionEvent {\n    constructor() {\n      this.fireTime = 0;\n      this.value = \"\";\n    }\n  }\n  class CubismMotionData {\n    constructor() {\n      this.duration = 0;\n      this.loop = false;\n      this.curveCount = 0;\n      this.eventCount = 0;\n      this.fps = 0;\n      this.curves = [];\n      this.segments = [];\n      this.points = [];\n      this.events = [];\n    }\n  }\n  class CubismMotionJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getMotionDuration() {\n      return this._json.Meta.Duration;\n    }\n    isMotionLoop() {\n      return this._json.Meta.Loop || false;\n    }\n    getEvaluationOptionFlag(flagType) {\n      if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n        return !!this._json.Meta.AreBeziersRestricted;\n      }\n      return false;\n    }\n    getMotionCurveCount() {\n      return this._json.Meta.CurveCount;\n    }\n    getMotionFps() {\n      return this._json.Meta.Fps;\n    }\n    getMotionTotalSegmentCount() {\n      return this._json.Meta.TotalSegmentCount;\n    }\n    getMotionTotalPointCount() {\n      return this._json.Meta.TotalPointCount;\n    }\n    getMotionFadeInTime() {\n      return this._json.Meta.FadeInTime;\n    }\n    getMotionFadeOutTime() {\n      return this._json.Meta.FadeOutTime;\n    }\n    getMotionCurveTarget(curveIndex) {\n      return this._json.Curves[curveIndex].Target;\n    }\n    getMotionCurveId(curveIndex) {\n      return this._json.Curves[curveIndex].Id;\n    }\n    getMotionCurveFadeInTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeInTime;\n    }\n    getMotionCurveFadeOutTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeOutTime;\n    }\n    getMotionCurveSegmentCount(curveIndex) {\n      return this._json.Curves[curveIndex].Segments.length;\n    }\n    getMotionCurveSegment(curveIndex, segmentIndex) {\n      return this._json.Curves[curveIndex].Segments[segmentIndex];\n    }\n    getEventCount() {\n      return this._json.Meta.UserDataCount || 0;\n    }\n    getTotalEventValueSize() {\n      return this._json.Meta.TotalUserDataSize;\n    }\n    getEventTime(userDataIndex) {\n      return this._json.UserData[userDataIndex].Time;\n    }\n    getEventValue(userDataIndex) {\n      return this._json.UserData[userDataIndex].Value;\n    }\n  }\n  var EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n    EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n    return EvaluationOptionFlag2;\n  })(EvaluationOptionFlag || {});\n  const EffectNameEyeBlink = \"EyeBlink\";\n  const EffectNameLipSync = \"LipSync\";\n  const TargetNameModel = \"Model\";\n  const TargetNameParameter = \"Parameter\";\n  const TargetNamePartOpacity = \"PartOpacity\";\n  const UseOldBeziersCurveMotion = false;\n  function lerpPoints(a, b, t) {\n    const result = new CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n  }\n  function linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n  }\n  function bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n    const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n    const c = 3 * cx1 - 3 * x1;\n    const d = x1 - x;\n    const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function steppedEvaluate(points, time) {\n    return points[0].value;\n  }\n  function inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n  }\n  function evaluateCurve(motionData, index, time) {\n    const curve = motionData.curves[index];\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n      pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n      if (motionData.points[pointPosition].time > time) {\n        target = i;\n        break;\n      }\n    }\n    if (target == -1) {\n      return motionData.points[pointPosition].value;\n    }\n    const segment = motionData.segments[target];\n    return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n  }\n  class CubismMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._eyeBlinkParameterIds = [];\n      this._lipSyncParameterIds = [];\n      this._sourceFrameRate = 30;\n      this._loopDurationSeconds = -1;\n      this._isLoop = false;\n      this._isLoopFadeIn = true;\n      this._lastWeight = 0;\n    }\n    static create(json, onFinishedMotionHandler) {\n      const ret = new CubismMotion();\n      ret.parse(json);\n      ret._sourceFrameRate = ret._motionData.fps;\n      ret._loopDurationSeconds = ret._motionData.duration;\n      ret._onFinishedMotion = onFinishedMotionHandler;\n      return ret;\n    }\n    doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n      if (this._modelCurveIdEyeBlink == null) {\n        this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n      }\n      if (this._modelCurveIdLipSync == null) {\n        this._modelCurveIdLipSync = EffectNameLipSync;\n      }\n      let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n      if (timeOffsetSeconds < 0) {\n        timeOffsetSeconds = 0;\n      }\n      let lipSyncValue = Number.MAX_VALUE;\n      let eyeBlinkValue = Number.MAX_VALUE;\n      const MaxTargetSize = 64;\n      let lipSyncFlags = 0;\n      let eyeBlinkFlags = 0;\n      if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n      }\n      if (this._lipSyncParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n      }\n      const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      let value;\n      let c, parameterIndex;\n      let time = timeOffsetSeconds;\n      if (this._isLoop) {\n        while (time > this._motionData.duration) {\n          time -= this._motionData.duration;\n        }\n      }\n      const curves = this._motionData.curves;\n      for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (curves[c].id == this._modelCurveIdEyeBlink) {\n          eyeBlinkValue = value;\n        } else if (curves[c].id == this._modelCurveIdLipSync) {\n          lipSyncValue = value;\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        const sourceValue = model.getParameterValueByIndex(parameterIndex);\n        value = evaluateCurve(this._motionData, c, time);\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n              value *= eyeBlinkValue;\n              eyeBlinkFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._lipSyncParameterIds[i] == curves[c].id) {\n              value += lipSyncValue;\n              lipSyncFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        let v;\n        if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n          v = sourceValue + (value - sourceValue) * fadeWeight;\n        } else {\n          let fin;\n          let fout;\n          if (curves[c].fadeInTime < 0) {\n            fin = tmpFadeIn;\n          } else {\n            fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n          }\n          if (curves[c].fadeOutTime < 0) {\n            fout = tmpFadeOut;\n          } else {\n            fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n          }\n          const paramWeight = this._weight * fin * fout;\n          v = sourceValue + (value - sourceValue) * paramWeight;\n        }\n        model.setParameterValueByIndex(parameterIndex, v, 1);\n      }\n      {\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n            if (eyeBlinkFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n            if (lipSyncFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._lipSyncParameterIds[i], v);\n          }\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (CubismConfig.setOpacityFromMotion) {\n          model.setPartOpacityById(curves[c].id, value);\n        } else {\n          parameterIndex = model.getParameterIndex(curves[c].id);\n          if (parameterIndex == -1) {\n            continue;\n          }\n          model.setParameterValueByIndex(parameterIndex, value);\n        }\n      }\n      if (timeOffsetSeconds >= this._motionData.duration) {\n        if (this._isLoop) {\n          motionQueueEntry.setStartTime(userTimeSeconds);\n          if (this._isLoopFadeIn) {\n            motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n          }\n        } else {\n          if (this._onFinishedMotion) {\n            this._onFinishedMotion(this);\n          }\n          motionQueueEntry.setIsFinished(true);\n        }\n      }\n      this._lastWeight = fadeWeight;\n    }\n    setIsLoop(loop) {\n      this._isLoop = loop;\n    }\n    isLoop() {\n      return this._isLoop;\n    }\n    setIsLoopFadeIn(loopFadeIn) {\n      this._isLoopFadeIn = loopFadeIn;\n    }\n    isLoopFadeIn() {\n      return this._isLoopFadeIn;\n    }\n    getDuration() {\n      return this._isLoop ? -1 : this._loopDurationSeconds;\n    }\n    getLoopDuration() {\n      return this._loopDurationSeconds;\n    }\n    setParameterFadeInTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeInTime = value;\n          return;\n        }\n      }\n    }\n    setParameterFadeOutTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeOutTime = value;\n          return;\n        }\n      }\n    }\n    getParameterFadeInTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeInTime;\n        }\n      }\n      return -1;\n    }\n    getParameterFadeOutTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeOutTime;\n        }\n      }\n      return -1;\n    }\n    setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n      this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n      this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    release() {\n      this._motionData = void 0;\n    }\n    parse(motionJson) {\n      this._motionData = new CubismMotionData();\n      let json = new CubismMotionJson(motionJson);\n      this._motionData.duration = json.getMotionDuration();\n      this._motionData.loop = json.isMotionLoop();\n      this._motionData.curveCount = json.getMotionCurveCount();\n      this._motionData.fps = json.getMotionFps();\n      this._motionData.eventCount = json.getEventCount();\n      const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n      const fadeInSeconds = json.getMotionFadeInTime();\n      const fadeOutSeconds = json.getMotionFadeOutTime();\n      if (fadeInSeconds !== void 0) {\n        this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n      } else {\n        this._fadeInSeconds = 1;\n      }\n      if (fadeOutSeconds !== void 0) {\n        this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n      } else {\n        this._fadeOutSeconds = 1;\n      }\n      this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n      this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n      this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n      this._motionData.points = [];\n      let totalPointCount = 0;\n      let totalSegmentCount = 0;\n      for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n        const curve = this._motionData.curves[curveCount];\n        switch (json.getMotionCurveTarget(curveCount)) {\n          case TargetNameModel:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            break;\n          case TargetNameParameter:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            break;\n          case TargetNamePartOpacity:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            break;\n          default:\n            CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n        }\n        curve.id = json.getMotionCurveId(curveCount);\n        curve.baseSegmentIndex = totalSegmentCount;\n        const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n        const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n        curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n        curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n        for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n          if (segmentPosition == 0) {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n            totalPointCount += 1;\n            segmentPosition += 2;\n          } else {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n          }\n          const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n          switch (segment) {\n            case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n              } else {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n              }\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n              this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n              totalPointCount += 3;\n              segmentPosition += 7;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          }\n          ++curve.segmentCount;\n          ++totalSegmentCount;\n        }\n        this._motionData.curves.push(curve);\n      }\n      for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n        this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n        this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n      }\n      json.release();\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      this._firedEventValues.length = 0;\n      for (let u = 0; u < this._motionData.eventCount; ++u) {\n        if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n          this._firedEventValues.push(this._motionData.events[u].value);\n        }\n      }\n      return this._firedEventValues;\n    }\n  }\n  class Cubism4MotionManager extends MotionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.groups = { idle: \"Idle\" };\n      this.motionDataType = \"json\";\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.motions) != null ? _a : {};\n      this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n      this.lipSyncIds = settings.getLipSyncParameters() || [];\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n      }\n      this.queueManager.setEventCallback((caller, eventValue, customData) => {\n        this.emit(\"motion:\" + eventValue);\n      });\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    _startMotion(motion, onFinish) {\n      motion.setFinishedMotionHandler(onFinish);\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    createMotion(data, group, definition) {\n      const motion = CubismMotion.create(data);\n      const json = new CubismMotionJson(data);\n      const defaultFadingDuration = (group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration) / 1e3;\n      if (json.getMotionFadeInTime() === void 0) {\n        motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n      }\n      if (json.getMotionFadeOutTime() === void 0) {\n        motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n      }\n      motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.File;\n    }\n    getMotionName(definition) {\n      return definition.File;\n    }\n    getSoundFile(definition) {\n      return definition.Sound;\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager.release();\n      this.queueManager = void 0;\n    }\n  }\n  const ParamAngleX = \"ParamAngleX\";\n  const ParamAngleY = \"ParamAngleY\";\n  const ParamAngleZ = \"ParamAngleZ\";\n  const ParamEyeBallX = \"ParamEyeBallX\";\n  const ParamEyeBallY = \"ParamEyeBallY\";\n  const ParamBodyAngleX = \"ParamBodyAngleX\";\n  const ParamBreath = \"ParamBreath\";\n  class CubismBreath {\n    constructor() {\n      this._breathParameters = [];\n      this._currentTime = 0;\n    }\n    static create() {\n      return new CubismBreath();\n    }\n    setParameters(breathParameters) {\n      this._breathParameters = breathParameters;\n    }\n    getParameters() {\n      return this._breathParameters;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._currentTime += deltaTimeSeconds;\n      const t = this._currentTime * 2 * 3.14159;\n      for (let i = 0; i < this._breathParameters.length; ++i) {\n        const data = this._breathParameters[i];\n        model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n      }\n    }\n  }\n  class BreathParameterData {\n    constructor(parameterId, offset, peak, cycle, weight) {\n      this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n      this.offset = offset == void 0 ? 0 : offset;\n      this.peak = peak == void 0 ? 0 : peak;\n      this.cycle = cycle == void 0 ? 0 : cycle;\n      this.weight = weight == void 0 ? 0 : weight;\n    }\n  }\n  const _CubismEyeBlink = class {\n    static create(modelSetting) {\n      return new _CubismEyeBlink(modelSetting);\n    }\n    setBlinkingInterval(blinkingInterval) {\n      this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    setBlinkingSetting(closing, closed, opening) {\n      this._closingSeconds = closing;\n      this._closedSeconds = closed;\n      this._openingSeconds = opening;\n    }\n    setParameterIds(parameterIds) {\n      this._parameterIds = parameterIds;\n    }\n    getParameterIds() {\n      return this._parameterIds;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._userTimeSeconds += deltaTimeSeconds;\n      let parameterValue;\n      let t = 0;\n      switch (this._blinkingState) {\n        case EyeState.EyeState_Closing:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Closed;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1 - t;\n          break;\n        case EyeState.EyeState_Closed:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n          if (t >= 1) {\n            this._blinkingState = EyeState.EyeState_Opening;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 0;\n          break;\n        case EyeState.EyeState_Opening:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Interval;\n            this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          }\n          parameterValue = t;\n          break;\n        case EyeState.EyeState_Interval:\n          if (this._nextBlinkingTime < this._userTimeSeconds) {\n            this._blinkingState = EyeState.EyeState_Closing;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1;\n          break;\n        case EyeState.EyeState_First:\n        default:\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          parameterValue = 1;\n          break;\n      }\n      if (!_CubismEyeBlink.CloseIfZero) {\n        parameterValue = -parameterValue;\n      }\n      for (let i = 0; i < this._parameterIds.length; ++i) {\n        model.setParameterValueById(this._parameterIds[i], parameterValue);\n      }\n    }\n    constructor(modelSetting) {\n      var _a, _b;\n      this._blinkingState = EyeState.EyeState_First;\n      this._nextBlinkingTime = 0;\n      this._stateStartTimeSeconds = 0;\n      this._blinkingIntervalSeconds = 4;\n      this._closingSeconds = 0.1;\n      this._closedSeconds = 0.05;\n      this._openingSeconds = 0.15;\n      this._userTimeSeconds = 0;\n      this._parameterIds = [];\n      if (modelSetting == null) {\n        return;\n      }\n      this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n    }\n    determinNextBlinkingTiming() {\n      const r = Math.random();\n      return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n    }\n  };\n  let CubismEyeBlink = _CubismEyeBlink;\n  CubismEyeBlink.CloseIfZero = true;\n  var EyeState = /* @__PURE__ */ ((EyeState2) => {\n    EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n    return EyeState2;\n  })(EyeState || {});\n  class csmRect {\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n      this.x = x;\n      this.y = y;\n      this.width = w;\n      this.height = h;\n    }\n    getCenterX() {\n      return this.x + 0.5 * this.width;\n    }\n    getCenterY() {\n      return this.y + 0.5 * this.height;\n    }\n    getRight() {\n      return this.x + this.width;\n    }\n    getBottom() {\n      return this.y + this.height;\n    }\n    setRect(r) {\n      this.x = r.x;\n      this.y = r.y;\n      this.width = r.width;\n      this.height = r.height;\n    }\n    expand(w, h) {\n      this.x -= w;\n      this.y -= h;\n      this.width += w * 2;\n      this.height += h * 2;\n    }\n  }\n  const ColorChannelCount = 4;\n  const shaderCount = 10;\n  let s_instance;\n  let s_viewport;\n  let s_fbo;\n  class CubismClippingManager_WebGL {\n    getChannelFlagAsColor(channelNo) {\n      return this._channelColors[channelNo];\n    }\n    getMaskRenderTexture() {\n      let ret = 0;\n      if (this._maskTexture && this._maskTexture.texture != 0) {\n        this._maskTexture.frameNo = this._currentFrameNo;\n        ret = this._maskTexture.texture;\n      }\n      if (ret == 0) {\n        const size = this._clippingMaskBufferSize;\n        this._colorBuffer = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n        ret = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n      }\n      return ret;\n    }\n    setGL(gl) {\n      this.gl = gl;\n    }\n    calcClippedDrawTotalBounds(model, clippingContext) {\n      let clippedDrawTotalMinX = Number.MAX_VALUE;\n      let clippedDrawTotalMinY = Number.MAX_VALUE;\n      let clippedDrawTotalMaxX = Number.MIN_VALUE;\n      let clippedDrawTotalMaxY = Number.MIN_VALUE;\n      const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n      for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n        const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n        const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n        const drawableVertexes = model.getDrawableVertices(drawableIndex);\n        let minX = Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxX = Number.MIN_VALUE;\n        let maxY = Number.MIN_VALUE;\n        const loop = drawableVertexCount * Constant.vertexStep;\n        for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n          const x = drawableVertexes[pi];\n          const y = drawableVertexes[pi + 1];\n          if (x < minX) {\n            minX = x;\n          }\n          if (x > maxX) {\n            maxX = x;\n          }\n          if (y < minY) {\n            minY = y;\n          }\n          if (y > maxY) {\n            maxY = y;\n          }\n        }\n        if (minX == Number.MAX_VALUE) {\n          continue;\n        }\n        if (minX < clippedDrawTotalMinX) {\n          clippedDrawTotalMinX = minX;\n        }\n        if (minY < clippedDrawTotalMinY) {\n          clippedDrawTotalMinY = minY;\n        }\n        if (maxX > clippedDrawTotalMaxX) {\n          clippedDrawTotalMaxX = maxX;\n        }\n        if (maxY > clippedDrawTotalMaxY) {\n          clippedDrawTotalMaxY = maxY;\n        }\n        if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n          clippingContext._allClippedDrawRect.x = 0;\n          clippingContext._allClippedDrawRect.y = 0;\n          clippingContext._allClippedDrawRect.width = 0;\n          clippingContext._allClippedDrawRect.height = 0;\n          clippingContext._isUsing = false;\n        } else {\n          clippingContext._isUsing = true;\n          const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n          const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n          clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.width = w;\n          clippingContext._allClippedDrawRect.height = h;\n        }\n      }\n    }\n    constructor() {\n      this._maskRenderTexture = null;\n      this._colorBuffer = null;\n      this._currentFrameNo = 0;\n      this._clippingMaskBufferSize = 256;\n      this._clippingContextListForMask = [];\n      this._clippingContextListForDraw = [];\n      this._channelColors = [];\n      this._tmpBoundsOnModel = new csmRect();\n      this._tmpMatrix = new CubismMatrix44();\n      this._tmpMatrixForMask = new CubismMatrix44();\n      this._tmpMatrixForDraw = new CubismMatrix44();\n      let tmp = new CubismTextureColor();\n      tmp.R = 1;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 1;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 1;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 1;\n      this._channelColors.push(tmp);\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        if (this._clippingContextListForMask[i]) {\n          (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n        }\n      }\n      self2._clippingContextListForMask = void 0;\n      self2._clippingContextListForDraw = void 0;\n      if (this._maskTexture) {\n        (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n        self2._maskTexture = void 0;\n      }\n      self2._channelColors = void 0;\n      (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n      this._colorBuffer = null;\n    }\n    initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < drawableCount; i++) {\n        if (drawableMaskCounts[i] <= 0) {\n          this._clippingContextListForDraw.push(null);\n          continue;\n        }\n        let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n        if (clippingContext == null) {\n          clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n          this._clippingContextListForMask.push(clippingContext);\n        }\n        clippingContext.addClippedDrawable(i);\n        this._clippingContextListForDraw.push(clippingContext);\n      }\n    }\n    setupClippingContext(model, renderer) {\n      this._currentFrameNo++;\n      let usingClipCount = 0;\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const cc = this._clippingContextListForMask[clipIndex];\n        this.calcClippedDrawTotalBounds(model, cc);\n        if (cc._isUsing) {\n          usingClipCount++;\n        }\n      }\n      if (usingClipCount > 0) {\n        this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n        this._maskRenderTexture = this.getMaskRenderTexture();\n        renderer.getMvpMatrix();\n        renderer.preDraw();\n        this.setupLayoutBounds(usingClipCount);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n        this.gl.clearColor(1, 1, 1, 1);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n          const clipContext = this._clippingContextListForMask[clipIndex];\n          const allClipedDrawRect = clipContext._allClippedDrawRect;\n          const layoutBoundsOnTex01 = clipContext._layoutBounds;\n          const MARGIN = 0.05;\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n          this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n          const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n          const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(-1, -1);\n              this._tmpMatrix.scaleRelative(2, 2);\n            }\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n          }\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n          }\n          clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n          clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n          const clipDrawCount = clipContext._clippingIdCount;\n          for (let i = 0; i < clipDrawCount; i++) {\n            const clipDrawIndex = clipContext._clippingIdList[i];\n            if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n              continue;\n            }\n            renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n            renderer.setClippingContextBufferForMask(clipContext);\n            renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n          }\n        }\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        renderer.setClippingContextBufferForMask(null);\n        this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n      }\n    }\n    findSameClip(drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        const clippingContext = this._clippingContextListForMask[i];\n        const count = clippingContext._clippingIdCount;\n        if (count != drawableMaskCounts) {\n          continue;\n        }\n        let sameCount = 0;\n        for (let j = 0; j < count; j++) {\n          const clipId = clippingContext._clippingIdList[j];\n          for (let k = 0; k < count; k++) {\n            if (drawableMasks[k] == clipId) {\n              sameCount++;\n              break;\n            }\n          }\n        }\n        if (sameCount == count) {\n          return clippingContext;\n        }\n      }\n      return null;\n    }\n    setupLayoutBounds(usingClipCount) {\n      let div = usingClipCount / ColorChannelCount;\n      let mod = usingClipCount % ColorChannelCount;\n      div = ~~div;\n      mod = ~~mod;\n      let curClipIndex = 0;\n      for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n        const layoutCount = div + (channelNo < mod ? 1 : 0);\n        if (layoutCount == 0)\n          ;\n        else if (layoutCount == 1) {\n          const clipContext = this._clippingContextListForMask[curClipIndex++];\n          clipContext._layoutChannelNo = channelNo;\n          clipContext._layoutBounds.x = 0;\n          clipContext._layoutBounds.y = 0;\n          clipContext._layoutBounds.width = 1;\n          clipContext._layoutBounds.height = 1;\n        } else if (layoutCount == 2) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            xpos = ~~xpos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = 0;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 1;\n          }\n        } else if (layoutCount <= 4) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            let ypos = i / 2;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = ypos * 0.5;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 0.5;\n          }\n        } else if (layoutCount <= 9) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 3;\n            let ypos = i / 3;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 3;\n            cc._layoutBounds.y = ypos / 3;\n            cc._layoutBounds.width = 1 / 3;\n            cc._layoutBounds.height = 1 / 3;\n          }\n        } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 4;\n            let ypos = i / 4;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 4;\n            cc._layoutBounds.y = ypos / 4;\n            cc._layoutBounds.width = 1 / 4;\n            cc._layoutBounds.height = 1 / 4;\n          }\n        } else {\n          CubismLogError(\"not supported mask count : {0}\", layoutCount);\n        }\n      }\n    }\n    getColorBuffer() {\n      return this._colorBuffer;\n    }\n    getClippingContextListForDraw() {\n      return this._clippingContextListForDraw;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingMaskBufferSize = size;\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingMaskBufferSize;\n    }\n  }\n  class CubismRenderTextureResource {\n    constructor(frameNo, texture) {\n      this.frameNo = frameNo;\n      this.texture = texture;\n    }\n  }\n  class CubismClippingContext {\n    constructor(manager, clippingDrawableIndices, clipCount) {\n      this._isUsing = false;\n      this._owner = manager;\n      this._clippingIdList = clippingDrawableIndices;\n      this._clippingIdCount = clipCount;\n      this._allClippedDrawRect = new csmRect();\n      this._layoutBounds = new csmRect();\n      this._clippedDrawableIndexList = [];\n      this._matrixForMask = new CubismMatrix44();\n      this._matrixForDraw = new CubismMatrix44();\n    }\n    release() {\n      const self2 = this;\n      self2._layoutBounds = void 0;\n      self2._allClippedDrawRect = void 0;\n      self2._clippedDrawableIndexList = void 0;\n    }\n    addClippedDrawable(drawableIndex) {\n      this._clippedDrawableIndexList.push(drawableIndex);\n    }\n    getClippingManager() {\n      return this._owner;\n    }\n    setGl(gl) {\n      this._owner.setGL(gl);\n    }\n  }\n  class CubismShader_WebGL {\n    static getInstance() {\n      if (s_instance == null) {\n        s_instance = new CubismShader_WebGL();\n        return s_instance;\n      }\n      return s_instance;\n    }\n    static deleteInstance() {\n      if (s_instance) {\n        s_instance.release();\n        s_instance = void 0;\n      }\n    }\n    constructor() {\n      this._shaderSets = [];\n    }\n    release() {\n      this.releaseShaderProgram();\n    }\n    setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n      if (!isPremultipliedAlpha) {\n        CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n      }\n      if (this._shaderSets.length == 0) {\n        this.generateShaders();\n      }\n      let SRC_COLOR;\n      let DST_COLOR;\n      let SRC_ALPHA;\n      let DST_ALPHA;\n      const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n      if (clippingContextBufferForMask != null) {\n        const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n        this.gl.useProgram(shaderSet.shaderProgram);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        const channelNo = clippingContextBufferForMask._layoutChannelNo;\n        const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n        const rect = clippingContextBufferForMask._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n        SRC_COLOR = this.gl.ZERO;\n        DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n        SRC_ALPHA = this.gl.ZERO;\n        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n      } else {\n        const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n        const masked = clippingContextBufferForDraw != null;\n        const offset = masked ? invertedMask ? 2 : 1 : 0;\n        let shaderSet;\n        switch (colorBlendMode) {\n          case CubismBlendMode.CubismBlendMode_Normal:\n          default:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ONE;\n            DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n            break;\n          case CubismBlendMode.CubismBlendMode_Additive:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n          case CubismBlendMode.CubismBlendMode_Multiplicative:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.DST_COLOR;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (clippingContextBufferForDraw != null) {\n          this.gl.activeTexture(this.gl.TEXTURE1);\n          const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n          this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n          this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n          this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n          const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n          const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n          this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        }\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n      }\n      if (bufferData.index == null) {\n        bufferData.index = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n    }\n    releaseShaderProgram() {\n      for (let i = 0; i < this._shaderSets.length; i++) {\n        this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n        this._shaderSets[i].shaderProgram = 0;\n      }\n      this._shaderSets = [];\n    }\n    generateShaders() {\n      for (let i = 0; i < shaderCount; i++) {\n        this._shaderSets.push({});\n      }\n      this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n      this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n      this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n      this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n      this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n      this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n      this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n      this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n      this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n      this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n      this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n      this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n      this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n      this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n      this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n      this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n      this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n      this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n      this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n      this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n      this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n      this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n      this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n      this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n      this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n      this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n      this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n      this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n      this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n      this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n      this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n      this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n      this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n      this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n      this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n      this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n      this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n      this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n      this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n      this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n      this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n      this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n      this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n      this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n      this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n      this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n      this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n      this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n      this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n      this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n      this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n      this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n      this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n      this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n      this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n      this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n      this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n      this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n      this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n    }\n    loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n      let shaderProgram = this.gl.createProgram();\n      let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n      if (!vertShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n      if (!fragShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      this.gl.attachShader(shaderProgram, vertShader);\n      this.gl.attachShader(shaderProgram, fragShader);\n      this.gl.linkProgram(shaderProgram);\n      const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n      if (!linkStatus) {\n        CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        if (shaderProgram) {\n          this.gl.deleteProgram(shaderProgram);\n        }\n        return 0;\n      }\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      return shaderProgram;\n    }\n    compileShaderSource(shaderType, shaderSource) {\n      const source = shaderSource;\n      const shader = this.gl.createShader(shaderType);\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!shader) {\n        const log = this.gl.getShaderInfoLog(shader);\n        CubismLogError(\"Shader compile log: {0} \", log);\n      }\n      const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n      if (!status) {\n        this.gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    }\n    setGl(gl) {\n      this.gl = gl;\n    }\n  }\n  var ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n    ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n    return ShaderNames2;\n  })(ShaderNames || {});\n  const vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\n  const vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\n  const fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\n  const fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\n  class CubismRenderer_WebGL extends CubismRenderer {\n    constructor() {\n      super();\n      this._clippingContextBufferForMask = null;\n      this._clippingContextBufferForDraw = null;\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this.firstDraw = true;\n      this._textures = {};\n      this._sortedDrawableIndexList = [];\n      this._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n    }\n    initialize(model) {\n      if (model.isUsingMasking()) {\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n      }\n      for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n        this._sortedDrawableIndexList[i] = 0;\n      }\n      super.initialize(model);\n    }\n    bindTexture(modelTextureNo, glTexture) {\n      this._textures[modelTextureNo] = glTexture;\n    }\n    getBindedTextures() {\n      return this._textures;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingManager.release();\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.setClippingMaskBufferSize(size);\n      this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingManager.getClippingMaskBufferSize();\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      this._clippingManager.release();\n      self2._clippingManager = void 0;\n      (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n      this._bufferData.vertex = null;\n      (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n      this._bufferData.uv = null;\n      (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n      this._bufferData.index = null;\n      self2._bufferData = void 0;\n      self2._textures = void 0;\n    }\n    doDrawModel() {\n      this.preDraw();\n      if (this._clippingManager != null) {\n        this._clippingManager.setupClippingContext(this.getModel(), this);\n      }\n      const drawableCount = this.getModel().getDrawableCount();\n      const renderOrder = this.getModel().getDrawableRenderOrders();\n      for (let i = 0; i < drawableCount; ++i) {\n        const order = renderOrder[i];\n        this._sortedDrawableIndexList[order] = i;\n      }\n      for (let i = 0; i < drawableCount; ++i) {\n        const drawableIndex = this._sortedDrawableIndexList[i];\n        if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n          continue;\n        }\n        this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n        this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n        this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n      }\n    }\n    drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n      if (this.isCulling()) {\n        this.gl.enable(this.gl.CULL_FACE);\n      } else {\n        this.gl.disable(this.gl.CULL_FACE);\n      }\n      this.gl.frontFace(this.gl.CCW);\n      const modelColorRGBA = this.getModelColor();\n      if (this.getClippingContextBufferForMask() == null) {\n        modelColorRGBA.A *= opacity;\n        if (this.isPremultipliedAlpha()) {\n          modelColorRGBA.R *= modelColorRGBA.A;\n          modelColorRGBA.G *= modelColorRGBA.A;\n          modelColorRGBA.B *= modelColorRGBA.A;\n        }\n      }\n      let drawtexture = null;\n      if (this._textures[textureNo] != null) {\n        drawtexture = this._textures[textureNo];\n      }\n      CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n      this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n      this.gl.useProgram(null);\n      this.setClippingContextBufferForDraw(null);\n      this.setClippingContextBufferForMask(null);\n    }\n    static doStaticRelease() {\n      CubismShader_WebGL.deleteInstance();\n    }\n    setRenderState(fbo, viewport) {\n      s_fbo = fbo;\n      s_viewport = viewport;\n    }\n    preDraw() {\n      if (this.firstDraw) {\n        this.firstDraw = false;\n        this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n      }\n      this.gl.disable(this.gl.SCISSOR_TEST);\n      this.gl.disable(this.gl.STENCIL_TEST);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.frontFace(this.gl.CW);\n      this.gl.enable(this.gl.BLEND);\n      this.gl.colorMask(true, true, true, true);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    setClippingContextBufferForMask(clip) {\n      this._clippingContextBufferForMask = clip;\n    }\n    getClippingContextBufferForMask() {\n      return this._clippingContextBufferForMask;\n    }\n    setClippingContextBufferForDraw(clip) {\n      this._clippingContextBufferForDraw = clip;\n    }\n    getClippingContextBufferForDraw() {\n      return this._clippingContextBufferForDraw;\n    }\n    startUp(gl) {\n      this.gl = gl;\n      this._clippingManager.setGL(gl);\n      CubismShader_WebGL.getInstance().setGl(gl);\n    }\n  }\n  CubismRenderer.staticRelease = () => {\n    CubismRenderer_WebGL.doStaticRelease();\n  };\n  const tempMatrix = new CubismMatrix44();\n  class Cubism4InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.lipSync = true;\n      this.breath = CubismBreath.create();\n      this.renderer = new CubismRenderer_WebGL();\n      this.idParamAngleX = ParamAngleX;\n      this.idParamAngleY = ParamAngleY;\n      this.idParamAngleZ = ParamAngleZ;\n      this.idParamEyeBallX = ParamEyeBallX;\n      this.idParamEyeBallY = ParamEyeBallY;\n      this.idParamBodyAngleX = ParamBodyAngleX;\n      this.idParamBreath = ParamBreath;\n      this.pixelsPerUnit = 1;\n      this.centeringTransform = new math.Matrix();\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism4MotionManager(settings, options);\n      this.init();\n    }\n    init() {\n      var _a;\n      super.init();\n      if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n        this.eyeBlink = CubismEyeBlink.create(this.settings);\n      }\n      this.breath.setParameters([\n        new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n        new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n        new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n        new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n        new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n      ]);\n      this.renderer.initialize(this.coreModel);\n      this.renderer.setIsPremultipliedAlpha(true);\n    }\n    getSize() {\n      return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    setupLayout() {\n      super.setupLayout();\n      this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n      this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n    }\n    updateWebGLContext(gl, glContextID) {\n      this.renderer.firstDraw = true;\n      this.renderer._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n      this.renderer.startUp(gl);\n      this.renderer._clippingManager._currentFrameNo = glContextID;\n      this.renderer._clippingManager._maskTexture = void 0;\n      CubismShader_WebGL.getInstance()._shaderSets = [];\n    }\n    bindTexture(index, texture) {\n      this.renderer.bindTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a, _b;\n      return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.Id,\n        name: hitArea.Name,\n        index: this.coreModel.getDrawableIndex(hitArea.Id)\n      }))) != null ? _b : [];\n    }\n    getDrawableIDs() {\n      return this.coreModel.getDrawableIds();\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawableIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n      for (let i = 0; i < arr.length; i += 2) {\n        arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n        arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n      }\n      return arr;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      dt /= 1e3;\n      now /= 1e3;\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParameters();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt * 1e3, now * 1e3);\n      (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n      (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParameters();\n    }\n    updateFocus() {\n      this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n      this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n      this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      var _a;\n      (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n    }\n    draw(gl) {\n      const matrix = this.drawingMatrix;\n      const array = tempMatrix.getArray();\n      array[0] = matrix.a;\n      array[1] = matrix.b;\n      array[4] = -matrix.c;\n      array[5] = -matrix.d;\n      array[12] = matrix.tx;\n      array[13] = matrix.ty;\n      this.renderer.setMvpMatrix(tempMatrix);\n      this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n      this.renderer.drawModel();\n    }\n    destroy() {\n      super.destroy();\n      this.renderer.release();\n      this.coreModel.release();\n      this.renderer = void 0;\n      this.coreModel = void 0;\n    }\n  }\n  let startupPromise;\n  let startupRetries = 20;\n  function cubism4Ready() {\n    if (CubismFramework.isStarted()) {\n      return Promise.resolve();\n    }\n    startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n      function startUpWithRetry() {\n        try {\n          startUpCubism4();\n          resolve();\n        } catch (e) {\n          startupRetries--;\n          if (startupRetries < 0) {\n            const err = new Error(\"Failed to start up Cubism 4 framework.\");\n            err.cause = e;\n            reject(err);\n            return;\n          }\n          logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n          setTimeout(startUpWithRetry, 10);\n        }\n      }\n      startUpWithRetry();\n    });\n    return startupPromise;\n  }\n  function startUpCubism4(options) {\n    options = Object.assign({\n      logFunction: console.log,\n      loggingLevel: LogLevel.LogLevel_Verbose\n    }, options);\n    CubismFramework.startUp(options);\n    CubismFramework.initialize();\n  }\n  const Epsilon = 1e-3;\n  const DefaultFadeInSeconds = 0.5;\n  class CubismPose {\n    static create(pose3json) {\n      const ret = new CubismPose();\n      if (typeof pose3json.FadeInTime === \"number\") {\n        ret._fadeTimeSeconds = pose3json.FadeInTime;\n        if (ret._fadeTimeSeconds <= 0) {\n          ret._fadeTimeSeconds = DefaultFadeInSeconds;\n        }\n      }\n      const poseListInfo = pose3json.Groups;\n      const poseCount = poseListInfo.length;\n      for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n        const idListInfo = poseListInfo[poseIndex];\n        const idCount = idListInfo.length;\n        let groupCount = 0;\n        for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n          const partInfo = idListInfo[groupIndex];\n          const partData = new PartData();\n          partData.partId = partInfo.Id;\n          const linkListInfo = partInfo.Link;\n          if (linkListInfo) {\n            const linkCount = linkListInfo.length;\n            for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n              const linkPart = new PartData();\n              linkPart.partId = linkListInfo[linkIndex];\n              partData.link.push(linkPart);\n            }\n          }\n          ret._partGroups.push(partData);\n          ++groupCount;\n        }\n        ret._partGroupCounts.push(groupCount);\n      }\n      return ret;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      if (model != this._lastModel) {\n        this.reset(model);\n      }\n      this._lastModel = model;\n      if (deltaTimeSeconds < 0) {\n        deltaTimeSeconds = 0;\n      }\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; i++) {\n        const partGroupCount = this._partGroupCounts[i];\n        this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n        beginIndex += partGroupCount;\n      }\n      this.copyPartOpacities(model);\n    }\n    reset(model) {\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; ++i) {\n        const groupCount = this._partGroupCounts[i];\n        for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n          this._partGroups[j].initialize(model);\n          const partsIndex = this._partGroups[j].partIndex;\n          const paramIndex = this._partGroups[j].parameterIndex;\n          if (partsIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n          model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n          for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n            this._partGroups[j].link[k].initialize(model);\n          }\n        }\n        beginIndex += groupCount;\n      }\n    }\n    copyPartOpacities(model) {\n      for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n        const partData = this._partGroups[groupIndex];\n        if (partData.link.length == 0) {\n          continue;\n        }\n        const partIndex = this._partGroups[groupIndex].partIndex;\n        const opacity = model.getPartOpacityByIndex(partIndex);\n        for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n          const linkPart = partData.link[linkIndex];\n          const linkPartIndex = linkPart.partIndex;\n          if (linkPartIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(linkPartIndex, opacity);\n        }\n      }\n    }\n    doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n      let visiblePartIndex = -1;\n      let newOpacity = 1;\n      const phi = 0.5;\n      const backOpacityThreshold = 0.15;\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partIndex = this._partGroups[i].partIndex;\n        const paramIndex = this._partGroups[i].parameterIndex;\n        if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n          if (visiblePartIndex >= 0) {\n            break;\n          }\n          visiblePartIndex = i;\n          newOpacity = model.getPartOpacityByIndex(partIndex);\n          newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n          if (newOpacity > 1) {\n            newOpacity = 1;\n          }\n        }\n      }\n      if (visiblePartIndex < 0) {\n        visiblePartIndex = 0;\n        newOpacity = 1;\n      }\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partsIndex = this._partGroups[i].partIndex;\n        if (visiblePartIndex == i) {\n          model.setPartOpacityByIndex(partsIndex, newOpacity);\n        } else {\n          let opacity = model.getPartOpacityByIndex(partsIndex);\n          let a1;\n          if (newOpacity < phi) {\n            a1 = newOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - newOpacity) * phi / (1 - phi);\n          }\n          const backOpacity = (1 - a1) * (1 - newOpacity);\n          if (backOpacity > backOpacityThreshold) {\n            a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartOpacityByIndex(partsIndex, opacity);\n        }\n      }\n    }\n    constructor() {\n      this._fadeTimeSeconds = DefaultFadeInSeconds;\n      this._lastModel = void 0;\n      this._partGroups = [];\n      this._partGroupCounts = [];\n    }\n  }\n  class PartData {\n    constructor(v) {\n      this.parameterIndex = 0;\n      this.partIndex = 0;\n      this.partId = \"\";\n      this.link = [];\n      if (v != void 0) {\n        this.assignment(v);\n      }\n    }\n    assignment(v) {\n      this.partId = v.partId;\n      this.link = v.link.map((link) => link.clone());\n      return this;\n    }\n    initialize(model) {\n      this.parameterIndex = model.getParameterIndex(this.partId);\n      this.partIndex = model.getPartIndex(this.partId);\n      model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    clone() {\n      const clonePartData = new PartData();\n      clonePartData.partId = this.partId;\n      clonePartData.parameterIndex = this.parameterIndex;\n      clonePartData.partIndex = this.partIndex;\n      clonePartData.link = this.link.map((link) => link.clone());\n      return clonePartData;\n    }\n  }\n  class CubismModel {\n    update() {\n      this._model.update();\n      this._model.drawables.resetDynamicFlags();\n    }\n    getCanvasWidth() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n    }\n    getCanvasHeight() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n    }\n    saveParameters() {\n      const parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      for (let i = 0; i < parameterCount; ++i) {\n        if (i < savedParameterCount) {\n          this._savedParameters[i] = this._parameterValues[i];\n        } else {\n          this._savedParameters.push(this._parameterValues[i]);\n        }\n      }\n    }\n    getModel() {\n      return this._model;\n    }\n    getPartIndex(partId) {\n      let partIndex;\n      const partCount = this._model.parts.count;\n      for (partIndex = 0; partIndex < partCount; ++partIndex) {\n        if (partId == this._partIds[partIndex]) {\n          return partIndex;\n        }\n      }\n      if (partId in this._notExistPartId) {\n        return this._notExistPartId[partId];\n      }\n      partIndex = partCount + this._notExistPartId.length;\n      this._notExistPartId[partId] = partIndex;\n      this._notExistPartOpacities[partIndex] = 0;\n      return partIndex;\n    }\n    getPartCount() {\n      return this._model.parts.count;\n    }\n    setPartOpacityByIndex(partIndex, opacity) {\n      if (partIndex in this._notExistPartOpacities) {\n        this._notExistPartOpacities[partIndex] = opacity;\n        return;\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      this._partOpacities[partIndex] = opacity;\n    }\n    setPartOpacityById(partId, opacity) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return;\n      }\n      this.setPartOpacityByIndex(index, opacity);\n    }\n    getPartOpacityByIndex(partIndex) {\n      if (partIndex in this._notExistPartOpacities) {\n        return this._notExistPartOpacities[partIndex];\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      return this._partOpacities[partIndex];\n    }\n    getPartOpacityById(partId) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return 0;\n      }\n      return this.getPartOpacityByIndex(index);\n    }\n    getParameterIndex(parameterId) {\n      let parameterIndex;\n      const idCount = this._model.parameters.count;\n      for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n        if (parameterId != this._parameterIds[parameterIndex]) {\n          continue;\n        }\n        return parameterIndex;\n      }\n      if (parameterId in this._notExistParameterId) {\n        return this._notExistParameterId[parameterId];\n      }\n      parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n      this._notExistParameterId[parameterId] = parameterIndex;\n      this._notExistParameterValues[parameterIndex] = 0;\n      return parameterIndex;\n    }\n    getParameterCount() {\n      return this._model.parameters.count;\n    }\n    getParameterMaximumValue(parameterIndex) {\n      return this._model.parameters.maximumValues[parameterIndex];\n    }\n    getParameterMinimumValue(parameterIndex) {\n      return this._model.parameters.minimumValues[parameterIndex];\n    }\n    getParameterDefaultValue(parameterIndex) {\n      return this._model.parameters.defaultValues[parameterIndex];\n    }\n    getParameterValueByIndex(parameterIndex) {\n      if (parameterIndex in this._notExistParameterValues) {\n        return this._notExistParameterValues[parameterIndex];\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      return this._parameterValues[parameterIndex];\n    }\n    getParameterValueById(parameterId) {\n      const parameterIndex = this.getParameterIndex(parameterId);\n      return this.getParameterValueByIndex(parameterIndex);\n    }\n    setParameterValueByIndex(parameterIndex, value, weight = 1) {\n      if (parameterIndex in this._notExistParameterValues) {\n        this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n        return;\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      if (this._model.parameters.maximumValues[parameterIndex] < value) {\n        value = this._model.parameters.maximumValues[parameterIndex];\n      }\n      if (this._model.parameters.minimumValues[parameterIndex] > value) {\n        value = this._model.parameters.minimumValues[parameterIndex];\n      }\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n    setParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.setParameterValueByIndex(index, value, weight);\n    }\n    addParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    addParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.addParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n    }\n    getDrawableIds() {\n      return this._drawableIds.slice();\n    }\n    getDrawableIndex(drawableId) {\n      const drawableCount = this._model.drawables.count;\n      for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n        if (this._drawableIds[drawableIndex] == drawableId) {\n          return drawableIndex;\n        }\n      }\n      return -1;\n    }\n    getDrawableCount() {\n      return this._model.drawables.count;\n    }\n    getDrawableId(drawableIndex) {\n      return this._model.drawables.ids[drawableIndex];\n    }\n    getDrawableRenderOrders() {\n      return this._model.drawables.renderOrders;\n    }\n    getDrawableTextureIndices(drawableIndex) {\n      return this._model.drawables.textureIndices[drawableIndex];\n    }\n    getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableVertexIndexCount(drawableIndex) {\n      return this._model.drawables.indexCounts[drawableIndex];\n    }\n    getDrawableVertexCount(drawableIndex) {\n      return this._model.drawables.vertexCounts[drawableIndex];\n    }\n    getDrawableVertices(drawableIndex) {\n      return this.getDrawableVertexPositions(drawableIndex);\n    }\n    getDrawableVertexIndices(drawableIndex) {\n      return this._model.drawables.indices[drawableIndex];\n    }\n    getDrawableVertexPositions(drawableIndex) {\n      return this._model.drawables.vertexPositions[drawableIndex];\n    }\n    getDrawableVertexUvs(drawableIndex) {\n      return this._model.drawables.vertexUvs[drawableIndex];\n    }\n    getDrawableOpacity(drawableIndex) {\n      return this._model.drawables.opacities[drawableIndex];\n    }\n    getDrawableCulling(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    getDrawableBlendMode(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n    }\n    getDrawableInvertedMaskBit(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    getDrawableMasks() {\n      return this._model.drawables.masks;\n    }\n    getDrawableMaskCounts() {\n      return this._model.drawables.maskCounts;\n    }\n    isUsingMasking() {\n      for (let d = 0; d < this._model.drawables.count; ++d) {\n        if (this._model.drawables.maskCounts[d] <= 0) {\n          continue;\n        }\n        return true;\n      }\n      return false;\n    }\n    getDrawableDynamicFlagIsVisible(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    loadParameters() {\n      let parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      if (parameterCount > savedParameterCount) {\n        parameterCount = savedParameterCount;\n      }\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterValues[i] = this._savedParameters[i];\n      }\n    }\n    initialize() {\n      this._parameterValues = this._model.parameters.values;\n      this._partOpacities = this._model.parts.opacities;\n      this._parameterMaximumValues = this._model.parameters.maximumValues;\n      this._parameterMinimumValues = this._model.parameters.minimumValues;\n      {\n        const parameterIds = this._model.parameters.ids;\n        const parameterCount = this._model.parameters.count;\n        for (let i = 0; i < parameterCount; ++i) {\n          this._parameterIds.push(parameterIds[i]);\n        }\n      }\n      {\n        const partIds = this._model.parts.ids;\n        const partCount = this._model.parts.count;\n        for (let i = 0; i < partCount; ++i) {\n          this._partIds.push(partIds[i]);\n        }\n      }\n      {\n        const drawableIds = this._model.drawables.ids;\n        const drawableCount = this._model.drawables.count;\n        for (let i = 0; i < drawableCount; ++i) {\n          this._drawableIds.push(drawableIds[i]);\n        }\n      }\n    }\n    constructor(model) {\n      this._model = model;\n      this._savedParameters = [];\n      this._parameterIds = [];\n      this._drawableIds = [];\n      this._partIds = [];\n      this._notExistPartId = {};\n      this._notExistParameterId = {};\n      this._notExistParameterValues = {};\n      this._notExistPartOpacities = {};\n      this.initialize();\n    }\n    release() {\n      this._model.release();\n      this._model = void 0;\n    }\n  }\n  class CubismMoc {\n    static create(mocBytes) {\n      const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n      if (moc) {\n        return new CubismMoc(moc);\n      }\n      throw new Error(\"Unknown error\");\n    }\n    createModel() {\n      let cubismModel;\n      const model = Live2DCubismCore.Model.fromMoc(this._moc);\n      if (model) {\n        cubismModel = new CubismModel(model);\n        ++this._modelCount;\n        return cubismModel;\n      }\n      throw new Error(\"Unknown error\");\n    }\n    deleteModel(model) {\n      if (model != null) {\n        --this._modelCount;\n      }\n    }\n    constructor(moc) {\n      this._moc = moc;\n      this._modelCount = 0;\n    }\n    release() {\n      this._moc._release();\n      this._moc = void 0;\n    }\n  }\n  var CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n    CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n    return CubismPhysicsTargetType2;\n  })(CubismPhysicsTargetType || {});\n  var CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n    return CubismPhysicsSource2;\n  })(CubismPhysicsSource || {});\n  class CubismPhysicsParticle {\n    constructor() {\n      this.initialPosition = new CubismVector2(0, 0);\n      this.position = new CubismVector2(0, 0);\n      this.lastPosition = new CubismVector2(0, 0);\n      this.lastGravity = new CubismVector2(0, 0);\n      this.force = new CubismVector2(0, 0);\n      this.velocity = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsSubRig {\n    constructor() {\n      this.normalizationPosition = {};\n      this.normalizationAngle = {};\n    }\n  }\n  class CubismPhysicsInput {\n    constructor() {\n      this.source = {};\n    }\n  }\n  class CubismPhysicsOutput {\n    constructor() {\n      this.destination = {};\n      this.translationScale = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsRig {\n    constructor() {\n      this.settings = [];\n      this.inputs = [];\n      this.outputs = [];\n      this.particles = [];\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getGravity() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n      ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n      return ret;\n    }\n    getWind() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Wind.X;\n      ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n      return ret;\n    }\n    getSubRigCount() {\n      return this._json.Meta.PhysicsSettingCount;\n    }\n    getTotalInputCount() {\n      return this._json.Meta.TotalInputCount;\n    }\n    getTotalOutputCount() {\n      return this._json.Meta.TotalOutputCount;\n    }\n    getVertexCount() {\n      return this._json.Meta.VertexCount;\n    }\n    getNormalizationPositionMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n    }\n    getNormalizationPositionMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n    }\n    getNormalizationPositionDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n    }\n    getNormalizationAngleMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n    }\n    getNormalizationAngleMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n    }\n    getNormalizationAngleDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n    }\n    getInputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n    }\n    getInputWeight(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n    }\n    getInputReflect(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n    }\n    getInputType(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n    }\n    getInputSourceId(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n    }\n    getOutputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n    }\n    getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n    }\n    getOutputAngleScale(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n    }\n    getOutputWeight(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n    }\n    getOutputDestinationId(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n    }\n    getOutputType(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n    }\n    getOutputReflect(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n    }\n    getParticleCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n    }\n    getParticleMobility(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n    }\n    getParticleDelay(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n    }\n    getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n    }\n    getParticleRadius(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n    }\n    getParticlePosition(physicsSettingIndex, vertexIndex) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n      ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n      return ret;\n    }\n  }\n  const PhysicsTypeTagX = \"X\";\n  const PhysicsTypeTagY = \"Y\";\n  const PhysicsTypeTagAngle = \"Angle\";\n  const AirResistance = 5;\n  const MaximumWeight = 100;\n  const MovementThreshold = 1e-3;\n  class CubismPhysics {\n    static create(json) {\n      const ret = new CubismPhysics();\n      ret.parse(json);\n      ret._physicsRig.gravity.y = 0;\n      return ret;\n    }\n    evaluate(model, deltaTimeSeconds) {\n      let totalAngle;\n      let weight;\n      let radAngle;\n      let outputValue;\n      const totalTranslation = new CubismVector2();\n      let currentSetting;\n      let currentInput;\n      let currentOutput;\n      let currentParticles;\n      let parameterValue;\n      let parameterMaximumValue;\n      let parameterMinimumValue;\n      let parameterDefaultValue;\n      parameterValue = model.getModel().parameters.values;\n      parameterMaximumValue = model.getModel().parameters.maximumValues;\n      parameterMinimumValue = model.getModel().parameters.minimumValues;\n      parameterDefaultValue = model.getModel().parameters.defaultValues;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        totalAngle = { angle: 0 };\n        totalTranslation.x = 0;\n        totalTranslation.y = 0;\n        currentSetting = this._physicsRig.settings[settingIndex];\n        currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n        currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n        currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        for (let i = 0; i < currentSetting.inputCount; ++i) {\n          weight = currentInput[i].weight / MaximumWeight;\n          if (currentInput[i].sourceParameterIndex == -1) {\n            currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n          }\n          currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n        }\n        radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n        totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n        totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n        updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\n          const particleIndex = currentOutput[i].vertexIndex;\n          if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n            break;\n          }\n          if (currentOutput[i].destinationParameterIndex == -1) {\n            currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n          }\n          const translation = new CubismVector2();\n          translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n          translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n          outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n          const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n          const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n          updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n          for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n            parameterValue[offset] = outParameterValue[outParamIndex];\n          }\n        }\n      }\n    }\n    setOptions(options) {\n      this._options = options;\n    }\n    getOption() {\n      return this._options;\n    }\n    constructor() {\n      this._options = new Options();\n      this._options.gravity.y = -1;\n      this._options.gravity.x = 0;\n      this._options.wind.x = 0;\n      this._options.wind.y = 0;\n    }\n    release() {\n      this._physicsRig = void 0;\n    }\n    parse(physicsJson) {\n      this._physicsRig = new CubismPhysicsRig();\n      let json = new CubismPhysicsJson(physicsJson);\n      this._physicsRig.gravity = json.getGravity();\n      this._physicsRig.wind = json.getWind();\n      this._physicsRig.subRigCount = json.getSubRigCount();\n      let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n      for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n        const setting = new CubismPhysicsSubRig();\n        setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n        setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n        setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n        setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n        setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n        setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n        setting.inputCount = json.getInputCount(i);\n        setting.baseInputIndex = inputIndex;\n        inputIndex += setting.inputCount;\n        for (let j = 0; j < setting.inputCount; ++j) {\n          const input = new CubismPhysicsInput();\n          input.sourceParameterIndex = -1;\n          input.weight = json.getInputWeight(i, j);\n          input.reflect = json.getInputReflect(i, j);\n          switch (json.getInputType(i, j)) {\n            case PhysicsTypeTagX:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n              break;\n            case PhysicsTypeTagY:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n              break;\n            case PhysicsTypeTagAngle:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n              break;\n          }\n          input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          input.source.id = json.getInputSourceId(i, j);\n          this._physicsRig.inputs.push(input);\n        }\n        setting.outputCount = json.getOutputCount(i);\n        setting.baseOutputIndex = outputIndex;\n        outputIndex += setting.outputCount;\n        for (let j = 0; j < setting.outputCount; ++j) {\n          const output = new CubismPhysicsOutput();\n          output.destinationParameterIndex = -1;\n          output.vertexIndex = json.getOutputVertexIndex(i, j);\n          output.angleScale = json.getOutputAngleScale(i, j);\n          output.weight = json.getOutputWeight(i, j);\n          output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          output.destination.id = json.getOutputDestinationId(i, j);\n          switch (json.getOutputType(i, j)) {\n            case PhysicsTypeTagX:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              output.getValue = getOutputTranslationX;\n              output.getScale = getOutputScaleTranslationX;\n              break;\n            case PhysicsTypeTagY:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              output.getValue = getOutputTranslationY;\n              output.getScale = getOutputScaleTranslationY;\n              break;\n            case PhysicsTypeTagAngle:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              output.getValue = getOutputAngle;\n              output.getScale = getOutputScaleAngle;\n              break;\n          }\n          output.reflect = json.getOutputReflect(i, j);\n          this._physicsRig.outputs.push(output);\n        }\n        setting.particleCount = json.getParticleCount(i);\n        setting.baseParticleIndex = particleIndex;\n        particleIndex += setting.particleCount;\n        for (let j = 0; j < setting.particleCount; ++j) {\n          const particle = new CubismPhysicsParticle();\n          particle.mobility = json.getParticleMobility(i, j);\n          particle.delay = json.getParticleDelay(i, j);\n          particle.acceleration = json.getParticleAcceleration(i, j);\n          particle.radius = json.getParticleRadius(i, j);\n          particle.position = json.getParticlePosition(i, j);\n          this._physicsRig.particles.push(particle);\n        }\n        this._physicsRig.settings.push(setting);\n      }\n      this.initialize();\n      json.release();\n    }\n    initialize() {\n      let strand;\n      let currentSetting;\n      let radius;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        currentSetting = this._physicsRig.settings[settingIndex];\n        strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        strand[0].initialPosition = new CubismVector2(0, 0);\n        strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n        strand[0].lastGravity = new CubismVector2(0, -1);\n        strand[0].lastGravity.y *= -1;\n        strand[0].velocity = new CubismVector2(0, 0);\n        strand[0].force = new CubismVector2(0, 0);\n        for (let i = 1; i < currentSetting.particleCount; ++i) {\n          radius = new CubismVector2(0, 0);\n          radius.y = strand[i].radius;\n          strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n          strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastGravity = new CubismVector2(0, -1);\n          strand[i].lastGravity.y *= -1;\n          strand[i].velocity = new CubismVector2(0, 0);\n          strand[i].force = new CubismVector2(0, 0);\n        }\n      }\n    }\n  }\n  class Options {\n    constructor() {\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  function getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n  }\n  function getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n      parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    } else {\n      parentGravity = parentGravity.multiplyByScaler(-1);\n    }\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getRangeValue(min, max) {\n    return Math.abs(Math.max(min, max) - Math.min(min, max));\n  }\n  function getDefaultValue(min, max) {\n    const minValue = Math.min(min, max);\n    return minValue + getRangeValue(min, max) / 2;\n  }\n  function getOutputScaleTranslationX(translationScale, angleScale) {\n    return translationScale.x;\n  }\n  function getOutputScaleTranslationY(translationScale, angleScale) {\n    return translationScale.y;\n  }\n  function getOutputScaleAngle(translationScale, angleScale) {\n    return angleScale;\n  }\n  function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let totalRadian;\n    let delay;\n    let radian;\n    let currentGravity;\n    let direction = new CubismVector2(0, 0);\n    let velocity = new CubismVector2(0, 0);\n    let force = new CubismVector2(0, 0);\n    let newDirection = new CubismVector2(0, 0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    totalRadian = CubismMath.degreesToRadian(totalAngle);\n    currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n      strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n      strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n      delay = strand[i].delay * deltaTimeSeconds * 30;\n      direction = strand[i].position.substract(strand[i - 1].position);\n      radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n      direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n      direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n      strand[i].position = strand[i - 1].position.add(direction);\n      velocity = strand[i].velocity.multiplyByScaler(delay);\n      force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n      strand[i].position = strand[i].position.add(velocity).add(force);\n      newDirection = strand[i].position.substract(strand[i - 1].position);\n      newDirection.normalize();\n      strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n      if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n        strand[i].position.x = 0;\n      }\n      if (delay != 0) {\n        strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n        strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n        strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n      }\n      strand[i].force = new CubismVector2(0, 0);\n      strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n  }\n  function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let outputScale;\n    let value;\n    let weight;\n    outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n      if (value < output.valueBelowMinimum) {\n        output.valueBelowMinimum = value;\n      }\n      value = parameterValueMinimum;\n    } else if (value > parameterValueMaximum) {\n      if (value > output.valueExceededMaximum) {\n        output.valueExceededMaximum = value;\n      }\n      value = parameterValueMaximum;\n    }\n    weight = output.weight / MaximumWeight;\n    if (weight >= 1) {\n      parameterValue[0] = value;\n    } else {\n      value = parameterValue[0] * (1 - weight) + value * weight;\n      parameterValue[0] = value;\n    }\n  }\n  function normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0;\n    const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n      value = maxValue;\n    }\n    const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n      value = minValue;\n    }\n    const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch (Math.sign(paramValue)) {\n      case 1: {\n        const nLength = maxNormValue - middleNormValue;\n        const pLength = maxValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case -1: {\n        const nLength = minNormValue - middleNormValue;\n        const pLength = minValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case 0: {\n        result = middleNormValue;\n        break;\n      }\n    }\n    return isInverted ? result : result * -1;\n  }\n  Live2DFactory.registerRuntime({\n    version: 4,\n    ready: cubism4Ready,\n    test(source) {\n      return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 4) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 4);\n      return String.fromCharCode(...view) === \"MOC3\";\n    },\n    createModelSettings(json) {\n      return new Cubism4ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const moc = CubismMoc.create(data);\n      try {\n        const model = moc.createModel();\n        model.__moc = moc;\n        return model;\n      } catch (e) {\n        try {\n          moc.release();\n        } catch (ignored) {\n        }\n        throw e;\n      }\n    },\n    createInternalModel(coreModel, settings, options) {\n      const model = new Cubism4InternalModel(coreModel, settings, options);\n      const coreModelWithMoc = coreModel;\n      if (coreModelWithMoc.__moc) {\n        model.__moc = coreModelWithMoc.__moc;\n        delete coreModelWithMoc.__moc;\n        model.once(\"destroy\", releaseMoc);\n      }\n      return model;\n    },\n    createPhysics(coreModel, data) {\n      return CubismPhysics.create(data);\n    },\n    createPose(coreModel, data) {\n      return CubismPose.create(data);\n    }\n  });\n  function releaseMoc() {\n    var _a;\n    (_a = this.__moc) == null ? void 0 : _a.release();\n  }\n  exports2.Cubism2ExpressionManager = Cubism2ExpressionManager;\n  exports2.Cubism2InternalModel = Cubism2InternalModel;\n  exports2.Cubism2ModelSettings = Cubism2ModelSettings;\n  exports2.Cubism2MotionManager = Cubism2MotionManager;\n  exports2.Cubism4ExpressionManager = Cubism4ExpressionManager;\n  exports2.Cubism4InternalModel = Cubism4InternalModel;\n  exports2.Cubism4ModelSettings = Cubism4ModelSettings;\n  exports2.Cubism4MotionManager = Cubism4MotionManager;\n  exports2.ExpressionManager = ExpressionManager;\n  exports2.FileLoader = FileLoader;\n  exports2.FocusController = FocusController;\n  exports2.InteractionMixin = InteractionMixin;\n  exports2.InternalModel = InternalModel;\n  exports2.LOGICAL_HEIGHT = LOGICAL_HEIGHT;\n  exports2.LOGICAL_WIDTH = LOGICAL_WIDTH;\n  exports2.Live2DExpression = Live2DExpression;\n  exports2.Live2DEyeBlink = Live2DEyeBlink;\n  exports2.Live2DFactory = Live2DFactory;\n  exports2.Live2DLoader = Live2DLoader;\n  exports2.Live2DModel = Live2DModel;\n  exports2.Live2DPhysics = Live2DPhysics;\n  exports2.Live2DPose = Live2DPose;\n  exports2.Live2DTransform = Live2DTransform;\n  exports2.ModelSettings = ModelSettings;\n  exports2.MotionManager = MotionManager;\n  exports2.MotionPreloadStrategy = MotionPreloadStrategy;\n  exports2.MotionPriority = MotionPriority;\n  exports2.MotionState = MotionState;\n  exports2.SoundManager = SoundManager;\n  exports2.VERSION = VERSION;\n  exports2.XHRLoader = XHRLoader;\n  exports2.ZipLoader = ZipLoader;\n  exports2.applyMixins = applyMixins;\n  exports2.clamp = clamp;\n  exports2.copyArray = copyArray;\n  exports2.copyProperty = copyProperty;\n  exports2.cubism4Ready = cubism4Ready;\n  exports2.folderName = folderName;\n  exports2.logger = logger;\n  exports2.rand = rand;\n  exports2.remove = remove;\n  exports2.startUpCubism4 = startUpCubism4;\n  Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: \"Module\" } });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklive2d\"] = self[\"webpackChunklive2d\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(410); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","staticClass","on","$event","drawer","directives","name","rawName","value","showButton","expression","amplify","_v","reduce","percentage","customColor","decrease","increase","ref","handleMouseDown","handleMouseMove","handleMouseUp","staticRenderFns","__pow","Math","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","CubismBreath","constructor","_breathParameters","_currentTime","static","setParameters","breathParameters","getParameters","updateParameters","model","deltaTimeSeconds","t","i","length","data","addParameterValueById","parameterId","offset","peak","sin","cycle","weight","BreathParameterData","_CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_userTimeSeconds","_blinkingState","EyeState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","_a","_b","getEyeBlinkParameters","slice","r","random","CubismEyeBlink","EyeState2","Epsilon","DefaultFadeInSeconds","CubismPose","pose3json","ret","FadeInTime","_fadeTimeSeconds","poseListInfo","Groups","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","Id","linkListInfo","Link","linkCount","linkIndex","linkPart","link","push","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","j","initialize","partsIndex","partIndex","paramIndex","parameterIndex","setPartOpacityByIndex","setParameterValueByIndex","k","opacity","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","backOpacityThreshold","getParameterValueByIndex","a1","backOpacity","v","assignment","map","clone","getParameterIndex","getPartIndex","clonePartData","CubismVector2","y","add","vector2","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","sqrt","getDistanceWith","a","dot","normalize","isEqual","rhs","isNotEqual","_CubismMath","min","max","cos","abs","cx","isNegativeNumber","Infinity","exp","log","PI","left","right","degrees","radian","from","to","q1","atan2","q2","directionToRadian","degree","radianToDegrees","totalAngle","b","c","d","range","quadraticEquation","ba","ca","da","p","p3","q","discriminant","center","threshold","mp3","mp33","cosphi","acos","crtr","cbrt","t1","root12","root2","root3","u12","sd","u1","v1","root1","CubismMath","CubismMatrix44","_tr","Float32Array","loadIdentity","dst","n","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translate","translateX","translateY","scaleRelative","scale","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","R","G","B","A","getModelColor","Object","assign","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","_anisortopy","getAnisotropy","CubismTextureColor","CubismBlendMode","CubismBlendMode2","s_option","s_isStarted","s_isInitialized","Constant","vertexOffset","vertexStep","CubismFramework","option","CubismLogInfo","Live2DCubismCore","_isStarted","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","major","minor","patch","versionNumber","CubismLogWarning","staticRelease","message","csmGetLogFunction","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CSM_ASSERT","CubismLogDebug","fmt","_len2","arguments","args","Array","_key2","CubismDebug","print","LogLevel_Debug","_len3","_key3","LogLevel_Info","_len4","_key4","LogLevel_Warning","CubismLogError","_len5","_key5","LogLevel_Error","logLevel","format","getLoggingLevel","logPrint","coreLogFunction","buffer","replace","CubismModel","update","drawables","resetDynamicFlags","getCanvasWidth","canvasinfo","CanvasWidth","PixelsPerUnit","getCanvasHeight","CanvasHeight","saveParameters","parameterCount","parameters","count","savedParameterCount","_savedParameters","_parameterValues","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartCount","_partOpacities","setPartOpacityById","index","getPartOpacityById","_notExistParameterId","keys","_notExistParameterValues","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","getParameterValueById","undefined","user","ids","includes","addParameterValueByIndex","multiplyParameterValueById","multiplyParameterValueByIndex","getDrawableIds","_drawableIds","getDrawableIndex","drawableId","drawableCount","drawableIndex","getDrawableCount","getDrawableId","getDrawableRenderOrders","renderOrders","getDrawableTextureIndices","textureIndices","getDrawableDynamicFlagVertexPositionsDidChange","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","getDrawableVertexIndexCount","indexCounts","getDrawableVertexCount","vertexCounts","getDrawableVertices","getDrawableVertexPositions","getDrawableVertexIndices","indices","vertexPositions","getDrawableVertexUvs","vertexUvs","getDrawableOpacity","opacities","getDrawableCulling","constantFlags","hasIsDoubleSidedBit","getDrawableBlendMode","hasBlendAdditiveBit","CubismBlendMode_Additive","hasBlendMultiplicativeBit","CubismBlendMode_Multiplicative","CubismBlendMode_Normal","getDrawableInvertedMaskBit","hasIsInvertedMaskBit","getDrawableMasks","masks","getDrawableMaskCounts","maskCounts","isUsingMasking","getDrawableDynamicFlagIsVisible","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","loadParameters","values","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","release","CubismMoc","mocBytes","moc","Moc","fromArrayBuffer","Error","createModel","cubismModel","Model","fromMoc","_moc","_modelCount","deleteModel","_release","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","fadeIn","getEasingSine","getFadeInStartTime","fadeOut","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","DefaultFadeTime","CubismExpressionMotion","super","_parameters","json","fadeInTime","fadeOutTime","FadeOutTime","Parameters","param","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","item","parameter","CubismConfig","ExpressionBlendType2","CubismConfig2","supportMoreMaskDivisions","setOpacityFromMotion","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","time","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","id","type","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","events","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","EvaluationOptionFlag2","EffectNameEyeBlink","EffectNameLipSync","TargetNameModel","TargetNameParameter","TargetNamePartOpacity","UseOldBeziersCurveMotion","lerpPoints","result","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","cardanoAlgorithmForBezier","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","target","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","parse","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","sourceValue","fin","fout","paramWeight","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","areBeziersRestructed","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_eventCustomData","_motions","startMotion","motion","autoDelete","InvalidMotionQueueEntryHandleValue","splice","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntry","find","entry","setEventCallback","callback","customData","_eventCallBack","doUpdateMotion","updated","firedList","i2","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","CubismPhysicsParticle","initialPosition","position","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","source","CubismPhysicsOutput","destination","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagX","PhysicsTypeTagY","PhysicsTypeTagAngle","AirResistance","MaximumWeight","MovementThreshold","CubismPhysics","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","angle","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","_options","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","prototype","JSON","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","options","getOption","Options","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getRangeValue","getDefaultValue","minValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","nLength","pLength","csmRect","w","h","width","height","getCenterX","getCenterY","getRight","getBottom","setRect","expand","ColorChannelCount","shaderCount","s_instance","s_viewport","s_fbo","CubismClippingManager_WebGL","getChannelFlagAsColor","channelNo","_channelColors","getMaskRenderTexture","_maskTexture","texture","frameNo","_currentFrameNo","size","_clippingMaskBufferSize","_colorBuffer","gl","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","_maskRenderTexture","_clippingContextListForMask","_clippingContextListForDraw","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","self","deleteFramebuffer","deleteTexture","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","renderer","usingClipCount","clipIndex","cc","viewport","preDraw","setupLayoutBounds","clearColor","clear","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","setClippingContextBufferForMask","drawMesh","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","manager","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","masked","ShaderNames_NormalPremultipliedAlpha","ONE","ShaderNames_AddPremultipliedAlpha","ShaderNames_MultPremultipliedAlpha","TEXTURE1","tex","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","linkStatus","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","status","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","firstDraw","_textures","_sortedDrawableIndexList","_bufferData","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","order","setClippingContextBufferForDraw","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","getInstance","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteInstance","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","startUp","doStaticRelease","CubismModelSettingsJson","groups","hitAreas","HitAreas","layout","Layout","FileReferences","expressions","Expressions","motions","Motions","textures","Textures","physics","Physics","pose","Pose","group","Name","Ids","getLipSyncParameters","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeBallX","ParamEyeBallY","ParamBodyAngleX","ParamBreath","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","config2","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","logger","tag","_len6","messages","_key6","console","warn","_len7","_key7","error","_len8","_key8","clamp","num","lower","upper","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","folderName","url2","lastSlashIndex","lastIndexOf","remove","array","indexOf","ExpressionManager","EventEmitter","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","_loadExpression","setRandomExpression","availableIndices","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","now","destroy","emit","EPSILON","MAX_SPEED","ACCELERATION_TIME","FocusController","targetX","targetY","vx","vy","focus","instant","dt","dx","dy","maxSpeed","ax","ay","maxA","maxV","ModelSettings","url","TypeError","resolveURL","path","replaceFiles","replacer","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","essentialFiles","definedFiles","filter","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","reserve","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","start","setCurrent","complete","isActive","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","key","join","TAG$2","VOLUME","SoundManager","volume","_volume","audios","audio","onFinish","onError","Audio","preload","addEventListener","dispose","play","catch","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionManager","motionGroups","state","playing","idleMotionGroup","idle","setupMotions","motionPreload","loadMotion","_loadMotion","_0","_1","_this","NORMAL","definition","currentAudio","soundURL","getSoundFile","readyToPlay","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","IDLE","tempBounds","InternalModel","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","textureFlipY","setupLayout","setupHitAreas","getSize","getLayout","offsetX","centerX","offsetY","centerY","top","bottom","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","updateTransform","transform","copyFrom","append","motionManager","TAG$1","NetworkError","aborted","_XHRLoader","onload","onerror","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","get","Set","set","listeners","cancelXHRs","once","open","responseType","response","onabort","onloadend","delete","abort","WeakMap","XHRLoader","runMiddlewares","middleware","context","dispatch","err","fn","bind","err2","loader","createXHR","send","Live2DLoader","middlewares","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","load","TAG","urlToJSON","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","internalModel","tasks","createPose","coreModel","createPhysics","all","setupEssentials","live2DModel","textureLoadings","createInternalModel","modelData","isValidMoc","createCoreModel","_Live2DFactory","runtimes","sort","test","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","onTap","off","registerInteraction","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","Transform","tempPoint","Point","tempMatrix$1","tickerRef","Live2DModel","Container","anchor","ObservablePoint","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","setupLive2DModel","onLoad","tickerClass","autoUpdate","window","PIXI","Ticker","_destroyed","shared","onTickerUpdate","interactive","pivot","toModelPosition","tx","ty","hitAreaNames","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","plugins","interaction","batch","geometry","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","_FileLoader","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","reader","FileReader","readAsText","FileLoader","factory","isArray","File","createSettings","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","unshift","_ZipLoader","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","paths","ZipLoader","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","Cubism4ExpressionManager","queueManager","findIndex","create","Cubism4ModelSettings","isValidJSON","every","entries","Sound","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","defaultFadingDuration","tempMatrix","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","eyeBlink","commonKey","charAt","toLowerCase","getDrawableIDs","arr","prepend","_d","motionUpdated","updateFocus","updateNaturalMovements","matrix","getParameter","FRAMEBUFFER_BINDING","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","setTimeout","LogLevel_Verbose","releaseMoc","__moc","registerRuntime","byteLength","view","Int8Array","String","fromCharCode","ignored","coreModelWithMoc","websock","model4","audioCtx","analyser","frequencyData","o","isDragging","lastX","lastY","mounted","$on","getWav","createAnalyser","onresize","$refs","live2d","clientWidth","document","code","created","initWebSocket","close","methods","app","resizeTo","clientX","clientY","deltaX","deltaY","style","parseInt","wsuri","WebSocket","onmessage","websocketonmessage","onopen","websocketonopen","websocketonerror","onclose","websocketclose","$message","modelName","axios","method","autoStart","backgroundAlpha","stage","addChild","setMouthOpenY","AudioContext","Uint8Array","frequencyBinCount","getByteFrequencyData","run","arrayAdd","base64ToArrayBuffer","base64","binary_string","atob","len","bytes","charCodeAt","voice","audioData","decodeAudioData","createBufferSource","connect","onended","watch","component","Vue","App","beforeCreate","_Message","$mount","exports","require","exports2","utils","math","core","display","VERSION","_len","_key","rand","copyProperty","fromKey","toKey","copyArray","self2","MotionPreloadStrategy","MotionPreloadStrategy2","fromURL","Live2D","originalUpdateParam","Live2DMotion","updateParam","call","onFinishHandler","Live2DExpression","AMotion","params","setFadeIn","fade_in","fade_out","calc","defaultValue","val","updateParamExe","motionQueueEnt","setParamFloat","Cubism2ExpressionManager","MotionQueueManager","Cubism2MotionManager","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","tempMatrixArray","Cubism2InternalModel","drawDataCount","disableCulling","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","_ref","initOpacities","_ref2","setPartsOpacity","saveParam","getModelContext","_$aS","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","glno","prop","hasOwnProperty","WebGLBuffer","curFrameNo","setTexture","getDrawDataIndex","drawData","getDrawData","getDrawDataID","getTransformedPoints","loadParam","addToParamFloat","Cubism2ModelSettings","copy","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","_ref3","ptype","addSrcParam","targets","_ref4","addTargetParam","elapsed","Live2DPartsParam","initIndex","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","_ref5","_ref6","l","visible","getParamFloat","normalizePartsOpacityGroup","partsGroup","maxBackOpacity","visibleOpacity","visibleIndex","_ref7","originalOpacity","getPartsOpacity","_ref8","backOp","copyOpacity","_ref9","_ref10","partsIndex2","partGroup","Live2DModelWebGL","loadModel","getError","defineProperties","__esModule","Symbol","toStringTag","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","deferred","O","chunkIds","notFulfilled","getter","enumerable","g","globalThis","Function","obj","nmd","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}