{"version":3,"file":"js/app.e53e84b3.js","mappings":"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","sources":["webpack://live2d/./src/App.vue","webpack://live2d/./src/components/Drawer.vue","webpack://live2d/src/components/Drawer.vue","webpack://live2d/./src/components/Drawer.vue?0738","webpack://live2d/./src/components/Drawer.vue?af4e","webpack://live2d/./src/ws/index.js","webpack://live2d/./src/utils/index.js","webpack://live2d/./src/openMouthY/index.js","webpack://live2d/./src/pixi-live2d-display/dist/cubism4.es.js","webpack://live2d/./src/loadLive2d/index.js","webpack://live2d/src/App.vue","webpack://live2d/./src/App.vue?51dd","webpack://live2d/./src/App.vue?0e40","webpack://live2d/./src/store/index.js","webpack://live2d/./src/main.js","webpack://live2d/./src/pixi-live2d-display/dist/index.js","webpack://live2d/webpack/bootstrap","webpack://live2d/webpack/runtime/chunk loaded","webpack://live2d/webpack/runtime/compat get default export","webpack://live2d/webpack/runtime/define property getters","webpack://live2d/webpack/runtime/global","webpack://live2d/webpack/runtime/hasOwnProperty shorthand","webpack://live2d/webpack/runtime/make namespace object","webpack://live2d/webpack/runtime/node module decorator","webpack://live2d/webpack/runtime/jsonp chunk loading","webpack://live2d/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"app\"}},[_c('Drawer'),_c('canvas',{ref:\"live2d\",staticStyle:{\"position\":\"relative\"},on:{\"mousedown\":_vm.handleMouseDown,\"mousemove\":_vm.handleMouseMove,\"mouseup\":_vm.handleMouseUp}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"show_setting\",on:{\"click\":_vm.handlerClick}},[_c('i',{staticClass:\"el-icon-arrow-right\"})]),_c('el-drawer',{attrs:{\"visible\":_vm.drawer,\"with-header\":false,\"direction\":\"ltr\"},on:{\"update:visible\":function($event){_vm.drawer=$event}}},[_c('h4',{staticStyle:{\"margin-bottom\":\"-20px\"}},[_vm._v(\"模型大小控制\")]),_c('div',{staticClass:\"button\"},[_c('el-button',{staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.$store.dispatch('amplify',_vm.live2d)}}},[_vm._v(\"放大\")]),_c('el-button',{staticStyle:{\"height\":\"7vh\",\"width\":\"8vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\",\"border-radius\":\"3.5vh\"},attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.$store.dispatch('reduce',_vm.live2d)}}},[_vm._v(\"缩小\")])],1),_c('div',{staticStyle:{\"margin-bottom\":\"30px\"}}),_c('h4',[_vm._v(\"嘴型控制\")]),_c('div',{staticClass:\"percentage\",on:{\"mousedown\":_vm.mouseDown}},[_c('div',{ref:\"per\",staticClass:\"in-percentage\"})]),_c('el-tooltip',{attrs:{\"placement\":\"top\"}},[_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_vm._v(\"数值越小，嘴越容易张开。\"),_c('br'),_vm._v(\"当模型说话嘴型奇怪时，请适当改变数值。\"),_c('br'),_vm._v(\"支持小数微调\")]),_c('i',{staticClass:\"el-icon-question\",staticStyle:{\"font-size\":\"3vh\",\"line-height\":\"3vh\",\"color\":\"gray\"}})]),_c('div',{staticStyle:{\"margin-bottom\":\"40px\"}}),_c('el-button-group',[_c('el-button',{staticStyle:{\"height\":\"5vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-minus\"},on:{\"click\":function($event){return _vm.$store.dispatch('decrease')}}}),_c('el-button',{staticStyle:{\"height\":\"5vh\",\"width\":\"4vw\",\"font-size\":\"2vh\",\"line-height\":\"0vh\"},attrs:{\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){return _vm.$store.dispatch('increase')}}})],1),_c('br'),_c('el-input',{staticStyle:{\"height\":\"4vh\",\"width\":\"20vw\",\"margin-top\":\"2vh\"},attrs:{\"placeholder\":\"要改变的数值\"},model:{value:(_vm.$store.state.percentage),callback:function ($$v) {_vm.$set(_vm.$store.state, \"percentage\", $$v)},expression:\"$store.state.percentage\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport {defineComponent} from 'vue'\r\n\r\n\r\n\r\nexport default defineComponent({\r\n  name: \"Drawer\",\r\n  data(){\r\n    return {\r\n      drawer: false,\r\n      customColor: '#409eff',\r\n      x:\"\",\r\n      dragging :false\r\n    }\r\n  },\r\n  methods:{\r\n    handlerClick(){\r\n      this.drawer = true\r\n      setTimeout(()=>{\r\n        this.$refs.per.style.width = `${this.percentage}%`\r\n      })\r\n    },\r\n    //添加进度条的点击事件\r\n    mouseDown(e){\r\n\r\n      this.$store.state.percentage = e.offsetX/this.$refs.per.parentElement.clientWidth * 100\r\n\r\n      this.x = e.clientX;\r\n    }\r\n\r\n  },\r\n\r\n  computed:{\r\n    percentage(){\r\n      return this.$store.state.percentage\r\n    },\r\n    scale(){\r\n      return this.$store.state.scale\r\n    },\r\n    live2d(){\r\n      return this.$store.state.live2d\r\n    }\r\n  },\r\n\r\n\r\n  watch:{\r\n    percentage:{\r\n      handler(newValue){\r\n        if (typeof newValue != 'number'){\r\n          this.percentage = 60\r\n        }\r\n\r\n        this.$refs.per.style.width = `${this.percentage}%`\r\n        window.localStorage.setItem(\"percentage\",newValue)\r\n\r\n      },\r\n      set(newValue){\r\n        this.percentage = newValue.toFixed(2)\r\n      }\r\n    },\r\n    scale:{\r\n      handler(newValue){\r\n\r\n        if (typeof newValue != 'number'){\r\n          this.percentage = 1\r\n        }\r\n\r\n        window.localStorage.setItem(\"scale\",newValue)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"keydown\", (events) => {\r\n          if(events.code==\"ArrowLeft\"){\r\n            this.drawer=false\r\n          }\r\n          if(events.code==\"ArrowRight\"){\r\n            this.drawer=true\r\n          }\r\n          if(events.code==\"ArrowUp\"){\r\n            this.amplify()\r\n          }\r\n          if(events.code==\"ArrowDown\"){\r\n            this.reduce()\r\n          }\r\n        }\r\n    )\r\n  }\r\n\r\n\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"show_setting\" @click=\"handlerClick\">\r\n      <i class=\"el-icon-arrow-right\"></i>\r\n    </div>\r\n\r\n    <el-drawer\r\n        :visible.sync=\"drawer\"\r\n        :with-header=\"false\"\r\n        direction=\"ltr\"\r\n    >\r\n     <h4 style=\"margin-bottom: -20px\">模型大小控制</h4>\r\n      <div class=\"button\" >\r\n        <el-button  @click=\"$store.dispatch('amplify',live2d)\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\" >放大</el-button>\r\n        <el-button  @click=\"$store.dispatch('reduce',live2d)\"  type=\"primary\" round style=\"height: 7vh;width: 8vw;font-size: 2vh;line-height: 0vh;border-radius: 3.5vh\">缩小</el-button>\r\n      </div>\r\n\r\n\r\n      <div style=\"margin-bottom: 30px\"></div>\r\n      <h4>嘴型控制</h4>\r\n      <div class=\"percentage\"\r\n           @mousedown=\"mouseDown\"\r\n\r\n      >\r\n        <div class=\"in-percentage\"\r\n             ref=\"per\"\r\n\r\n\r\n        ></div>\r\n\r\n      </div>\r\n\r\n      <el-tooltip placement=\"top\">\r\n        <div slot=\"content\">数值越小，嘴越容易张开。<br>当模型说话嘴型奇怪时，请适当改变数值。<br>支持小数微调</div>\r\n        <i class=\"el-icon-question\" style=\"font-size: 3vh;line-height: 3vh;color: gray\"></i>\r\n      </el-tooltip>\r\n\r\n\r\n      <div style=\"margin-bottom: 40px\"></div>\r\n      <el-button-group>\r\n        <el-button icon=\"el-icon-minus\"\r\n                   @click=\"$store.dispatch('decrease')\"\r\n                   style=\"height: 5vh;\r\n                   width: 4vw;\r\n                   font-size: 2vh;\r\n                   line-height: 0vh;\" ></el-button>\r\n        <el-button icon=\"el-icon-plus\"\r\n                   @click=\"$store.dispatch('increase')\"\r\n                   style=\"height: 5vh;\r\n                   width: 4vw;\r\n                   font-size: 2vh;\r\n                   line-height: 0vh;\"></el-button>\r\n      </el-button-group>\r\n      <br>\r\n      <el-input v-model=\"$store.state.percentage\" placeholder=\"要改变的数值\" style=\"height: 4vh; width: 20vw;margin-top: 2vh\"></el-input>\r\n    </el-drawer>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n\r\n.button {\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  margin-top: 8vh;\r\n}\r\n\r\n\r\n\r\n.show_setting {\r\n  position: relative;\r\n  width: 1.5vw;\r\n  height: 4vw;\r\n  background:rgba(139,139,139,0.6);\r\n  top: 50vh;\r\n  transform: translateY(-4vw);\r\n  font-size: 3vh;\r\n  line-height: 4vw;\r\n  text-align: center;\r\n  z-index: 10;\r\n\r\n}\r\n\r\n.percentage {\r\n\r\n  width: 25vw;\r\n  height: 1vh;\r\n  background: beige;\r\n  position: relative;\r\n  left: 40%;\r\n  transform: translateX(-50%);\r\n  border-radius: 0.5vh;\r\n  overflow: hidden;\r\n  display: inline-block;\r\n\r\n\r\n}\r\n\r\n.in-percentage{\r\n  height: 1vh;\r\n  background:rgba(64,158,255,1);\r\n}\r\n\r\nh4 {\r\n  color: gray;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Drawer.vue?vue&type=template&id=14270b4a&\"\nimport script from \"./Drawer.vue?vue&type=script&lang=js&\"\nexport * from \"./Drawer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Drawer.vue?vue&type=style&index=0&id=14270b4a&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","let websocket\r\n\r\nimport {Message} from \"element-ui\";\r\nexport  default  function  initWebSocket() {\r\n    //初始化weosocket\r\n    const wsuri = `ws://${location.host}/live2d`;\r\n\r\n    websocket = new WebSocket(wsuri);\r\n\r\n\r\n    // 连接建立时触发\r\n    websocket.onopen = websocketonopen;\r\n    // 通信发生错误时触发\r\n    websocket.onerror = websocketonerror;\r\n    // 连接关闭时触发\r\n    websocket.onclose = websocketclose;\r\n\r\n    return websocket\r\n}\r\n\r\n\r\nfunction websocketonopen(){\r\n    Message({\r\n        message: '成功建立连接 ₍ᐢ..ᐢ₎♡ ',\r\n        type: 'success'\r\n    });\r\n}\r\nfunction websocketonerror(){\r\n    Message({\r\n        message: '连接发生了错误! ̊ଳ ̊ᵎᵎᵎᵎ ',\r\n        type: 'warning'\r\n    });\r\n}\r\nfunction websocketclose(){\r\n    Message({\r\n        message: '连接已断开!!! ˃̣̣̥᷄⌓˂̣̣̥᷅ ',\r\n        type: 'warning'\r\n    });\r\n}\r\n\r\n","// a function for converting  base64 to ArrayBuffer\r\nexport  function base64ToArrayBuffer(base64) {\r\n    let binary_string =  window.atob(base64);\r\n    let len = binary_string.length;\r\n    let bytes = new Uint8Array( len );\r\n    for (let i = 0; i < len; i++)        {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n}\r\n// a function for adding the every number in the array\r\nexport function arrayAdd(a){return a.reduce((i,a)=>i+a,0)}","import axios from \"axios\";\r\nimport {base64ToArrayBuffer,arrayAdd} from \"@/utils\"\r\n\r\n\r\nlet audioCtx\r\n\r\nlet analyser\r\n\r\nlet frequencyData\r\n\r\nlet playing = false\r\n\r\nlet o = 80\r\n\r\nexport  async function getWav(data,store){\r\n    let response\r\n\r\n    switch (data[\"VType\"]) {\r\n        case 1 :\r\n            response =  await axios({\r\n                url:data.voice,\r\n                method:\"get\",\r\n                responseType:\"arraybuffer\"\r\n            })\r\n            response = response.data\r\n            break\r\n        //如果为 2 和 3 则需要转化为arraybuffer\r\n        case 2  :\r\n            break\r\n            response = base64ToArrayBuffer(data.voice)\r\n        case 3  :\r\n            response = base64ToArrayBuffer(data.voice)\r\n            break\r\n\r\n    }\r\n\r\n\r\n\r\n    ((response) => {\r\n\r\n        const audioData = response;\r\n        audioCtx.decodeAudioData(audioData, (buffer)=>{\r\n            // 新建 Buffer 源\r\n            const source = audioCtx.createBufferSource();\r\n            source.buffer = buffer;\r\n            // 连接到 audioCtx\r\n            source.connect(audioCtx.destination);\r\n            // 连接到 音频分析器\r\n            source.connect(analyser);\r\n            // window.navigator.mediaDevices.getUserMedia({ audio: true });\r\n            // 开始播放\r\n\r\n            playing = true;\r\n            run()\r\n            setTimeout(() => {\r\n                source.start(0);\r\n            },0.5)\r\n //调用相应地动作和表情\r\n            store.model4.expression(data.expression)\r\n            store.model4.motion(data[\"act\"],data[\"movement\"])\r\n\r\n\r\n\r\n            source.onended = ()=>{\r\n                // 停止播放\r\n               playing = false;\r\n               //清空model 的动作和表情\r\n                store.websocket.send(0)\r\n                store.model4.expression(0);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n            store.websocket.send(-1)\r\n        })\r\n    })(response)\r\n\r\n\r\n    function run(){\r\n\r\n        if(!playing) return;\r\n\r\n        const frequencyData =getByteFrequencyData();\r\n\r\n        const arr = [];\r\n        // 频率范围还是太广了，跳采！\r\n        for (var i = 0; i < 700; i += o) {\r\n            arr.push(frequencyData[i]);\r\n        }\r\n\r\n        setMouthOpenY((arrayAdd(arr)/arr.length - 20)/store.percentage);\r\n\r\n        setTimeout(run,1000/60);//相隔一段时间执行\r\n    }\r\n\r\n    function setMouthOpenY(v){\r\n        //去除调小于0和大于1的值\r\n        v = Math.max(0, Math.min(1, v));\r\n        console.log(v)\r\n\r\n        //mouthOpenY参数\r\n        store.model4.internalModel.coreModel.setParameterValueByIndex(store.parameterIndex, v,1,true)\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function createAnalyser() {\r\n    if (location.protocol === 'https:') {\r\n        // 当前页面使用 HTTPS 协议\r\n\r\n        if(navigator.userAgent.indexOf(\"Firefox\") != -1 || navigator.userAgent.indexOf(\"Chrome\") != -1){\r\n            navigator.mediaDevices.getUserMedia({ audio: true })\r\n                .then(function(stream) {\r\n                    // 麦克风授权成功，此时用户已与页面进行了交互\r\n                    // 创建 AudioContext 对象\r\n                    audioCtx = new AudioContext();\r\n                    // 处理音频流\r\n\r\n                    // audioCtx = new AudioContext();\r\n                    // 新建分析仪\r\n                    analyser =audioCtx.createAnalyser();\r\n                    // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n                    frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n                    // 取音频文件成 arraybuffer\r\n                })\r\n                .catch(function(err) {\r\n                    alert('未授予音频权限或发生错误：' + err.name+\",请将sound(autoplay)权限改为allow\");\r\n\r\n                    audioCtx = new AudioContext();\r\n                    // 处理音频流\r\n\r\n                    // audioCtx = new AudioContext();\r\n                    // 新建分析仪\r\n                    analyser =audioCtx.createAnalyser();\r\n                    // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n                    frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n                    // 取音频文件成 arraybuffer\r\n\r\n                });\r\n\r\n\r\n\r\n        }else {\r\n            audioCtx = new AudioContext();\r\n            // 处理音频流\r\n\r\n            // audioCtx = new AudioContext();\r\n            // 新建分析仪\r\n            analyser =audioCtx.createAnalyser();\r\n            // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n            frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n            // 取音频文件成 arraybuffer\r\n        }\r\n    }else {\r\n        audioCtx = new AudioContext();\r\n        // 处理音频流\r\n\r\n        // audioCtx = new AudioContext();\r\n        // 新建分析仪\r\n        analyser =audioCtx.createAnalyser();\r\n        // 根据 频率分辨率建立个 Uint8Array 数组备用\r\n        frequencyData = new Uint8Array(analyser.frequencyBinCount);\r\n        // 取音频文件成 arraybuffer\r\n    }\r\n\r\n\r\n\r\n}\r\nfunction getByteFrequencyData(){\r\n    analyser.getByteFrequencyData(frequencyData);\r\n    return frequencyData\r\n}\r\n\r\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { EventEmitter, url } from \"@pixi/utils\";\nimport { Matrix, Transform, Point, ObservablePoint } from \"@pixi/math\";\nimport { Texture } from \"@pixi/core\";\nimport { Container } from \"@pixi/display\";\nclass CubismBreath {\n  constructor() {\n    this._breathParameters = [];\n    this._currentTime = 0;\n  }\n  static create() {\n    return new CubismBreath();\n  }\n  setParameters(breathParameters) {\n    this._breathParameters = breathParameters;\n  }\n  getParameters() {\n    return this._breathParameters;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._currentTime += deltaTimeSeconds;\n    const t = this._currentTime * 2 * 3.14159;\n    for (let i = 0; i < this._breathParameters.length; ++i) {\n      const data = this._breathParameters[i];\n      model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n    }\n  }\n}\nclass BreathParameterData {\n  constructor(parameterId, offset, peak, cycle, weight) {\n    this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n    this.offset = offset == void 0 ? 0 : offset;\n    this.peak = peak == void 0 ? 0 : peak;\n    this.cycle = cycle == void 0 ? 0 : cycle;\n    this.weight = weight == void 0 ? 0 : weight;\n  }\n}\nconst _CubismEyeBlink = class {\n  static create(modelSetting) {\n    return new _CubismEyeBlink(modelSetting);\n  }\n  setBlinkingInterval(blinkingInterval) {\n    this._blinkingIntervalSeconds = blinkingInterval;\n  }\n  setBlinkingSetting(closing, closed, opening) {\n    this._closingSeconds = closing;\n    this._closedSeconds = closed;\n    this._openingSeconds = opening;\n  }\n  setParameterIds(parameterIds) {\n    this._parameterIds = parameterIds;\n  }\n  getParameterIds() {\n    return this._parameterIds;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    let parameterValue;\n    let t = 0;\n    switch (this._blinkingState) {\n      case EyeState.EyeState_Closing:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Closed;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1 - t;\n        break;\n      case EyeState.EyeState_Closed:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n        if (t >= 1) {\n          this._blinkingState = EyeState.EyeState_Opening;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 0;\n        break;\n      case EyeState.EyeState_Opening:\n        t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n        if (t >= 1) {\n          t = 1;\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        }\n        parameterValue = t;\n        break;\n      case EyeState.EyeState_Interval:\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\n          this._blinkingState = EyeState.EyeState_Closing;\n          this._stateStartTimeSeconds = this._userTimeSeconds;\n        }\n        parameterValue = 1;\n        break;\n      case EyeState.EyeState_First:\n      default:\n        this._blinkingState = EyeState.EyeState_Interval;\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\n        parameterValue = 1;\n        break;\n    }\n    if (!_CubismEyeBlink.CloseIfZero) {\n      parameterValue = -parameterValue;\n    }\n    for (let i = 0; i < this._parameterIds.length; ++i) {\n      model.setParameterValueById(this._parameterIds[i], parameterValue);\n    }\n  }\n  constructor(modelSetting) {\n    var _a, _b;\n    this._blinkingState = EyeState.EyeState_First;\n    this._nextBlinkingTime = 0;\n    this._stateStartTimeSeconds = 0;\n    this._blinkingIntervalSeconds = 4;\n    this._closingSeconds = 0.1;\n    this._closedSeconds = 0.05;\n    this._openingSeconds = 0.15;\n    this._userTimeSeconds = 0;\n    this._parameterIds = [];\n    if (modelSetting == null) {\n      return;\n    }\n    this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n  }\n  determinNextBlinkingTiming() {\n    const r = Math.random();\n    return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n  }\n};\nlet CubismEyeBlink = _CubismEyeBlink;\nCubismEyeBlink.CloseIfZero = true;\nvar EyeState = /* @__PURE__ */ ((EyeState2) => {\n  EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n  EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n  EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n  EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n  EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n  return EyeState2;\n})(EyeState || {});\nconst Epsilon = 1e-3;\nconst DefaultFadeInSeconds = 0.5;\nclass CubismPose {\n  static create(pose3json) {\n    const ret = new CubismPose();\n    if (typeof pose3json.FadeInTime === \"number\") {\n      ret._fadeTimeSeconds = pose3json.FadeInTime;\n      if (ret._fadeTimeSeconds <= 0) {\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\n      }\n    }\n    const poseListInfo = pose3json.Groups;\n    const poseCount = poseListInfo.length;\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n      const idListInfo = poseListInfo[poseIndex];\n      const idCount = idListInfo.length;\n      let groupCount = 0;\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n        const partInfo = idListInfo[groupIndex];\n        const partData = new PartData();\n        partData.partId = partInfo.Id;\n        const linkListInfo = partInfo.Link;\n        if (linkListInfo) {\n          const linkCount = linkListInfo.length;\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n            const linkPart = new PartData();\n            linkPart.partId = linkListInfo[linkIndex];\n            partData.link.push(linkPart);\n          }\n        }\n        ret._partGroups.push(partData);\n        ++groupCount;\n      }\n      ret._partGroupCounts.push(groupCount);\n    }\n    return ret;\n  }\n  updateParameters(model, deltaTimeSeconds) {\n    if (model != this._lastModel) {\n      this.reset(model);\n    }\n    this._lastModel = model;\n    if (deltaTimeSeconds < 0) {\n      deltaTimeSeconds = 0;\n    }\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; i++) {\n      const partGroupCount = this._partGroupCounts[i];\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n      beginIndex += partGroupCount;\n    }\n    this.copyPartOpacities(model);\n  }\n  reset(model) {\n    let beginIndex = 0;\n    for (let i = 0; i < this._partGroupCounts.length; ++i) {\n      const groupCount = this._partGroupCounts[i];\n      for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n        this._partGroups[j].initialize(model);\n        const partsIndex = this._partGroups[j].partIndex;\n        const paramIndex = this._partGroups[j].parameterIndex;\n        if (partsIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n        for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n          this._partGroups[j].link[k].initialize(model);\n        }\n      }\n      beginIndex += groupCount;\n    }\n  }\n  copyPartOpacities(model) {\n    for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n      const partData = this._partGroups[groupIndex];\n      if (partData.link.length == 0) {\n        continue;\n      }\n      const partIndex = this._partGroups[groupIndex].partIndex;\n      const opacity = model.getPartOpacityByIndex(partIndex);\n      for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n        const linkPart = partData.link[linkIndex];\n        const linkPartIndex = linkPart.partIndex;\n        if (linkPartIndex < 0) {\n          continue;\n        }\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\n      }\n    }\n  }\n  doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n    let visiblePartIndex = -1;\n    let newOpacity = 1;\n    const phi = 0.5;\n    const backOpacityThreshold = 0.15;\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partIndex = this._partGroups[i].partIndex;\n      const paramIndex = this._partGroups[i].parameterIndex;\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n        if (visiblePartIndex >= 0) {\n          break;\n        }\n        visiblePartIndex = i;\n        newOpacity = model.getPartOpacityByIndex(partIndex);\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n        if (newOpacity > 1) {\n          newOpacity = 1;\n        }\n      }\n    }\n    if (visiblePartIndex < 0) {\n      visiblePartIndex = 0;\n      newOpacity = 1;\n    }\n    for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n      const partsIndex = this._partGroups[i].partIndex;\n      if (visiblePartIndex == i) {\n        model.setPartOpacityByIndex(partsIndex, newOpacity);\n      } else {\n        let opacity = model.getPartOpacityByIndex(partsIndex);\n        let a1;\n        if (newOpacity < phi) {\n          a1 = newOpacity * (phi - 1) / phi + 1;\n        } else {\n          a1 = (1 - newOpacity) * phi / (1 - phi);\n        }\n        const backOpacity = (1 - a1) * (1 - newOpacity);\n        if (backOpacity > backOpacityThreshold) {\n          a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n        }\n        if (opacity > a1) {\n          opacity = a1;\n        }\n        model.setPartOpacityByIndex(partsIndex, opacity);\n      }\n    }\n  }\n  constructor() {\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\n    this._lastModel = void 0;\n    this._partGroups = [];\n    this._partGroupCounts = [];\n  }\n}\nclass PartData {\n  constructor(v) {\n    this.parameterIndex = 0;\n    this.partIndex = 0;\n    this.partId = \"\";\n    this.link = [];\n    if (v != void 0) {\n      this.assignment(v);\n    }\n  }\n  assignment(v) {\n    this.partId = v.partId;\n    this.link = v.link.map((link) => link.clone());\n    return this;\n  }\n  initialize(model) {\n    this.parameterIndex = model.getParameterIndex(this.partId);\n    this.partIndex = model.getPartIndex(this.partId);\n    model.setParameterValueByIndex(this.parameterIndex, 1);\n  }\n  clone() {\n    const clonePartData = new PartData();\n    clonePartData.partId = this.partId;\n    clonePartData.parameterIndex = this.parameterIndex;\n    clonePartData.partIndex = this.partIndex;\n    clonePartData.link = this.link.map((link) => link.clone());\n    return clonePartData;\n  }\n}\nclass CubismVector2 {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n  add(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x + vector2.x;\n    ret.y = this.y + vector2.y;\n    return ret;\n  }\n  substract(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x - vector2.x;\n    ret.y = this.y - vector2.y;\n    return ret;\n  }\n  multiply(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x * vector2.x;\n    ret.y = this.y * vector2.y;\n    return ret;\n  }\n  multiplyByScaler(scalar) {\n    return this.multiply(new CubismVector2(scalar, scalar));\n  }\n  division(vector2) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this.x / vector2.x;\n    ret.y = this.y / vector2.y;\n    return ret;\n  }\n  divisionByScalar(scalar) {\n    return this.division(new CubismVector2(scalar, scalar));\n  }\n  getLength() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  getDistanceWith(a) {\n    return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n  }\n  dot(a) {\n    return this.x * a.x + this.y * a.y;\n  }\n  normalize() {\n    const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n    this.x = this.x / length;\n    this.y = this.y / length;\n  }\n  isEqual(rhs) {\n    return this.x == rhs.x && this.y == rhs.y;\n  }\n  isNotEqual(rhs) {\n    return !this.isEqual(rhs);\n  }\n}\nconst _CubismMath = class {\n  static range(value, min, max) {\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n  static sin(x) {\n    return Math.sin(x);\n  }\n  static cos(x) {\n    return Math.cos(x);\n  }\n  static abs(x) {\n    return Math.abs(x);\n  }\n  static sqrt(x) {\n    return Math.sqrt(x);\n  }\n  static cbrt(x) {\n    if (x === 0) {\n      return x;\n    }\n    let cx = x;\n    const isNegativeNumber = cx < 0;\n    if (isNegativeNumber) {\n      cx = -cx;\n    }\n    let ret;\n    if (cx === Infinity) {\n      ret = Infinity;\n    } else {\n      ret = Math.exp(Math.log(cx) / 3);\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\n    }\n    return isNegativeNumber ? -ret : ret;\n  }\n  static getEasingSine(value) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\n  }\n  static max(left, right) {\n    return left > right ? left : right;\n  }\n  static min(left, right) {\n    return left > right ? right : left;\n  }\n  static degreesToRadian(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  static radianToDegrees(radian) {\n    return radian * 180 / Math.PI;\n  }\n  static directionToRadian(from, to) {\n    const q1 = Math.atan2(to.y, to.x);\n    const q2 = Math.atan2(from.y, from.x);\n    let ret = q1 - q2;\n    while (ret < -Math.PI) {\n      ret += Math.PI * 2;\n    }\n    while (ret > Math.PI) {\n      ret -= Math.PI * 2;\n    }\n    return ret;\n  }\n  static directionToDegrees(from, to) {\n    const radian = this.directionToRadian(from, to);\n    let degree = this.radianToDegrees(radian);\n    if (to.x - from.x > 0) {\n      degree = -degree;\n    }\n    return degree;\n  }\n  static radianToDirection(totalAngle) {\n    const ret = new CubismVector2();\n    ret.x = this.sin(totalAngle);\n    ret.y = this.cos(totalAngle);\n    return ret;\n  }\n  static quadraticEquation(a, b, c) {\n    if (this.abs(a) < _CubismMath.Epsilon) {\n      if (this.abs(b) < _CubismMath.Epsilon) {\n        return -c;\n      }\n      return -c / b;\n    }\n    return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n  }\n  static cardanoAlgorithmForBezier(a, b, c, d) {\n    if (this.sqrt(a) < _CubismMath.Epsilon) {\n      return this.range(this.quadraticEquation(b, c, d), 0, 1);\n    }\n    const ba = b / a;\n    const ca = c / a;\n    const da = d / a;\n    const p = (3 * ca - ba * ba) / 3;\n    const p3 = p / 3;\n    const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n    const q2 = q / 2;\n    const discriminant = q2 * q2 + p3 * p3 * p3;\n    const center = 0.5;\n    const threshold = center + 0.01;\n    if (discriminant < 0) {\n      const mp3 = -p / 3;\n      const mp33 = mp3 * mp3 * mp3;\n      const r = this.sqrt(mp33);\n      const t = -q / (2 * r);\n      const cosphi = this.range(t, -1, 1);\n      const phi = Math.acos(cosphi);\n      const crtr = this.cbrt(r);\n      const t1 = 2 * crtr;\n      const root12 = t1 * this.cos(phi / 3) - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n      if (this.abs(root2 - center) < threshold) {\n        return this.range(root2, 0, 1);\n      }\n      const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n      return this.range(root3, 0, 1);\n    }\n    if (discriminant == 0) {\n      let u12;\n      if (q2 < 0) {\n        u12 = this.cbrt(-q2);\n      } else {\n        u12 = -this.cbrt(q2);\n      }\n      const root12 = 2 * u12 - ba / 3;\n      if (this.abs(root12 - center) < threshold) {\n        return this.range(root12, 0, 1);\n      }\n      const root2 = -u12 - ba / 3;\n      return this.range(root2, 0, 1);\n    }\n    const sd = this.sqrt(discriminant);\n    const u1 = this.cbrt(sd - q2);\n    const v1 = this.cbrt(sd + q2);\n    const root1 = u1 - v1 - ba / 3;\n    return this.range(root1, 0, 1);\n  }\n  constructor() {\n  }\n};\nlet CubismMath = _CubismMath;\nCubismMath.Epsilon = 1e-5;\nclass CubismMatrix44 {\n  constructor() {\n    this._tr = new Float32Array(16);\n    this.loadIdentity();\n  }\n  static multiply(a, b, dst) {\n    const c = new Float32Array([\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ]);\n    const n = 4;\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0; j < n; ++j) {\n        for (let k = 0; k < n; ++k) {\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n        }\n      }\n    }\n    for (let i = 0; i < 16; ++i) {\n      dst[i] = c[i];\n    }\n  }\n  loadIdentity() {\n    const c = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    this.setMatrix(c);\n  }\n  setMatrix(tr) {\n    for (let i = 0; i < 16; ++i) {\n      this._tr[i] = tr[i];\n    }\n  }\n  getArray() {\n    return this._tr;\n  }\n  getScaleX() {\n    return this._tr[0];\n  }\n  getScaleY() {\n    return this._tr[5];\n  }\n  getTranslateX() {\n    return this._tr[12];\n  }\n  getTranslateY() {\n    return this._tr[13];\n  }\n  transformX(src) {\n    return this._tr[0] * src + this._tr[12];\n  }\n  transformY(src) {\n    return this._tr[5] * src + this._tr[13];\n  }\n  invertTransformX(src) {\n    return (src - this._tr[12]) / this._tr[0];\n  }\n  invertTransformY(src) {\n    return (src - this._tr[13]) / this._tr[5];\n  }\n  translateRelative(x, y) {\n    const tr1 = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      x,\n      y,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  translate(x, y) {\n    this._tr[12] = x;\n    this._tr[13] = y;\n  }\n  translateX(x) {\n    this._tr[12] = x;\n  }\n  translateY(y) {\n    this._tr[13] = y;\n  }\n  scaleRelative(x, y) {\n    const tr1 = new Float32Array([\n      x,\n      0,\n      0,\n      0,\n      0,\n      y,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\n  }\n  scale(x, y) {\n    this._tr[0] = x;\n    this._tr[5] = y;\n  }\n  multiplyByMatrix(m) {\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n  }\n  clone() {\n    const cloneMatrix = new CubismMatrix44();\n    for (let i = 0; i < this._tr.length; i++) {\n      cloneMatrix._tr[i] = this._tr[i];\n    }\n    return cloneMatrix;\n  }\n}\nclass CubismRenderer {\n  initialize(model) {\n    this._model = model;\n  }\n  drawModel() {\n    if (this.getModel() == null)\n      return;\n    this.doDrawModel();\n  }\n  setMvpMatrix(matrix44) {\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n  }\n  getMvpMatrix() {\n    return this._mvpMatrix4x4;\n  }\n  setModelColor(red, green, blue, alpha) {\n    if (red < 0) {\n      red = 0;\n    } else if (red > 1) {\n      red = 1;\n    }\n    if (green < 0) {\n      green = 0;\n    } else if (green > 1) {\n      green = 1;\n    }\n    if (blue < 0) {\n      blue = 0;\n    } else if (blue > 1) {\n      blue = 1;\n    }\n    if (alpha < 0) {\n      alpha = 0;\n    } else if (alpha > 1) {\n      alpha = 1;\n    }\n    this._modelColor.R = red;\n    this._modelColor.G = green;\n    this._modelColor.B = blue;\n    this._modelColor.A = alpha;\n  }\n  getModelColor() {\n    return Object.assign({}, this._modelColor);\n  }\n  setIsPremultipliedAlpha(enable) {\n    this._isPremultipliedAlpha = enable;\n  }\n  isPremultipliedAlpha() {\n    return this._isPremultipliedAlpha;\n  }\n  setIsCulling(culling) {\n    this._isCulling = culling;\n  }\n  isCulling() {\n    return this._isCulling;\n  }\n  setAnisotropy(n) {\n    this._anisortopy = n;\n  }\n  getAnisotropy() {\n    return this._anisortopy;\n  }\n  getModel() {\n    return this._model;\n  }\n  constructor() {\n    this._isCulling = false;\n    this._isPremultipliedAlpha = false;\n    this._anisortopy = 0;\n    this._modelColor = new CubismTextureColor();\n    this._mvpMatrix4x4 = new CubismMatrix44();\n    this._mvpMatrix4x4.loadIdentity();\n  }\n}\nvar CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n  CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n  return CubismBlendMode2;\n})(CubismBlendMode || {});\nclass CubismTextureColor {\n  constructor() {\n    this.R = 1;\n    this.G = 1;\n    this.B = 1;\n    this.A = 1;\n  }\n}\nlet s_isStarted = false;\nlet s_isInitialized = false;\nlet s_option = void 0;\nconst Constant = {\n  vertexOffset: 0,\n  vertexStep: 2\n};\nclass CubismFramework {\n  static startUp(option) {\n    if (s_isStarted) {\n      CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n      return s_isStarted;\n    }\n    if (Live2DCubismCore._isStarted) {\n      s_isStarted = true;\n      return true;\n    }\n    Live2DCubismCore._isStarted = true;\n    s_option = option;\n    if (s_option) {\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n    }\n    s_isStarted = true;\n    if (s_isStarted) {\n      const version = Live2DCubismCore.Version.csmGetVersion();\n      const major = (version & 4278190080) >> 24;\n      const minor = (version & 16711680) >> 16;\n      const patch = version & 65535;\n      const versionNumber = version;\n      CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n    }\n    CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n    return s_isStarted;\n  }\n  static cleanUp() {\n    s_isStarted = false;\n    s_isInitialized = false;\n    s_option = void 0;\n  }\n  static initialize() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n      return;\n    }\n    s_isInitialized = true;\n    CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n  }\n  static dispose() {\n    if (!s_isStarted) {\n      CubismLogWarning(\"CubismFramework is not started.\");\n      return;\n    }\n    if (!s_isInitialized) {\n      CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n      return;\n    }\n    CubismRenderer.staticRelease();\n    s_isInitialized = false;\n    CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n  }\n  static isStarted() {\n    return s_isStarted;\n  }\n  static isInitialized() {\n    return s_isInitialized;\n  }\n  static coreLogFunction(message) {\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n      return;\n    }\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\n  }\n  static getLoggingLevel() {\n    if (s_option != null) {\n      return s_option.loggingLevel;\n    }\n    return LogLevel.LogLevel_Off;\n  }\n  constructor() {\n  }\n}\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n  LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n  LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n  LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n  LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n  LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CSM_ASSERT = () => {\n};\nfunction CubismLogVerbose(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Verbose, \"[CSM][V]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogDebug(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogInfo(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogWarning(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n}\nfunction CubismLogError(fmt, ...args) {\n  CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n}\nclass CubismDebug {\n  static print(logLevel, format, args) {\n    if (logLevel < CubismFramework.getLoggingLevel()) {\n      return;\n    }\n    const logPrint = CubismFramework.coreLogFunction;\n    if (!logPrint)\n      return;\n    const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n      return args[k];\n    });\n    logPrint(buffer);\n  }\n  static dumpBytes(logLevel, data, length) {\n    for (let i = 0; i < length; i++) {\n      if (i % 16 == 0 && i > 0)\n        this.print(logLevel, \"\\n\");\n      else if (i % 8 == 0 && i > 0)\n        this.print(logLevel, \"  \");\n      this.print(logLevel, \"{0} \", [data[i] & 255]);\n    }\n    this.print(logLevel, \"\\n\");\n  }\n  constructor() {\n  }\n}\nclass CubismModel {\n  update() {\n    this._model.update();\n    this._model.drawables.resetDynamicFlags();\n  }\n  getCanvasWidth() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n  }\n  getCanvasHeight() {\n    if (this._model == null) {\n      return 0;\n    }\n    return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n  }\n  saveParameters() {\n    const parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    for (let i = 0; i < parameterCount; ++i) {\n      if (i < savedParameterCount) {\n        this._savedParameters[i] = this._parameterValues[i];\n      } else {\n        this._savedParameters.push(this._parameterValues[i]);\n      }\n    }\n  }\n  getModel() {\n    return this._model;\n  }\n  getPartIndex(partId) {\n    let partIndex;\n    const partCount = this._model.parts.count;\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\n      if (partId == this._partIds[partIndex]) {\n        return partIndex;\n      }\n    }\n    if (partId in this._notExistPartId) {\n      return this._notExistPartId[partId];\n    }\n    partIndex = partCount + this._notExistPartId.length;\n    this._notExistPartId[partId] = partIndex;\n    this._notExistPartOpacities[partIndex] = 0;\n    return partIndex;\n  }\n  getPartCount() {\n    return this._model.parts.count;\n  }\n  setPartOpacityByIndex(partIndex, opacity) {\n    if (partIndex in this._notExistPartOpacities) {\n      this._notExistPartOpacities[partIndex] = opacity;\n      return;\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    this._partOpacities[partIndex] = opacity;\n  }\n  setPartOpacityById(partId, opacity) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return;\n    }\n    this.setPartOpacityByIndex(index, opacity);\n  }\n  getPartOpacityByIndex(partIndex) {\n    if (partIndex in this._notExistPartOpacities) {\n      return this._notExistPartOpacities[partIndex];\n    }\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n    return this._partOpacities[partIndex];\n  }\n  getPartOpacityById(partId) {\n    const index = this.getPartIndex(partId);\n    if (index < 0) {\n      return 0;\n    }\n    return this.getPartOpacityByIndex(index);\n  }\n  getParameterIndex(parameterId) {\n    let parameterIndex;\n    const idCount = this._model.parameters.count;\n\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n      if (parameterId != this._parameterIds[parameterIndex]) {\n        continue;\n      }\n      return parameterIndex;\n    }\n\n    if (parameterId in this._notExistParameterId) {\n      return this._notExistParameterId[parameterId];\n    }\n\n    parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n    this._notExistParameterId[parameterId] = parameterIndex;\n    this._notExistParameterValues[parameterIndex] = 0;\n    return parameterIndex;\n\n  }\n  getParameterCount() {\n    return this._model.parameters.count;\n  }\n  getParameterMaximumValue(parameterIndex) {\n    return this._model.parameters.maximumValues[parameterIndex];\n  }\n  getParameterMinimumValue(parameterIndex) {\n    return this._model.parameters.minimumValues[parameterIndex];\n  }\n  getParameterDefaultValue(parameterIndex) {\n    return this._model.parameters.defaultValues[parameterIndex];\n  }\n  getParameterValueByIndex(parameterIndex) {\n    if (parameterIndex in this._notExistParameterValues) {\n      return this._notExistParameterValues[parameterIndex];\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    return this._parameterValues[parameterIndex];\n  }\n  getParameterValueById(parameterId) {\n    const parameterIndex = this.getParameterIndex(parameterId);\n    return this.getParameterValueByIndex(parameterIndex);\n  }\n  setParameterValueByIndex(parameterIndex, value, weight = 1,user=false) {\n\n    // let p=this.getParameterIndex(\"ParamMouthOpenY\");\n    //\n    // if(parameterIndex in this._notExistParameterValues){\n    //   p=this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\");\n    // }\n    let p;\n\n    if (this._model.parameters.ids.includes(\"ParamMouthOpenY\")){\n      p = this.getParameterIndex(\"ParamMouthOpenY\")\n    }\n\n    if (this._model.parameters.ids.includes(\"PARAM_MOUTH_OPEN_Y\")){\n      p = this.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\n    }\n\n    if (this._model.parameters.ids.includes(\"ParamMouthA\")){\n      p = this.getParameterIndex(\"ParamMouthA\")\n    }\n\n    if (parameterIndex in this._notExistParameterValues) {\n      this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n      return;\n    }\n    CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\n      value = this._model.parameters.maximumValues[parameterIndex];\n    }\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\n      value = this._model.parameters.minimumValues[parameterIndex];\n    }\n\n    if (parameterIndex != p || user){\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n\n  }\n  setParameterValueById(parameterId, value, weight = 1,user=false) {\n    const index = this.getParameterIndex(parameterId);\n    this.setParameterValueByIndex(index, value, weight,user);\n  }\n  addParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n  }\n  addParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.addParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueById(parameterId, value, weight = 1) {\n    const index = this.getParameterIndex(parameterId);\n    this.multiplyParameterValueByIndex(index, value, weight);\n  }\n  multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n    this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n  }\n  getDrawableIds() {\n    return this._drawableIds.slice();\n  }\n  getDrawableIndex(drawableId) {\n    const drawableCount = this._model.drawables.count;\n    for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n      if (this._drawableIds[drawableIndex] == drawableId) {\n        return drawableIndex;\n      }\n    }\n    return -1;\n  }\n  getDrawableCount() {\n    return this._model.drawables.count;\n  }\n  getDrawableId(drawableIndex) {\n    return this._model.drawables.ids[drawableIndex];\n  }\n  getDrawableRenderOrders() {\n    return this._model.drawables.renderOrders;\n  }\n  getDrawableTextureIndices(drawableIndex) {\n    return this._model.drawables.textureIndices[drawableIndex];\n  }\n  getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableVertexIndexCount(drawableIndex) {\n    return this._model.drawables.indexCounts[drawableIndex];\n  }\n  getDrawableVertexCount(drawableIndex) {\n    return this._model.drawables.vertexCounts[drawableIndex];\n  }\n  getDrawableVertices(drawableIndex) {\n    return this.getDrawableVertexPositions(drawableIndex);\n  }\n  getDrawableVertexIndices(drawableIndex) {\n    return this._model.drawables.indices[drawableIndex];\n  }\n  getDrawableVertexPositions(drawableIndex) {\n    return this._model.drawables.vertexPositions[drawableIndex];\n  }\n  getDrawableVertexUvs(drawableIndex) {\n    return this._model.drawables.vertexUvs[drawableIndex];\n  }\n  getDrawableOpacity(drawableIndex) {\n    return this._model.drawables.opacities[drawableIndex];\n  }\n  getDrawableCulling(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n  }\n  getDrawableBlendMode(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n  }\n  getDrawableInvertedMaskBit(drawableIndex) {\n    const constantFlags = this._model.drawables.constantFlags;\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n  }\n  getDrawableMasks() {\n    return this._model.drawables.masks;\n  }\n  getDrawableMaskCounts() {\n    return this._model.drawables.maskCounts;\n  }\n  isUsingMasking() {\n    for (let d = 0; d < this._model.drawables.count; ++d) {\n      if (this._model.drawables.maskCounts[d] <= 0) {\n        continue;\n      }\n      return true;\n    }\n    return false;\n  }\n  getDrawableDynamicFlagIsVisible(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n    const dynamicFlags = this._model.drawables.dynamicFlags;\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n  }\n  loadParameters() {\n    let parameterCount = this._model.parameters.count;\n    const savedParameterCount = this._savedParameters.length;\n    if (parameterCount > savedParameterCount) {\n      parameterCount = savedParameterCount;\n    }\n    for (let i = 0; i < parameterCount; ++i) {\n      this._parameterValues[i] = this._savedParameters[i];\n    }\n  }\n  initialize() {\n    this._parameterValues = this._model.parameters.values;\n    this._partOpacities = this._model.parts.opacities;\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\n    {\n      const parameterIds = this._model.parameters.ids;\n      const parameterCount = this._model.parameters.count;\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterIds.push(parameterIds[i]);\n      }\n    }\n    {\n      const partIds = this._model.parts.ids;\n      const partCount = this._model.parts.count;\n      for (let i = 0; i < partCount; ++i) {\n        this._partIds.push(partIds[i]);\n      }\n    }\n    {\n      const drawableIds = this._model.drawables.ids;\n      const drawableCount = this._model.drawables.count;\n      for (let i = 0; i < drawableCount; ++i) {\n        this._drawableIds.push(drawableIds[i]);\n      }\n    }\n  }\n  constructor(model) {\n    this._model = model;\n    this._savedParameters = [];\n    this._parameterIds = [];\n    this._drawableIds = [];\n    this._partIds = [];\n    this._notExistPartId = {};\n    this._notExistParameterId = {};\n    this._notExistParameterValues = {};\n    this._notExistPartOpacities = {};\n    this.initialize();\n  }\n  release() {\n    this._model.release();\n    this._model = void 0;\n  }\n}\nclass CubismMoc {\n  static create(mocBytes) {\n    const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n    if (moc) {\n      return new CubismMoc(moc);\n    }\n    throw new Error(\"Unknown error\");\n  }\n  createModel() {\n    let cubismModel;\n    const model = Live2DCubismCore.Model.fromMoc(this._moc);\n    if (model) {\n      cubismModel = new CubismModel(model);\n      ++this._modelCount;\n      return cubismModel;\n    }\n    throw new Error(\"Unknown error\");\n  }\n  deleteModel(model) {\n    if (model != null) {\n      --this._modelCount;\n    }\n  }\n  constructor(moc) {\n    this._moc = moc;\n    this._modelCount = 0;\n  }\n  release() {\n    this._moc._release();\n    this._moc = void 0;\n  }\n}\nclass CubismModelUserDataJson {\n  constructor(json, size) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getUserDataCount() {\n    return this._json.Meta.UserDataCount;\n  }\n  getTotalUserDataSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getUserDataTargetType(i) {\n    return this._json.UserData[i].Target;\n  }\n  getUserDataId(i) {\n    return this._json.UserData[i].Id;\n  }\n  getUserDataValue(i) {\n    return this._json.UserData[i].Value;\n  }\n}\nconst ArtMesh = \"ArtMesh\";\nclass CubismModelUserData {\n  static create(json, size) {\n    const ret = new CubismModelUserData();\n    ret.parseUserData(json, size);\n    return ret;\n  }\n  getArtMeshUserDatas() {\n    return this._artMeshUserDataNode;\n  }\n  parseUserData(data, size) {\n    let json = new CubismModelUserDataJson(data, size);\n    const typeOfArtMesh = ArtMesh;\n    const nodeCount = json.getUserDataCount();\n    for (let i = 0; i < nodeCount; i++) {\n      const addNode = {\n        targetId: json.getUserDataId(i),\n        targetType: json.getUserDataTargetType(i),\n        value: json.getUserDataValue(i)\n      };\n      this._userDataNodes.push(addNode);\n      if (addNode.targetType == typeOfArtMesh) {\n        this._artMeshUserDataNode.push(addNode);\n      }\n    }\n    json.release();\n  }\n  constructor() {\n    this._userDataNodes = [];\n    this._artMeshUserDataNode = [];\n  }\n  release() {\n    this._userDataNodes = null;\n  }\n}\nclass ACubismMotion {\n  constructor() {\n    this._fadeInSeconds = -1;\n    this._fadeOutSeconds = -1;\n    this._weight = 1;\n    this._offsetSeconds = 0;\n    this._firedEventValues = [];\n  }\n  release() {\n    this._weight = 0;\n  }\n  updateParameters(model, motionQueueEntry, userTimeSeconds) {\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n      return;\n    }\n    if (!motionQueueEntry.isStarted()) {\n      motionQueueEntry.setIsStarted(true);\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n      const duration = this.getDuration();\n      if (motionQueueEntry.getEndTime() < 0) {\n        motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n      }\n    }\n    let fadeWeight = this._weight;\n    const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n    this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n    if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n      motionQueueEntry.setIsFinished(true);\n    }\n  }\n  setFadeInTime(fadeInSeconds) {\n    this._fadeInSeconds = fadeInSeconds;\n  }\n  setFadeOutTime(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n  }\n  getFadeOutTime() {\n    return this._fadeOutSeconds;\n  }\n  getFadeInTime() {\n    return this._fadeInSeconds;\n  }\n  setWeight(weight) {\n    this._weight = weight;\n  }\n  getWeight() {\n    return this._weight;\n  }\n  getDuration() {\n    return -1;\n  }\n  getLoopDuration() {\n    return -1;\n  }\n  setOffsetTime(offsetSeconds) {\n    this._offsetSeconds = offsetSeconds;\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    return this._firedEventValues;\n  }\n  setFinishedMotionHandler(onFinishedMotionHandler) {\n    this._onFinishedMotion = onFinishedMotionHandler;\n  }\n  getFinishedMotionHandler() {\n    return this._onFinishedMotion;\n  }\n}\nconst DefaultFadeTime = 1;\nclass CubismExpressionMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._parameters = [];\n  }\n  static create(json) {\n    const expression = new CubismExpressionMotion();\n    const fadeInTime = json.FadeInTime;\n    const fadeOutTime = json.FadeOutTime;\n    expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n    expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n    const parameters = json.Parameters || [];\n    for (let i = 0; i < parameters.length; ++i) {\n      const param = parameters[i];\n      const parameterId = param.Id;\n      const value = param.Value;\n      let blendType;\n      switch (param.Blend) {\n        case \"Multiply\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n          break;\n        case \"Overwrite\":\n          blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n          break;\n        case \"Add\":\n        default:\n          blendType = ExpressionBlendType.ExpressionBlendType_Add;\n          break;\n      }\n      const item = {\n        parameterId,\n        blendType,\n        value\n      };\n      expression._parameters.push(item);\n    }\n    return expression;\n  }\n  doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n    for (let i = 0; i < this._parameters.length; ++i) {\n      const parameter = this._parameters[i];\n      switch (parameter.blendType) {\n        case ExpressionBlendType.ExpressionBlendType_Add: {\n          model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\n          model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n          model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n          break;\n        }\n      }\n    }\n  }\n}\nvar ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n  ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n  return ExpressionBlendType2;\n})(ExpressionBlendType || {});\nvar CubismConfig;\n((CubismConfig2) => {\n  CubismConfig2.supportMoreMaskDivisions = true;\n  CubismConfig2.setOpacityFromMotion = false;\n})(CubismConfig || (CubismConfig = {}));\nvar CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n  CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n  return CubismMotionCurveTarget2;\n})(CubismMotionCurveTarget || {});\nvar CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n  CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n  return CubismMotionSegmentType2;\n})(CubismMotionSegmentType || {});\nclass CubismMotionPoint {\n  constructor(time = 0, value = 0) {\n    this.time = time;\n    this.value = value;\n  }\n}\nclass CubismMotionSegment {\n  constructor() {\n    this.basePointIndex = 0;\n    this.segmentType = 0;\n  }\n}\nclass CubismMotionCurve {\n  constructor() {\n    this.id = \"\";\n    this.type = 0;\n    this.segmentCount = 0;\n    this.baseSegmentIndex = 0;\n    this.fadeInTime = 0;\n    this.fadeOutTime = 0;\n  }\n}\nclass CubismMotionEvent {\n  constructor() {\n    this.fireTime = 0;\n    this.value = \"\";\n  }\n}\nclass CubismMotionData {\n  constructor() {\n    this.duration = 0;\n    this.loop = false;\n    this.curveCount = 0;\n    this.eventCount = 0;\n    this.fps = 0;\n    this.curves = [];\n    this.segments = [];\n    this.points = [];\n    this.events = [];\n  }\n}\nclass CubismMotionJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getMotionDuration() {\n    return this._json.Meta.Duration;\n  }\n  isMotionLoop() {\n    return this._json.Meta.Loop || false;\n  }\n  getEvaluationOptionFlag(flagType) {\n    if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n      return !!this._json.Meta.AreBeziersRestricted;\n    }\n    return false;\n  }\n  getMotionCurveCount() {\n    return this._json.Meta.CurveCount;\n  }\n  getMotionFps() {\n    return this._json.Meta.Fps;\n  }\n  getMotionTotalSegmentCount() {\n    return this._json.Meta.TotalSegmentCount;\n  }\n  getMotionTotalPointCount() {\n    return this._json.Meta.TotalPointCount;\n  }\n  getMotionFadeInTime() {\n    return this._json.Meta.FadeInTime;\n  }\n  getMotionFadeOutTime() {\n    return this._json.Meta.FadeOutTime;\n  }\n  getMotionCurveTarget(curveIndex) {\n    return this._json.Curves[curveIndex].Target;\n  }\n  getMotionCurveId(curveIndex) {\n    return this._json.Curves[curveIndex].Id;\n  }\n  getMotionCurveFadeInTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeInTime;\n  }\n  getMotionCurveFadeOutTime(curveIndex) {\n    return this._json.Curves[curveIndex].FadeOutTime;\n  }\n  getMotionCurveSegmentCount(curveIndex) {\n    return this._json.Curves[curveIndex].Segments.length;\n  }\n  getMotionCurveSegment(curveIndex, segmentIndex) {\n    return this._json.Curves[curveIndex].Segments[segmentIndex];\n  }\n  getEventCount() {\n    return this._json.Meta.UserDataCount || 0;\n  }\n  getTotalEventValueSize() {\n    return this._json.Meta.TotalUserDataSize;\n  }\n  getEventTime(userDataIndex) {\n    return this._json.UserData[userDataIndex].Time;\n  }\n  getEventValue(userDataIndex) {\n    return this._json.UserData[userDataIndex].Value;\n  }\n}\nvar EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n  EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n  return EvaluationOptionFlag2;\n})(EvaluationOptionFlag || {});\nconst EffectNameEyeBlink = \"EyeBlink\";\nconst EffectNameLipSync = \"LipSync\";\nconst TargetNameModel = \"Model\";\nconst TargetNameParameter = \"Parameter\";\nconst TargetNamePartOpacity = \"PartOpacity\";\nconst UseOldBeziersCurveMotion = false;\nfunction lerpPoints(a, b, t) {\n  const result = new CubismMotionPoint();\n  result.time = a.time + (b.time - a.time) * t;\n  result.value = a.value + (b.value - a.value) * t;\n  return result;\n}\nfunction linearEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[1].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  return points[0].value + (points[1].value - points[0].value) * t;\n}\nfunction bezierEvaluate(points, time) {\n  let t = (time - points[0].time) / (points[3].time - points[0].time);\n  if (t < 0) {\n    t = 0;\n  }\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction bezierEvaluateCardanoInterpretation(points, time) {\n  const x = time;\n  const x1 = points[0].time;\n  const x2 = points[3].time;\n  const cx1 = points[1].time;\n  const cx2 = points[2].time;\n  const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n  const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n  const c = 3 * cx1 - 3 * x1;\n  const d = x1 - x;\n  const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n  const p01 = lerpPoints(points[0], points[1], t);\n  const p12 = lerpPoints(points[1], points[2], t);\n  const p23 = lerpPoints(points[2], points[3], t);\n  const p012 = lerpPoints(p01, p12, t);\n  const p123 = lerpPoints(p12, p23, t);\n  return lerpPoints(p012, p123, t).value;\n}\nfunction steppedEvaluate(points, time) {\n  return points[0].value;\n}\nfunction inverseSteppedEvaluate(points, time) {\n  return points[1].value;\n}\nfunction evaluateCurve(motionData, index, time) {\n  const curve = motionData.curves[index];\n  let target = -1;\n  const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n  let pointPosition = 0;\n  for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n    pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n    if (motionData.points[pointPosition].time > time) {\n      target = i;\n      break;\n    }\n  }\n  if (target == -1) {\n    return motionData.points[pointPosition].value;\n  }\n  const segment = motionData.segments[target];\n  return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n}\nclass CubismMotion extends ACubismMotion {\n  constructor() {\n    super();\n    this._eyeBlinkParameterIds = [];\n    this._lipSyncParameterIds = [];\n    this._sourceFrameRate = 30;\n    this._loopDurationSeconds = -1;\n    this._isLoop = false;\n    this._isLoopFadeIn = true;\n    this._lastWeight = 0;\n  }\n  static create(json, onFinishedMotionHandler) {\n    const ret = new CubismMotion();\n    ret.parse(json);\n    ret._sourceFrameRate = ret._motionData.fps;\n    ret._loopDurationSeconds = ret._motionData.duration;\n    ret._onFinishedMotion = onFinishedMotionHandler;\n    return ret;\n  }\n  doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n    if (this._modelCurveIdEyeBlink == null) {\n      this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n    }\n    if (this._modelCurveIdLipSync == null) {\n      this._modelCurveIdLipSync = EffectNameLipSync;\n    }\n    let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n    if (timeOffsetSeconds < 0) {\n      timeOffsetSeconds = 0;\n    }\n    let lipSyncValue = Number.MAX_VALUE;\n    let eyeBlinkValue = Number.MAX_VALUE;\n    const MaxTargetSize = 64;\n    let lipSyncFlags = 0;\n    let eyeBlinkFlags = 0;\n    if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n    }\n    if (this._lipSyncParameterIds.length > MaxTargetSize) {\n      CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n    }\n    const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n    const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n    let value;\n    let c, parameterIndex;\n    let time = timeOffsetSeconds;\n    if (this._isLoop) {\n      while (time > this._motionData.duration) {\n        time -= this._motionData.duration;\n      }\n    }\n    const curves = this._motionData.curves;\n    for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (curves[c].id == this._modelCurveIdEyeBlink) {\n        eyeBlinkValue = value;\n      } else if (curves[c].id == this._modelCurveIdLipSync) {\n        lipSyncValue = value;\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n      parameterIndex = model.getParameterIndex(curves[c].id);\n      if (parameterIndex == -1) {\n        continue;\n      }\n      const sourceValue = model.getParameterValueByIndex(parameterIndex);\n      value = evaluateCurve(this._motionData, c, time);\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n            value *= eyeBlinkValue;\n            eyeBlinkFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          if (this._lipSyncParameterIds[i] == curves[c].id) {\n            value += lipSyncValue;\n            lipSyncFlags |= 1 << i;\n            break;\n          }\n        }\n      }\n      let v;\n      if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n        v = sourceValue + (value - sourceValue) * fadeWeight;\n      } else {\n        let fin;\n        let fout;\n        if (curves[c].fadeInTime < 0) {\n          fin = tmpFadeIn;\n        } else {\n          fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n        }\n        if (curves[c].fadeOutTime < 0) {\n          fout = tmpFadeOut;\n        } else {\n          fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n        }\n        const paramWeight = this._weight * fin * fout;\n        v = sourceValue + (value - sourceValue) * paramWeight;\n      }\n      model.setParameterValueByIndex(parameterIndex, v, 1);\n    }\n    {\n      if (eyeBlinkValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n          if (eyeBlinkFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n        }\n      }\n      if (lipSyncValue != Number.MAX_VALUE) {\n        for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n          const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n          if (lipSyncFlags >> i & 1) {\n            continue;\n          }\n          const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n          model.setParameterValueById(this._lipSyncParameterIds[i], v);\n        }\n      }\n    }\n    for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n      value = evaluateCurve(this._motionData, c, time);\n      if (CubismConfig.setOpacityFromMotion) {\n        model.setPartOpacityById(curves[c].id, value);\n      } else {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        model.setParameterValueByIndex(parameterIndex, value);\n      }\n    }\n    if (timeOffsetSeconds >= this._motionData.duration) {\n      if (this._isLoop) {\n        motionQueueEntry.setStartTime(userTimeSeconds);\n        if (this._isLoopFadeIn) {\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        }\n      } else {\n        if (this._onFinishedMotion) {\n          this._onFinishedMotion(this);\n        }\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    this._lastWeight = fadeWeight;\n  }\n  setIsLoop(loop) {\n    this._isLoop = loop;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setIsLoopFadeIn(loopFadeIn) {\n    this._isLoopFadeIn = loopFadeIn;\n  }\n  isLoopFadeIn() {\n    return this._isLoopFadeIn;\n  }\n  getDuration() {\n    return this._isLoop ? -1 : this._loopDurationSeconds;\n  }\n  getLoopDuration() {\n    return this._loopDurationSeconds;\n  }\n  setParameterFadeInTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeInTime = value;\n        return;\n      }\n    }\n  }\n  setParameterFadeOutTime(parameterId, value) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        curves[i].fadeOutTime = value;\n        return;\n      }\n    }\n  }\n  getParameterFadeInTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeInTime;\n      }\n    }\n    return -1;\n  }\n  getParameterFadeOutTime(parameterId) {\n    const curves = this._motionData.curves;\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\n      if (parameterId == curves[i].id) {\n        return curves[i].fadeOutTime;\n      }\n    }\n    return -1;\n  }\n  setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n    this._lipSyncParameterIds = lipSyncParameterIds;\n  }\n  release() {\n    this._motionData = void 0;\n  }\n  parse(motionJson) {\n    this._motionData = new CubismMotionData();\n    let json = new CubismMotionJson(motionJson);\n    this._motionData.duration = json.getMotionDuration();\n    this._motionData.loop = json.isMotionLoop();\n    this._motionData.curveCount = json.getMotionCurveCount();\n    this._motionData.fps = json.getMotionFps();\n    this._motionData.eventCount = json.getEventCount();\n    const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n    const fadeInSeconds = json.getMotionFadeInTime();\n    const fadeOutSeconds = json.getMotionFadeOutTime();\n    if (fadeInSeconds !== void 0) {\n      this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n    } else {\n      this._fadeInSeconds = 1;\n    }\n    if (fadeOutSeconds !== void 0) {\n      this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n    } else {\n      this._fadeOutSeconds = 1;\n    }\n    this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n    this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n    this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n    this._motionData.points = [];\n    let totalPointCount = 0;\n    let totalSegmentCount = 0;\n    for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n      const curve = this._motionData.curves[curveCount];\n      switch (json.getMotionCurveTarget(curveCount)) {\n        case TargetNameModel:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n          break;\n        case TargetNameParameter:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n          break;\n        case TargetNamePartOpacity:\n          curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n          break;\n        default:\n          CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n      }\n      curve.id = json.getMotionCurveId(curveCount);\n      curve.baseSegmentIndex = totalSegmentCount;\n      const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n      const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n      curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n      curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n      for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n        if (segmentPosition == 0) {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n          this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n          totalPointCount += 1;\n          segmentPosition += 2;\n        } else {\n          this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n        }\n        const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n        switch (segment) {\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n            this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n            } else {\n              this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n            }\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n            this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n            totalPointCount += 3;\n            segmentPosition += 7;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n            this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n            this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n            this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n            totalPointCount += 1;\n            segmentPosition += 3;\n            break;\n          }\n        }\n        ++curve.segmentCount;\n        ++totalSegmentCount;\n      }\n      this._motionData.curves.push(curve);\n    }\n    for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n      this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n      this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n    }\n    json.release();\n  }\n  getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n    this._firedEventValues.length = 0;\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\n      if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n        this._firedEventValues.push(this._motionData.events[u].value);\n      }\n    }\n    return this._firedEventValues;\n  }\n}\nclass CubismMotionQueueEntry {\n  constructor() {\n    this._autoDelete = false;\n    this._available = true;\n    this._finished = false;\n    this._started = false;\n    this._startTimeSeconds = -1;\n    this._fadeInStartTimeSeconds = 0;\n    this._endTimeSeconds = -1;\n    this._stateTimeSeconds = 0;\n    this._stateWeight = 0;\n    this._lastEventCheckSeconds = 0;\n    this._motionQueueEntryHandle = this;\n    this._fadeOutSeconds = 0;\n    this._isTriggeredFadeOut = false;\n  }\n  release() {\n    if (this._autoDelete && this._motion) {\n      this._motion.release();\n    }\n  }\n  setFadeOut(fadeOutSeconds) {\n    this._fadeOutSeconds = fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n  }\n  startFadeOut(fadeOutSeconds, userTimeSeconds) {\n    const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n    this._isTriggeredFadeOut = true;\n    if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n      this._endTimeSeconds = newEndTimeSeconds;\n    }\n  }\n  isFinished() {\n    return this._finished;\n  }\n  isStarted() {\n    return this._started;\n  }\n  getStartTime() {\n    return this._startTimeSeconds;\n  }\n  getFadeInStartTime() {\n    return this._fadeInStartTimeSeconds;\n  }\n  getEndTime() {\n    return this._endTimeSeconds;\n  }\n  setStartTime(startTime) {\n    this._startTimeSeconds = startTime;\n  }\n  setFadeInStartTime(startTime) {\n    this._fadeInStartTimeSeconds = startTime;\n  }\n  setEndTime(endTime) {\n    this._endTimeSeconds = endTime;\n  }\n  setIsFinished(f) {\n    this._finished = f;\n  }\n  setIsStarted(f) {\n    this._started = f;\n  }\n  isAvailable() {\n    return this._available;\n  }\n  setIsAvailable(v) {\n    this._available = v;\n  }\n  setState(timeSeconds, weight) {\n    this._stateTimeSeconds = timeSeconds;\n    this._stateWeight = weight;\n  }\n  getStateTime() {\n    return this._stateTimeSeconds;\n  }\n  getStateWeight() {\n    return this._stateWeight;\n  }\n  getLastCheckEventSeconds() {\n    return this._lastEventCheckSeconds;\n  }\n  setLastCheckEventSeconds(checkSeconds) {\n    this._lastEventCheckSeconds = checkSeconds;\n  }\n  isTriggeredFadeOut() {\n    return this._isTriggeredFadeOut;\n  }\n  getFadeOutSeconds() {\n    return this._fadeOutSeconds;\n  }\n}\nclass CubismMotionQueueManager {\n  constructor() {\n    this._userTimeSeconds = 0;\n    this._eventCustomData = null;\n    this._motions = [];\n  }\n  release() {\n    for (let i = 0; i < this._motions.length; ++i) {\n      if (this._motions[i]) {\n        this._motions[i].release();\n      }\n    }\n    this._motions = void 0;\n  }\n  startMotion(motion, autoDelete, userTimeSeconds) {\n    if (motion == null) {\n      return InvalidMotionQueueEntryHandleValue;\n    }\n    let motionQueueEntry;\n    for (let i = 0; i < this._motions.length; ++i) {\n      motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n    }\n    motionQueueEntry = new CubismMotionQueueEntry();\n    motionQueueEntry._autoDelete = autoDelete;\n    motionQueueEntry._motion = motion;\n    this._motions.push(motionQueueEntry);\n    return motionQueueEntry._motionQueueEntryHandle;\n  }\n  isFinished() {\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      if (!motionQueueEntry.isFinished()) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  isFinishedByHandle(motionQueueEntryNumber) {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        continue;\n      }\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n        return false;\n      }\n    }\n    return true;\n  }\n  stopAllMotions() {\n    for (let i = 0; i < this._motions.length; i++) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry != null) {\n        motionQueueEntry.release();\n      }\n    }\n    this._motions = [];\n  }\n  getCubismMotionQueueEntry(motionQueueEntryNumber) {\n    return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n  }\n  setEventCallback(callback, customData = null) {\n    this._eventCallBack = callback;\n    this._eventCustomData = customData;\n  }\n  doUpdateMotion(model, userTimeSeconds) {\n    let updated = false;\n    let i = 0;\n    while (i < this._motions.length) {\n      const motionQueueEntry = this._motions[i];\n      if (motionQueueEntry == null) {\n        this._motions.splice(i, 1);\n        continue;\n      }\n      const motion = motionQueueEntry._motion;\n      if (motion == null) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n        continue;\n      }\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n      updated = true;\n      const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n      for (let i2 = 0; i2 < firedList.length; ++i2) {\n        this._eventCallBack(this, firedList[i2], this._eventCustomData);\n      }\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n      if (motionQueueEntry.isFinished()) {\n        motionQueueEntry.release();\n        this._motions.splice(i, 1);\n      } else {\n        if (motionQueueEntry.isTriggeredFadeOut()) {\n          motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n        }\n        i++;\n      }\n    }\n    return updated;\n  }\n}\nconst InvalidMotionQueueEntryHandleValue = -1;\nclass CubismMotionManager extends CubismMotionQueueManager {\n  constructor() {\n    super();\n    this._currentPriority = 0;\n    this._reservePriority = 0;\n  }\n  getCurrentPriority() {\n    return this._currentPriority;\n  }\n  getReservePriority() {\n    return this._reservePriority;\n  }\n  setReservePriority(val) {\n    this._reservePriority = val;\n  }\n  startMotionPriority(motion, autoDelete, priority) {\n    if (priority == this._reservePriority) {\n      this._reservePriority = 0;\n    }\n    this._currentPriority = priority;\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\n  }\n  updateMotion(model, deltaTimeSeconds) {\n    this._userTimeSeconds += deltaTimeSeconds;\n    const updated = super.doUpdateMotion(model, this._userTimeSeconds);\n    if (this.isFinished()) {\n      this._currentPriority = 0;\n    }\n    return updated;\n  }\n  reserveMotion(priority) {\n    if (priority <= this._reservePriority || priority <= this._currentPriority) {\n      return false;\n    }\n    this._reservePriority = priority;\n    return true;\n  }\n}\nvar CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n  CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n  return CubismPhysicsTargetType2;\n})(CubismPhysicsTargetType || {});\nvar CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n  CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n  return CubismPhysicsSource2;\n})(CubismPhysicsSource || {});\nclass PhysicsJsonEffectiveForces {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsParticle {\n  constructor() {\n    this.initialPosition = new CubismVector2(0, 0);\n    this.position = new CubismVector2(0, 0);\n    this.lastPosition = new CubismVector2(0, 0);\n    this.lastGravity = new CubismVector2(0, 0);\n    this.force = new CubismVector2(0, 0);\n    this.velocity = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsSubRig {\n  constructor() {\n    this.normalizationPosition = {};\n    this.normalizationAngle = {};\n  }\n}\nclass CubismPhysicsInput {\n  constructor() {\n    this.source = {};\n  }\n}\nclass CubismPhysicsOutput {\n  constructor() {\n    this.destination = {};\n    this.translationScale = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsRig {\n  constructor() {\n    this.settings = [];\n    this.inputs = [];\n    this.outputs = [];\n    this.particles = [];\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nclass CubismPhysicsJson {\n  constructor(json) {\n    this._json = json;\n  }\n  release() {\n    this._json = void 0;\n  }\n  getGravity() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n    ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n    return ret;\n  }\n  getWind() {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.Meta.EffectiveForces.Wind.X;\n    ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n    return ret;\n  }\n  getSubRigCount() {\n    return this._json.Meta.PhysicsSettingCount;\n  }\n  getTotalInputCount() {\n    return this._json.Meta.TotalInputCount;\n  }\n  getTotalOutputCount() {\n    return this._json.Meta.TotalOutputCount;\n  }\n  getVertexCount() {\n    return this._json.Meta.VertexCount;\n  }\n  getNormalizationPositionMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n  }\n  getNormalizationPositionMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n  }\n  getNormalizationPositionDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n  }\n  getNormalizationAngleMinimumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n  }\n  getNormalizationAngleMaximumValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n  }\n  getNormalizationAngleDefaultValue(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n  }\n  getInputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n  }\n  getInputWeight(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n  }\n  getInputReflect(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n  }\n  getInputType(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n  }\n  getInputSourceId(physicsSettingIndex, inputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n  }\n  getOutputCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n  }\n  getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n  }\n  getOutputAngleScale(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n  }\n  getOutputWeight(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n  }\n  getOutputDestinationId(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n  }\n  getOutputType(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n  }\n  getOutputReflect(physicsSettingIndex, outputIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n  }\n  getParticleCount(physicsSettingIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n  }\n  getParticleMobility(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n  }\n  getParticleDelay(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n  }\n  getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n  }\n  getParticleRadius(physicsSettingIndex, vertexIndex) {\n    return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n  }\n  getParticlePosition(physicsSettingIndex, vertexIndex) {\n    const ret = new CubismVector2(0, 0);\n    ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n    ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n    return ret;\n  }\n}\nconst PhysicsTypeTagX = \"X\";\nconst PhysicsTypeTagY = \"Y\";\nconst PhysicsTypeTagAngle = \"Angle\";\nconst AirResistance = 5;\nconst MaximumWeight = 100;\nconst MovementThreshold = 1e-3;\nclass CubismPhysics {\n  static create(json) {\n    const ret = new CubismPhysics();\n    ret.parse(json);\n    ret._physicsRig.gravity.y = 0;\n    return ret;\n  }\n  evaluate(model, deltaTimeSeconds) {\n    let totalAngle;\n    let weight;\n    let radAngle;\n    let outputValue;\n    const totalTranslation = new CubismVector2();\n    let currentSetting;\n    let currentInput;\n    let currentOutput;\n    let currentParticles;\n    let parameterValue;\n    let parameterMaximumValue;\n    let parameterMinimumValue;\n    let parameterDefaultValue;\n    parameterValue = model.getModel().parameters.values;\n    parameterMaximumValue = model.getModel().parameters.maximumValues;\n    parameterMinimumValue = model.getModel().parameters.minimumValues;\n    parameterDefaultValue = model.getModel().parameters.defaultValues;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      totalAngle = { angle: 0 };\n      totalTranslation.x = 0;\n      totalTranslation.y = 0;\n      currentSetting = this._physicsRig.settings[settingIndex];\n      currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n      currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n      currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\n        weight = currentInput[i].weight / MaximumWeight;\n        if (currentInput[i].sourceParameterIndex == -1) {\n          currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n        }\n        currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n      }\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n      totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n      totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n      updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\n        const particleIndex = currentOutput[i].vertexIndex;\n        if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n          break;\n        }\n        if (currentOutput[i].destinationParameterIndex == -1) {\n          currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n        }\n        const translation = new CubismVector2();\n        translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n        translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n        outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n        const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n        const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n        updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n        for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n          parameterValue[offset] = outParameterValue[outParamIndex];\n        }\n      }\n    }\n  }\n  setOptions(options) {\n    this._options = options;\n  }\n  getOption() {\n    return this._options;\n  }\n  constructor() {\n    this._options = new Options();\n    this._options.gravity.y = -1;\n    this._options.gravity.x = 0;\n    this._options.wind.x = 0;\n    this._options.wind.y = 0;\n  }\n  release() {\n    this._physicsRig = void 0;\n  }\n  parse(physicsJson) {\n    this._physicsRig = new CubismPhysicsRig();\n    let json = new CubismPhysicsJson(physicsJson);\n    this._physicsRig.gravity = json.getGravity();\n    this._physicsRig.wind = json.getWind();\n    this._physicsRig.subRigCount = json.getSubRigCount();\n    let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n    for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n      const setting = new CubismPhysicsSubRig();\n      setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n      setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n      setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n      setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n      setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n      setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n      setting.inputCount = json.getInputCount(i);\n      setting.baseInputIndex = inputIndex;\n      inputIndex += setting.inputCount;\n      for (let j = 0; j < setting.inputCount; ++j) {\n        const input = new CubismPhysicsInput();\n        input.sourceParameterIndex = -1;\n        input.weight = json.getInputWeight(i, j);\n        input.reflect = json.getInputReflect(i, j);\n        switch (json.getInputType(i, j)) {\n          case PhysicsTypeTagX:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n            break;\n          case PhysicsTypeTagY:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n            break;\n          case PhysicsTypeTagAngle:\n            input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n            break;\n        }\n        input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        input.source.id = json.getInputSourceId(i, j);\n        this._physicsRig.inputs.push(input);\n      }\n      setting.outputCount = json.getOutputCount(i);\n      setting.baseOutputIndex = outputIndex;\n      outputIndex += setting.outputCount;\n      for (let j = 0; j < setting.outputCount; ++j) {\n        const output = new CubismPhysicsOutput();\n        output.destinationParameterIndex = -1;\n        output.vertexIndex = json.getOutputVertexIndex(i, j);\n        output.angleScale = json.getOutputAngleScale(i, j);\n        output.weight = json.getOutputWeight(i, j);\n        output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n        output.destination.id = json.getOutputDestinationId(i, j);\n        switch (json.getOutputType(i, j)) {\n          case PhysicsTypeTagX:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n            output.getValue = getOutputTranslationX;\n            output.getScale = getOutputScaleTranslationX;\n            break;\n          case PhysicsTypeTagY:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n            output.getValue = getOutputTranslationY;\n            output.getScale = getOutputScaleTranslationY;\n            break;\n          case PhysicsTypeTagAngle:\n            output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n            output.getValue = getOutputAngle;\n            output.getScale = getOutputScaleAngle;\n            break;\n        }\n        output.reflect = json.getOutputReflect(i, j);\n        this._physicsRig.outputs.push(output);\n      }\n      setting.particleCount = json.getParticleCount(i);\n      setting.baseParticleIndex = particleIndex;\n      particleIndex += setting.particleCount;\n      for (let j = 0; j < setting.particleCount; ++j) {\n        const particle = new CubismPhysicsParticle();\n        particle.mobility = json.getParticleMobility(i, j);\n        particle.delay = json.getParticleDelay(i, j);\n        particle.acceleration = json.getParticleAcceleration(i, j);\n        particle.radius = json.getParticleRadius(i, j);\n        particle.position = json.getParticlePosition(i, j);\n        this._physicsRig.particles.push(particle);\n      }\n      this._physicsRig.settings.push(setting);\n    }\n    this.initialize();\n    json.release();\n  }\n  initialize() {\n    let strand;\n    let currentSetting;\n    let radius;\n    for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n      currentSetting = this._physicsRig.settings[settingIndex];\n      strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n      strand[0].initialPosition = new CubismVector2(0, 0);\n      strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n      strand[0].lastGravity = new CubismVector2(0, -1);\n      strand[0].lastGravity.y *= -1;\n      strand[0].velocity = new CubismVector2(0, 0);\n      strand[0].force = new CubismVector2(0, 0);\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\n        radius = new CubismVector2(0, 0);\n        radius.y = strand[i].radius;\n        strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n        strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n        strand[i].lastGravity = new CubismVector2(0, -1);\n        strand[i].lastGravity.y *= -1;\n        strand[i].velocity = new CubismVector2(0, 0);\n        strand[i].force = new CubismVector2(0, 0);\n      }\n    }\n  }\n}\nclass Options {\n  constructor() {\n    this.gravity = new CubismVector2(0, 0);\n    this.wind = new CubismVector2(0, 0);\n  }\n}\nfunction getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n  targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n}\nfunction getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n  targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n}\nfunction getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.x;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue = translation.y;\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n  let outputValue;\n  if (particleIndex >= 2) {\n    parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n  } else {\n    parentGravity = parentGravity.multiplyByScaler(-1);\n  }\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\n  if (isInverted) {\n    outputValue *= -1;\n  }\n  return outputValue;\n}\nfunction getRangeValue(min, max) {\n  return Math.abs(Math.max(min, max) - Math.min(min, max));\n}\nfunction getDefaultValue(min, max) {\n  const minValue = Math.min(min, max);\n  return minValue + getRangeValue(min, max) / 2;\n}\nfunction getOutputScaleTranslationX(translationScale, angleScale) {\n  return translationScale.x;\n}\nfunction getOutputScaleTranslationY(translationScale, angleScale) {\n  return translationScale.y;\n}\nfunction getOutputScaleAngle(translationScale, angleScale) {\n  return angleScale;\n}\nfunction updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n  let totalRadian;\n  let delay;\n  let radian;\n  let currentGravity;\n  let direction = new CubismVector2(0, 0);\n  let velocity = new CubismVector2(0, 0);\n  let force = new CubismVector2(0, 0);\n  let newDirection = new CubismVector2(0, 0);\n  strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\n  currentGravity = CubismMath.radianToDirection(totalRadian);\n  currentGravity.normalize();\n  for (let i = 1; i < strandCount; ++i) {\n    strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n    strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n    delay = strand[i].delay * deltaTimeSeconds * 30;\n    direction = strand[i].position.substract(strand[i - 1].position);\n    radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n    direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n    direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n    strand[i].position = strand[i - 1].position.add(direction);\n    velocity = strand[i].velocity.multiplyByScaler(delay);\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n    strand[i].position = strand[i].position.add(velocity).add(force);\n    newDirection = strand[i].position.substract(strand[i - 1].position);\n    newDirection.normalize();\n    strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n      strand[i].position.x = 0;\n    }\n    if (delay != 0) {\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n    }\n    strand[i].force = new CubismVector2(0, 0);\n    strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n  }\n}\nfunction updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n  let outputScale;\n  let value;\n  let weight;\n  outputScale = output.getScale(output.translationScale, output.angleScale);\n  value = translation * outputScale;\n  if (value < parameterValueMinimum) {\n    if (value < output.valueBelowMinimum) {\n      output.valueBelowMinimum = value;\n    }\n    value = parameterValueMinimum;\n  } else if (value > parameterValueMaximum) {\n    if (value > output.valueExceededMaximum) {\n      output.valueExceededMaximum = value;\n    }\n    value = parameterValueMaximum;\n  }\n  weight = output.weight / MaximumWeight;\n  if (weight >= 1) {\n    parameterValue[0] = value;\n  } else {\n    value = parameterValue[0] * (1 - weight) + value * weight;\n    parameterValue[0] = value;\n  }\n}\nfunction normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n  let result = 0;\n  const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n  if (maxValue < value) {\n    value = maxValue;\n  }\n  const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n  if (minValue > value) {\n    value = minValue;\n  }\n  const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n  const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n  const middleNormValue = normalizedDefault;\n  const middleValue = getDefaultValue(minValue, maxValue);\n  const paramValue = value - middleValue;\n  switch (Math.sign(paramValue)) {\n    case 1: {\n      const nLength = maxNormValue - middleNormValue;\n      const pLength = maxValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case -1: {\n      const nLength = minNormValue - middleNormValue;\n      const pLength = minValue - middleValue;\n      if (pLength != 0) {\n        result = paramValue * (nLength / pLength);\n        result += middleNormValue;\n      }\n      break;\n    }\n    case 0: {\n      result = middleNormValue;\n      break;\n    }\n  }\n  return isInverted ? result : result * -1;\n}\nclass csmRect {\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n  }\n  getCenterX() {\n    return this.x + 0.5 * this.width;\n  }\n  getCenterY() {\n    return this.y + 0.5 * this.height;\n  }\n  getRight() {\n    return this.x + this.width;\n  }\n  getBottom() {\n    return this.y + this.height;\n  }\n  setRect(r) {\n    this.x = r.x;\n    this.y = r.y;\n    this.width = r.width;\n    this.height = r.height;\n  }\n  expand(w, h) {\n    this.x -= w;\n    this.y -= h;\n    this.width += w * 2;\n    this.height += h * 2;\n  }\n}\nconst ColorChannelCount = 4;\nconst shaderCount = 10;\nlet s_instance;\nlet s_viewport;\nlet s_fbo;\nclass CubismClippingManager_WebGL {\n  getChannelFlagAsColor(channelNo) {\n    return this._channelColors[channelNo];\n  }\n  getMaskRenderTexture() {\n    let ret = 0;\n    if (this._maskTexture && this._maskTexture.texture != 0) {\n      this._maskTexture.frameNo = this._currentFrameNo;\n      ret = this._maskTexture.texture;\n    }\n    if (ret == 0) {\n      const size = this._clippingMaskBufferSize;\n      this._colorBuffer = this.gl.createTexture();\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n      ret = this.gl.createFramebuffer();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n    }\n    return ret;\n  }\n  setGL(gl) {\n    this.gl = gl;\n  }\n  calcClippedDrawTotalBounds(model, clippingContext) {\n    let clippedDrawTotalMinX = Number.MAX_VALUE;\n    let clippedDrawTotalMinY = Number.MAX_VALUE;\n    let clippedDrawTotalMaxX = Number.MIN_VALUE;\n    let clippedDrawTotalMaxY = Number.MIN_VALUE;\n    const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n    for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n      const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n      const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n      const drawableVertexes = model.getDrawableVertices(drawableIndex);\n      let minX = Number.MAX_VALUE;\n      let minY = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE;\n      let maxY = Number.MIN_VALUE;\n      const loop = drawableVertexCount * Constant.vertexStep;\n      for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n        const x = drawableVertexes[pi];\n        const y = drawableVertexes[pi + 1];\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n      }\n      if (minX == Number.MAX_VALUE) {\n        continue;\n      }\n      if (minX < clippedDrawTotalMinX) {\n        clippedDrawTotalMinX = minX;\n      }\n      if (minY < clippedDrawTotalMinY) {\n        clippedDrawTotalMinY = minY;\n      }\n      if (maxX > clippedDrawTotalMaxX) {\n        clippedDrawTotalMaxX = maxX;\n      }\n      if (maxY > clippedDrawTotalMaxY) {\n        clippedDrawTotalMaxY = maxY;\n      }\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n        clippingContext._allClippedDrawRect.x = 0;\n        clippingContext._allClippedDrawRect.y = 0;\n        clippingContext._allClippedDrawRect.width = 0;\n        clippingContext._allClippedDrawRect.height = 0;\n        clippingContext._isUsing = false;\n      } else {\n        clippingContext._isUsing = true;\n        const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n        const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n        clippingContext._allClippedDrawRect.width = w;\n        clippingContext._allClippedDrawRect.height = h;\n      }\n    }\n  }\n  constructor() {\n    this._maskRenderTexture = null;\n    this._colorBuffer = null;\n    this._currentFrameNo = 0;\n    this._clippingMaskBufferSize = 256;\n    this._clippingContextListForMask = [];\n    this._clippingContextListForDraw = [];\n    this._channelColors = [];\n    this._tmpBoundsOnModel = new csmRect();\n    this._tmpMatrix = new CubismMatrix44();\n    this._tmpMatrixForMask = new CubismMatrix44();\n    this._tmpMatrixForDraw = new CubismMatrix44();\n    let tmp = new CubismTextureColor();\n    tmp.R = 1;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 1;\n    tmp.B = 0;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 1;\n    tmp.A = 0;\n    this._channelColors.push(tmp);\n    tmp = new CubismTextureColor();\n    tmp.R = 0;\n    tmp.G = 0;\n    tmp.B = 0;\n    tmp.A = 1;\n    this._channelColors.push(tmp);\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      if (this._clippingContextListForMask[i]) {\n        (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n      }\n    }\n    self._clippingContextListForMask = void 0;\n    self._clippingContextListForDraw = void 0;\n    if (this._maskTexture) {\n      (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n      self._maskTexture = void 0;\n    }\n    self._channelColors = void 0;\n    (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n    this._colorBuffer = null;\n  }\n  initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < drawableCount; i++) {\n      if (drawableMaskCounts[i] <= 0) {\n        this._clippingContextListForDraw.push(null);\n        continue;\n      }\n      let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n      if (clippingContext == null) {\n        clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n        this._clippingContextListForMask.push(clippingContext);\n      }\n      clippingContext.addClippedDrawable(i);\n      this._clippingContextListForDraw.push(clippingContext);\n    }\n  }\n  setupClippingContext(model, renderer) {\n    this._currentFrameNo++;\n    let usingClipCount = 0;\n    for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n      const cc = this._clippingContextListForMask[clipIndex];\n      this.calcClippedDrawTotalBounds(model, cc);\n      if (cc._isUsing) {\n        usingClipCount++;\n      }\n    }\n    if (usingClipCount > 0) {\n      this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n      this._maskRenderTexture = this.getMaskRenderTexture();\n      renderer.getMvpMatrix();\n      renderer.preDraw();\n      this.setupLayoutBounds(usingClipCount);\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n      this.gl.clearColor(1, 1, 1, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const clipContext = this._clippingContextListForMask[clipIndex];\n        const allClipedDrawRect = clipContext._allClippedDrawRect;\n        const layoutBoundsOnTex01 = clipContext._layoutBounds;\n        const MARGIN = 0.05;\n        this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n        this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n        const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n        const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(-1, -1);\n            this._tmpMatrix.scaleRelative(2, 2);\n          }\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n        }\n        {\n          this._tmpMatrix.loadIdentity();\n          {\n            this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n            this._tmpMatrix.scaleRelative(scaleX, scaleY);\n            this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n          }\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n        }\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n        const clipDrawCount = clipContext._clippingIdCount;\n        for (let i = 0; i < clipDrawCount; i++) {\n          const clipDrawIndex = clipContext._clippingIdList[i];\n          if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n            continue;\n          }\n          renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n          renderer.setClippingContextBufferForMask(clipContext);\n          renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n        }\n      }\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n      renderer.setClippingContextBufferForMask(null);\n      this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n    }\n  }\n  findSameClip(drawableMasks, drawableMaskCounts) {\n    for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n      const clippingContext = this._clippingContextListForMask[i];\n      const count = clippingContext._clippingIdCount;\n      if (count != drawableMaskCounts) {\n        continue;\n      }\n      let sameCount = 0;\n      for (let j = 0; j < count; j++) {\n        const clipId = clippingContext._clippingIdList[j];\n        for (let k = 0; k < count; k++) {\n          if (drawableMasks[k] == clipId) {\n            sameCount++;\n            break;\n          }\n        }\n      }\n      if (sameCount == count) {\n        return clippingContext;\n      }\n    }\n    return null;\n  }\n  setupLayoutBounds(usingClipCount) {\n    let div = usingClipCount / ColorChannelCount;\n    let mod = usingClipCount % ColorChannelCount;\n    div = ~~div;\n    mod = ~~mod;\n    let curClipIndex = 0;\n    for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n      const layoutCount = div + (channelNo < mod ? 1 : 0);\n      if (layoutCount == 0)\n        ;\n      else if (layoutCount == 1) {\n        const clipContext = this._clippingContextListForMask[curClipIndex++];\n        clipContext._layoutChannelNo = channelNo;\n        clipContext._layoutBounds.x = 0;\n        clipContext._layoutBounds.y = 0;\n        clipContext._layoutBounds.width = 1;\n        clipContext._layoutBounds.height = 1;\n      } else if (layoutCount == 2) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          xpos = ~~xpos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = 0;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 1;\n        }\n      } else if (layoutCount <= 4) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 2;\n          let ypos = i / 2;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos * 0.5;\n          cc._layoutBounds.y = ypos * 0.5;\n          cc._layoutBounds.width = 0.5;\n          cc._layoutBounds.height = 0.5;\n        }\n      } else if (layoutCount <= 9) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 3;\n          let ypos = i / 3;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 3;\n          cc._layoutBounds.y = ypos / 3;\n          cc._layoutBounds.width = 1 / 3;\n          cc._layoutBounds.height = 1 / 3;\n        }\n      } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n        for (let i = 0; i < layoutCount; i++) {\n          let xpos = i % 4;\n          let ypos = i / 4;\n          xpos = ~~xpos;\n          ypos = ~~ypos;\n          const cc = this._clippingContextListForMask[curClipIndex++];\n          cc._layoutChannelNo = channelNo;\n          cc._layoutBounds.x = xpos / 4;\n          cc._layoutBounds.y = ypos / 4;\n          cc._layoutBounds.width = 1 / 4;\n          cc._layoutBounds.height = 1 / 4;\n        }\n      } else {\n        CubismLogError(\"not supported mask count : {0}\", layoutCount);\n      }\n    }\n  }\n  getColorBuffer() {\n    return this._colorBuffer;\n  }\n  getClippingContextListForDraw() {\n    return this._clippingContextListForDraw;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingMaskBufferSize = size;\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingMaskBufferSize;\n  }\n}\nclass CubismRenderTextureResource {\n  constructor(frameNo, texture) {\n    this.frameNo = frameNo;\n    this.texture = texture;\n  }\n}\nclass CubismClippingContext {\n  constructor(manager, clippingDrawableIndices, clipCount) {\n    this._isUsing = false;\n    this._owner = manager;\n    this._clippingIdList = clippingDrawableIndices;\n    this._clippingIdCount = clipCount;\n    this._allClippedDrawRect = new csmRect();\n    this._layoutBounds = new csmRect();\n    this._clippedDrawableIndexList = [];\n    this._matrixForMask = new CubismMatrix44();\n    this._matrixForDraw = new CubismMatrix44();\n  }\n  release() {\n    const self = this;\n    self._layoutBounds = void 0;\n    self._allClippedDrawRect = void 0;\n    self._clippedDrawableIndexList = void 0;\n  }\n  addClippedDrawable(drawableIndex) {\n    this._clippedDrawableIndexList.push(drawableIndex);\n  }\n  getClippingManager() {\n    return this._owner;\n  }\n  setGl(gl) {\n    this._owner.setGL(gl);\n  }\n}\nclass CubismShader_WebGL {\n  static getInstance() {\n    if (s_instance == null) {\n      s_instance = new CubismShader_WebGL();\n      return s_instance;\n    }\n    return s_instance;\n  }\n  static deleteInstance() {\n    if (s_instance) {\n      s_instance.release();\n      s_instance = void 0;\n    }\n  }\n  constructor() {\n    this._shaderSets = [];\n  }\n  release() {\n    this.releaseShaderProgram();\n  }\n  setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n    if (!isPremultipliedAlpha) {\n      CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n    }\n    if (this._shaderSets.length == 0) {\n      this.generateShaders();\n    }\n    let SRC_COLOR;\n    let DST_COLOR;\n    let SRC_ALPHA;\n    let DST_ALPHA;\n    const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n    if (clippingContextBufferForMask != null) {\n      const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n      this.gl.useProgram(shaderSet.shaderProgram);\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      const channelNo = clippingContextBufferForMask._layoutChannelNo;\n      const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n      this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n      const rect = clippingContextBufferForMask._layoutBounds;\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n      SRC_COLOR = this.gl.ZERO;\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n      SRC_ALPHA = this.gl.ZERO;\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n    } else {\n      const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n      const masked = clippingContextBufferForDraw != null;\n      const offset = masked ? invertedMask ? 2 : 1 : 0;\n      let shaderSet;\n      switch (colorBlendMode) {\n        case CubismBlendMode.CubismBlendMode_Normal:\n        default:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ONE;\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n          break;\n        case CubismBlendMode.CubismBlendMode_Additive:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.ONE;\n          DST_COLOR = this.gl.ONE;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\n          shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n          SRC_COLOR = this.gl.DST_COLOR;\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n          SRC_ALPHA = this.gl.ZERO;\n          DST_ALPHA = this.gl.ONE;\n          break;\n      }\n      this.gl.useProgram(shaderSet.shaderProgram);\n      if (bufferData.vertex == null) {\n        bufferData.vertex = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (bufferData.uv == null) {\n        bufferData.uv = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n      this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n      if (clippingContextBufferForDraw != null) {\n        this.gl.activeTexture(this.gl.TEXTURE1);\n        const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n        const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n        const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n      this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n      this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n    }\n    if (bufferData.index == null) {\n      bufferData.index = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n  }\n  releaseShaderProgram() {\n    for (let i = 0; i < this._shaderSets.length; i++) {\n      this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n      this._shaderSets[i].shaderProgram = 0;\n    }\n    this._shaderSets = [];\n  }\n  generateShaders() {\n    for (let i = 0; i < shaderCount; i++) {\n      this._shaderSets.push({});\n    }\n    this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n    this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n    this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n    this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n    this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n    this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n    this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n    this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n    this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n    this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n    this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n    this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n    this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n    this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n    this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n    this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n    this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n    this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n    this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n    this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n    this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n    this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n    this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n    this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n    this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n    this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n    this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n    this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n    this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n    this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n    this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n    this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n    this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n    this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n    this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n    this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n    this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n    this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n    this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n    this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n    this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n    this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n    this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n    this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n    this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n    this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n    this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n    this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n    this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n    this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n    this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n    this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n    this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n    this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n    this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n    this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n    this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n    this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n    this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n    this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n    this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n    this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n    this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n    this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n  }\n  loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n    let shaderProgram = this.gl.createProgram();\n    let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n    if (!vertShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n    if (!fragShader) {\n      CubismLogError(\"Vertex shader compile error!\");\n      return 0;\n    }\n    this.gl.attachShader(shaderProgram, vertShader);\n    this.gl.attachShader(shaderProgram, fragShader);\n    this.gl.linkProgram(shaderProgram);\n    const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n    if (!linkStatus) {\n      CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      if (shaderProgram) {\n        this.gl.deleteProgram(shaderProgram);\n      }\n      return 0;\n    }\n    this.gl.deleteShader(vertShader);\n    this.gl.deleteShader(fragShader);\n    return shaderProgram;\n  }\n  compileShaderSource(shaderType, shaderSource) {\n    const source = shaderSource;\n    const shader = this.gl.createShader(shaderType);\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n    if (!shader) {\n      const log = this.gl.getShaderInfoLog(shader);\n      CubismLogError(\"Shader compile log: {0} \", log);\n    }\n    const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n    if (!status) {\n      this.gl.deleteShader(shader);\n      return null;\n    }\n    return shader;\n  }\n  setGl(gl) {\n    this.gl = gl;\n  }\n}\nvar ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n  ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n  ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n  return ShaderNames2;\n})(ShaderNames || {});\nconst vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\nconst vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\nconst fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\nconst fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\nconst fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\nclass CubismRenderer_WebGL extends CubismRenderer {\n  constructor() {\n    super();\n    this._clippingContextBufferForMask = null;\n    this._clippingContextBufferForDraw = null;\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this.firstDraw = true;\n    this._textures = {};\n    this._sortedDrawableIndexList = [];\n    this._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n  }\n  initialize(model) {\n    if (model.isUsingMasking()) {\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n    }\n    for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n      this._sortedDrawableIndexList[i] = 0;\n    }\n    super.initialize(model);\n  }\n  bindTexture(modelTextureNo, glTexture) {\n    this._textures[modelTextureNo] = glTexture;\n  }\n  getBindedTextures() {\n    return this._textures;\n  }\n  setClippingMaskBufferSize(size) {\n    this._clippingManager.release();\n    this._clippingManager = new CubismClippingManager_WebGL();\n    this._clippingManager.setClippingMaskBufferSize(size);\n    this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n  }\n  getClippingMaskBufferSize() {\n    return this._clippingManager.getClippingMaskBufferSize();\n  }\n  release() {\n    var _a, _b, _c;\n    const self = this;\n    this._clippingManager.release();\n    self._clippingManager = void 0;\n    (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n    this._bufferData.vertex = null;\n    (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n    this._bufferData.uv = null;\n    (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n    this._bufferData.index = null;\n    self._bufferData = void 0;\n    self._textures = void 0;\n  }\n  doDrawModel() {\n    this.preDraw();\n    if (this._clippingManager != null) {\n      this._clippingManager.setupClippingContext(this.getModel(), this);\n    }\n    const drawableCount = this.getModel().getDrawableCount();\n    const renderOrder = this.getModel().getDrawableRenderOrders();\n    for (let i = 0; i < drawableCount; ++i) {\n      const order = renderOrder[i];\n      this._sortedDrawableIndexList[order] = i;\n    }\n    for (let i = 0; i < drawableCount; ++i) {\n      const drawableIndex = this._sortedDrawableIndexList[i];\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n        continue;\n      }\n      this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n      this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n    }\n  }\n  drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n    if (this.isCulling()) {\n      this.gl.enable(this.gl.CULL_FACE);\n    } else {\n      this.gl.disable(this.gl.CULL_FACE);\n    }\n    this.gl.frontFace(this.gl.CCW);\n    const modelColorRGBA = this.getModelColor();\n    if (this.getClippingContextBufferForMask() == null) {\n      modelColorRGBA.A *= opacity;\n      if (this.isPremultipliedAlpha()) {\n        modelColorRGBA.R *= modelColorRGBA.A;\n        modelColorRGBA.G *= modelColorRGBA.A;\n        modelColorRGBA.B *= modelColorRGBA.A;\n      }\n    }\n    let drawtexture = null;\n    if (this._textures[textureNo] != null) {\n      drawtexture = this._textures[textureNo];\n    }\n    CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n    this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n    this.gl.useProgram(null);\n    this.setClippingContextBufferForDraw(null);\n    this.setClippingContextBufferForMask(null);\n  }\n  static doStaticRelease() {\n    CubismShader_WebGL.deleteInstance();\n  }\n  setRenderState(fbo, viewport) {\n    s_fbo = fbo;\n    s_viewport = viewport;\n  }\n  preDraw() {\n    if (this.firstDraw) {\n      this.firstDraw = false;\n      this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n    }\n    this.gl.disable(this.gl.SCISSOR_TEST);\n    this.gl.disable(this.gl.STENCIL_TEST);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.frontFace(this.gl.CW);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.colorMask(true, true, true, true);\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n  setClippingContextBufferForMask(clip) {\n    this._clippingContextBufferForMask = clip;\n  }\n  getClippingContextBufferForMask() {\n    return this._clippingContextBufferForMask;\n  }\n  setClippingContextBufferForDraw(clip) {\n    this._clippingContextBufferForDraw = clip;\n  }\n  getClippingContextBufferForDraw() {\n    return this._clippingContextBufferForDraw;\n  }\n  startUp(gl) {\n    this.gl = gl;\n    this._clippingManager.setGL(gl);\n    CubismShader_WebGL.getInstance().setGl(gl);\n  }\n}\nCubismRenderer.staticRelease = () => {\n  CubismRenderer_WebGL.doStaticRelease();\n};\nclass CubismModelSettingsJson {\n  constructor(json) {\n    this.groups = json.Groups;\n    this.hitAreas = json.HitAreas;\n    this.layout = json.Layout;\n    this.moc = json.FileReferences.Moc;\n    this.expressions = json.FileReferences.Expressions;\n    this.motions = json.FileReferences.Motions;\n    this.textures = json.FileReferences.Textures;\n    this.physics = json.FileReferences.Physics;\n    this.pose = json.FileReferences.Pose;\n  }\n  getEyeBlinkParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n  }\n  getLipSyncParameters() {\n    var _a, _b;\n    return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n  }\n}\nconst HitAreaPrefix = \"HitArea\";\nconst HitAreaHead = \"Head\";\nconst HitAreaBody = \"Body\";\nconst PartsIdCore = \"Parts01Core\";\nconst PartsArmPrefix = \"Parts01Arm_\";\nconst PartsArmLPrefix = \"Parts01ArmL_\";\nconst PartsArmRPrefix = \"Parts01ArmR_\";\nconst ParamAngleX = \"ParamAngleX\";\nconst ParamAngleY = \"ParamAngleY\";\nconst ParamAngleZ = \"ParamAngleZ\";\nconst ParamEyeLOpen = \"ParamEyeLOpen\";\nconst ParamEyeLSmile = \"ParamEyeLSmile\";\nconst ParamEyeROpen = \"ParamEyeROpen\";\nconst ParamEyeRSmile = \"ParamEyeRSmile\";\nconst ParamEyeBallX = \"ParamEyeBallX\";\nconst ParamEyeBallY = \"ParamEyeBallY\";\nconst ParamEyeBallForm = \"ParamEyeBallForm\";\nconst ParamBrowLY = \"ParamBrowLY\";\nconst ParamBrowRY = \"ParamBrowRY\";\nconst ParamBrowLX = \"ParamBrowLX\";\nconst ParamBrowRX = \"ParamBrowRX\";\nconst ParamBrowLAngle = \"ParamBrowLAngle\";\nconst ParamBrowRAngle = \"ParamBrowRAngle\";\nconst ParamBrowLForm = \"ParamBrowLForm\";\nconst ParamBrowRForm = \"ParamBrowRForm\";\nconst ParamMouthForm = \"ParamMouthForm\";\nconst ParamMouthOpenY = \"ParamMouthOpenY\";\nconst ParamCheek = \"ParamCheek\";\nconst ParamBodyAngleX = \"ParamBodyAngleX\";\nconst ParamBodyAngleY = \"ParamBodyAngleY\";\nconst ParamBodyAngleZ = \"ParamBodyAngleZ\";\nconst ParamBreath = \"ParamBreath\";\nconst ParamArmLA = \"ParamArmLA\";\nconst ParamArmRA = \"ParamArmRA\";\nconst ParamArmLB = \"ParamArmLB\";\nconst ParamArmRB = \"ParamArmRB\";\nconst ParamHandL = \"ParamHandL\";\nconst ParamHandR = \"ParamHandR\";\nconst ParamHairFront = \"ParamHairFront\";\nconst ParamHairSide = \"ParamHairSide\";\nconst ParamHairBack = \"ParamHairBack\";\nconst ParamHairFluffy = \"ParamHairFluffy\";\nconst ParamShoulderY = \"ParamShoulderY\";\nconst ParamBustX = \"ParamBustX\";\nconst ParamBustY = \"ParamBustY\";\nconst ParamBaseX = \"ParamBaseX\";\nconst ParamBaseY = \"ParamBaseY\";\nconst ParamNONE = \"NONE:\";\nconst LOGICAL_WIDTH = 2;\nconst LOGICAL_HEIGHT = 2;\nvar config;\n((config2) => {\n  config2.LOG_LEVEL_VERBOSE = 0;\n  config2.LOG_LEVEL_WARNING = 1;\n  config2.LOG_LEVEL_ERROR = 2;\n  config2.LOG_LEVEL_NONE = 999;\n  config2.logLevel = config2.LOG_LEVEL_WARNING;\n  config2.sound = true;\n  config2.motionSync = true;\n  config2.motionFadingDuration = 500;\n  config2.idleMotionFadingDuration = 2e3;\n  config2.expressionFadingDuration = 500;\n  config2.preserveExpressionOnMotion = true;\n  config2.cubism4 = CubismConfig;\n})(config || (config = {}));\nconst VERSION = \"0.4.0\";\nconst logger = {\n  log(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_VERBOSE) {\n      console.log(`[${tag}]`, ...messages);\n    }\n  },\n  warn(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_WARNING) {\n      console.warn(`[${tag}]`, ...messages);\n    }\n  },\n  error(tag, ...messages) {\n    if (config.logLevel <= config.LOG_LEVEL_ERROR) {\n      console.error(`[${tag}]`, ...messages);\n    }\n  }\n};\nfunction clamp(num, lower, upper) {\n  return num < lower ? lower : num > upper ? upper : num;\n}\nfunction rand(min, max) {\n  return Math.random() * (max - min) + min;\n}\nfunction copyProperty(type, from, to, fromKey, toKey) {\n  const value = from[fromKey];\n  if (value !== null && typeof value === type) {\n    to[toKey] = value;\n  }\n}\nfunction copyArray(type, from, to, fromKey, toKey) {\n  const array = from[fromKey];\n  if (Array.isArray(array)) {\n    to[toKey] = array.filter((item) => item !== null && typeof item === type);\n  }\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n  });\n}\nfunction folderName(url2) {\n  let lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex != -1) {\n    url2 = url2.slice(0, lastSlashIndex);\n  }\n  lastSlashIndex = url2.lastIndexOf(\"/\");\n  if (lastSlashIndex !== -1) {\n    url2 = url2.slice(lastSlashIndex + 1);\n  }\n  return url2;\n}\nfunction remove(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nclass ExpressionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.expressions = [];\n    this.reserveExpressionIndex = -1;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `ExpressionManager(${settings.name})`;\n  }\n  init() {\n    this.defaultExpression = this.createExpression({}, void 0);\n    this.currentExpression = this.defaultExpression;\n    this.stopAllExpressions();\n  }\n  loadExpression(index) {\n    return __async(this, null, function* () {\n      if (!this.definitions[index]) {\n        logger.warn(this.tag, `Undefined expression at [${index}]`);\n        return void 0;\n      }\n      if (this.expressions[index] === null) {\n        logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.expressions[index]) {\n        return this.expressions[index];\n      }\n      const expression = yield this._loadExpression(index);\n      this.expressions[index] = expression;\n      return expression;\n    });\n  }\n  _loadExpression(index) {\n    throw new Error(\"Not implemented.\");\n  }\n  setRandomExpression() {\n    return __async(this, null, function* () {\n      if (this.definitions.length) {\n        const availableIndices = [];\n        for (let i = 0; i < this.definitions.length; i++) {\n          if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.setExpression(index);\n        }\n      }\n      return false;\n    });\n  }\n  resetExpression() {\n    this._setExpression(this.defaultExpression);\n  }\n  restoreExpression() {\n    this._setExpression(this.currentExpression);\n  }\n  setExpression(index) {\n    return __async(this, null, function* () {\n      if (typeof index !== \"number\") {\n        index = this.getExpressionIndex(index);\n      }\n      if (!(index > -1 && index < this.definitions.length)) {\n        return false;\n      }\n      if (index === this.expressions.indexOf(this.currentExpression)) {\n        return false;\n      }\n      this.reserveExpressionIndex = index;\n      const expression = yield this.loadExpression(index);\n      if (!expression || this.reserveExpressionIndex !== index) {\n        return false;\n      }\n      this.reserveExpressionIndex = -1;\n      this.currentExpression = expression;\n      this._setExpression(expression);\n      return true;\n    });\n  }\n  update(model, now) {\n    if (!this.isFinished()) {\n      return this.updateParameters(model, now);\n    }\n    return false;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    const self = this;\n    self.definitions = void 0;\n    self.expressions = void 0;\n  }\n}\nconst EPSILON = 0.01;\nconst MAX_SPEED = 40 / 7.5;\nconst ACCELERATION_TIME = 1 / (0.15 * 1e3);\nclass FocusController {\n  constructor() {\n    this.targetX = 0;\n    this.targetY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.vx = 0;\n    this.vy = 0;\n  }\n  focus(x, y, instant = false) {\n    this.targetX = clamp(x, -1, 1);\n    this.targetY = clamp(y, -1, 1);\n    if (instant) {\n      this.x = this.targetX;\n      this.y = this.targetY;\n    }\n  }\n  update(dt) {\n    const dx = this.targetX - this.x;\n    const dy = this.targetY - this.y;\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n      return;\n    const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n    const maxSpeed = MAX_SPEED / (1e3 / dt);\n    let ax = maxSpeed * (dx / d) - this.vx;\n    let ay = maxSpeed * (dy / d) - this.vy;\n    const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n    const maxA = maxSpeed * ACCELERATION_TIME * dt;\n    if (a > maxA) {\n      ax *= maxA / a;\n      ay *= maxA / a;\n    }\n    this.vx += ax;\n    this.vy += ay;\n    const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n    const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n    if (v > maxV) {\n      this.vx *= maxV / v;\n      this.vy *= maxV / v;\n    }\n    this.x += this.vx;\n    this.y += this.vy;\n  }\n}\nclass ModelSettings {\n  constructor(json) {\n    this.json = json;\n    let url2 = json.url;\n    if (typeof url2 !== \"string\") {\n      throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n    }\n    this.url = url2;\n    this.name = folderName(this.url);\n  }\n  resolveURL(path) {\n    return url.resolve(this.url, path);\n  }\n  replaceFiles(replacer) {\n    this.moc = replacer(this.moc, \"moc\");\n    if (this.pose !== void 0) {\n      this.pose = replacer(this.pose, \"pose\");\n    }\n    if (this.physics !== void 0) {\n      this.physics = replacer(this.physics, \"physics\");\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n    }\n  }\n  getDefinedFiles() {\n    const files = [];\n    this.replaceFiles((file) => {\n      files.push(file);\n      return file;\n    });\n    return files;\n  }\n  validateFiles(files) {\n    const assertFileExists = (expectedFile, shouldThrow) => {\n      const actualPath = this.resolveURL(expectedFile);\n      if (!files.includes(actualPath)) {\n        if (shouldThrow) {\n          throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n        }\n        return false;\n      }\n      return true;\n    };\n    const essentialFiles = [this.moc, ...this.textures];\n    essentialFiles.forEach((texture) => assertFileExists(texture, true));\n    const definedFiles = this.getDefinedFiles();\n    return definedFiles.filter((file) => assertFileExists(file, false));\n  }\n}\nvar MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n  MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n  MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n  MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n  MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n  return MotionPriority2;\n})(MotionPriority || {});\nclass MotionState {\n  constructor() {\n    this.debug = false;\n    this.currentPriority = 0;\n    this.reservePriority = 0;\n  }\n  reserve(group, index, priority) {\n    if (priority <= 0) {\n      logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n      return false;\n    }\n    if (group === this.currentGroup && index === this.currentIndex) {\n      logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n      return false;\n    }\n    if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n      logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n      return false;\n    }\n    if (priority === 1) {\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n        return false;\n      }\n      if (this.reservedIdleGroup !== void 0) {\n        logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n        return false;\n      }\n      this.setReservedIdle(group, index);\n    } else {\n      if (priority < 3) {\n        if (priority <= this.currentPriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n        if (priority <= this.reservePriority) {\n          logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n          return false;\n        }\n      }\n      this.setReserved(group, index, priority);\n    }\n    return true;\n  }\n  start(motion, group, index, priority) {\n    if (priority === 1) {\n      this.setReservedIdle(void 0, void 0);\n      if (this.currentPriority !== 0) {\n        logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n        return false;\n      }\n    } else {\n      if (group !== this.reservedGroup || index !== this.reservedIndex) {\n        logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n        return false;\n      }\n      this.setReserved(void 0, void 0, 0);\n    }\n    if (!motion) {\n      return false;\n    }\n    this.setCurrent(group, index, priority);\n    return true;\n  }\n  complete() {\n    this.setCurrent(void 0, void 0, 0);\n  }\n  setCurrent(group, index, priority) {\n    this.currentPriority = priority;\n    this.currentGroup = group;\n    this.currentIndex = index;\n  }\n  setReserved(group, index, priority) {\n    this.reservePriority = priority;\n    this.reservedGroup = group;\n    this.reservedIndex = index;\n  }\n  setReservedIdle(group, index) {\n    this.reservedIdleGroup = group;\n    this.reservedIdleIndex = index;\n  }\n  isActive(group, index) {\n    return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n  }\n  reset() {\n    this.setCurrent(void 0, void 0, 0);\n    this.setReserved(void 0, void 0, 0);\n    this.setReservedIdle(void 0, void 0);\n  }\n  shouldRequestIdleMotion() {\n    return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n  }\n  shouldOverrideExpression() {\n    return !config.preserveExpressionOnMotion && this.currentPriority > 1;\n  }\n  dump(requestedGroup, requestedIndex) {\n    if (this.debug) {\n      const keys = [\n        \"currentPriority\",\n        \"reservePriority\",\n        \"currentGroup\",\n        \"currentIndex\",\n        \"reservedGroup\",\n        \"reservedIndex\",\n        \"reservedIdleGroup\",\n        \"reservedIdleIndex\"\n      ];\n      return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n    }\n    return \"\";\n  }\n}\nconst TAG$2 = \"SoundManager\";\nconst VOLUME = 0.5;\nclass SoundManager {\n  static get volume() {\n    return this._volume;\n  }\n  static set volume(value) {\n    this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n    this.audios.forEach((audio) => audio.volume = this._volume);\n  }\n  static add(file, onFinish, onError) {\n    const audio = new Audio(file);\n    audio.volume = this._volume;\n    audio.preload = \"auto\";\n    audio.addEventListener(\"ended\", () => {\n      this.dispose(audio);\n      onFinish == null ? void 0 : onFinish();\n    });\n    audio.addEventListener(\"error\", (e) => {\n      this.dispose(audio);\n      logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n      onError == null ? void 0 : onError(e.error);\n    });\n    this.audios.push(audio);\n    return audio;\n  }\n  static play(audio) {\n    return new Promise((resolve, reject) => {\n      var _a;\n      (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n        audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n        reject(e);\n      });\n      if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener(\"canplaythrough\", resolve);\n      }\n    });\n  }\n  static dispose(audio) {\n    audio.pause();\n    audio.removeAttribute(\"src\");\n    remove(this.audios, audio);\n  }\n  static destroy() {\n    for (let i = this.audios.length - 1; i >= 0; i--) {\n      this.dispose(this.audios[i]);\n    }\n  }\n}\nSoundManager.audios = [];\nSoundManager._volume = VOLUME;\nvar MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n  MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n  MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n  MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n  return MotionPreloadStrategy2;\n})(MotionPreloadStrategy || {});\nclass MotionManager extends EventEmitter {\n  constructor(settings, options) {\n    super();\n    this.motionGroups = {};\n    this.state = new MotionState();\n    this.playing = false;\n    this.destroyed = false;\n    this.settings = settings;\n    this.tag = `MotionManager(${settings.name})`;\n    this.state.tag = this.tag;\n  }\n  init(options) {\n    if (options == null ? void 0 : options.idleMotionGroup) {\n      this.groups.idle = options.idleMotionGroup;\n    }\n    this.setupMotions(options);\n    this.stopAllMotions();\n  }\n  setupMotions(options) {\n    for (const group of Object.keys(this.definitions)) {\n      this.motionGroups[group] = [];\n    }\n    let groups;\n    switch (options == null ? void 0 : options.motionPreload) {\n      case \"NONE\":\n        return;\n      case \"ALL\":\n        groups = Object.keys(this.definitions);\n        break;\n      case \"IDLE\":\n      default:\n        groups = [this.groups.idle];\n        break;\n    }\n    for (const group of groups) {\n      if (this.definitions[group]) {\n        for (let i = 0; i < this.definitions[group].length; i++) {\n          this.loadMotion(group, i).then();\n        }\n      }\n    }\n  }\n  loadMotion(group, index) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n        logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index] === null) {\n        logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n        return void 0;\n      }\n      if (this.motionGroups[group][index]) {\n        return this.motionGroups[group][index];\n      }\n      const motion = yield this._loadMotion(group, index);\n      if (this.destroyed) {\n        return;\n      }\n      this.motionGroups[group][index] = motion != null ? motion : null;\n      return motion;\n    });\n  }\n  _loadMotion(group, index) {\n    throw new Error(\"Not implemented.\");\n  }\n  startMotion(_0, _1) {\n    return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n      var _a;\n      if (!this.state.reserve(group, index, priority)) {\n        return false;\n      }\n      const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return false;\n      }\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n      }\n      let audio;\n      if (config.sound) {\n        const soundURL = this.getSoundFile(definition);\n        if (soundURL) {\n          try {\n            audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n            this.currentAudio = audio;\n          } catch (e) {\n            logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n          }\n        }\n      }\n      const motion = yield this.loadMotion(group, index);\n      if (audio) {\n        const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n        if (config.motionSync) {\n          yield readyToPlay;\n        }\n      }\n      if (!this.state.start(motion, group, index, priority)) {\n        if (audio) {\n          SoundManager.dispose(audio);\n          this.currentAudio = void 0;\n        }\n        return false;\n      }\n      logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n      this.emit(\"motionStart\", group, index, audio);\n      if (this.state.shouldOverrideExpression()) {\n        this.expressionManager && this.expressionManager.resetExpression();\n      }\n      this.playing = true;\n      this._startMotion(motion);\n      return true;\n    });\n  }\n  startRandomMotion(group, priority) {\n    return __async(this, null, function* () {\n      const groupDefs = this.definitions[group];\n      if (groupDefs == null ? void 0 : groupDefs.length) {\n        const availableIndices = [];\n        for (let i = 0; i < groupDefs.length; i++) {\n          if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n            availableIndices.push(i);\n          }\n        }\n        if (availableIndices.length) {\n          const index = Math.floor(Math.random() * availableIndices.length);\n          return this.startMotion(group, availableIndices[index], priority);\n        }\n      }\n      return false;\n    });\n  }\n  stopAllMotions() {\n    this._stopAllMotions();\n    this.state.reset();\n    if (this.currentAudio) {\n      SoundManager.dispose(this.currentAudio);\n      this.currentAudio = void 0;\n    }\n  }\n  update(model, now) {\n    var _a;\n    if (this.isFinished()) {\n      if (this.playing) {\n        this.playing = false;\n        this.emit(\"motionFinish\");\n      }\n      if (this.state.shouldOverrideExpression()) {\n        (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n      }\n      this.state.complete();\n      if (this.state.shouldRequestIdleMotion()) {\n        this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n      }\n    }\n    return this.updateParameters(model, now);\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.stopAllMotions();\n    (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n    const self = this;\n    self.definitions = void 0;\n    self.motionGroups = void 0;\n  }\n}\nconst tempBounds = { x: 0, y: 0, width: 0, height: 0 };\nclass InternalModel extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    this.focusController = new FocusController();\n    this.originalWidth = 0;\n    this.originalHeight = 0;\n    this.width = 0;\n    this.height = 0;\n    this.localTransform = new Matrix();\n    this.drawingMatrix = new Matrix();\n    this.hitAreas = {};\n    this.textureFlipY = false;\n    this.viewport = [0, 0, 0, 0];\n    this.destroyed = false;\n  }\n  init() {\n    this.setupLayout();\n    this.setupHitAreas();\n  }\n  setupLayout() {\n    const self = this;\n    const size = this.getSize();\n    self.originalWidth = size[0];\n    self.originalHeight = size[1];\n    const layout = Object.assign({\n      width: LOGICAL_WIDTH,\n      height: LOGICAL_HEIGHT\n    }, this.getLayout());\n    this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n    self.width = this.originalWidth * this.localTransform.a;\n    self.height = this.originalHeight * this.localTransform.d;\n    const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n    const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n    this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n  }\n  setupHitAreas() {\n    const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n    for (const def of definitions) {\n      this.hitAreas[def.name] = def;\n    }\n  }\n  hitTest(x, y) {\n    return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n  }\n  isHit(hitAreaName, x, y) {\n    if (!this.hitAreas[hitAreaName]) {\n      return false;\n    }\n    const drawIndex = this.hitAreas[hitAreaName].index;\n    const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n    return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n  }\n  getDrawableBounds(index, bounds) {\n    const vertices = this.getDrawableVertices(index);\n    let left = vertices[0];\n    let right = vertices[0];\n    let top = vertices[1];\n    let bottom = vertices[1];\n    for (let i = 0; i < vertices.length; i += 2) {\n      const vx = vertices[i];\n      const vy = vertices[i + 1];\n      left = Math.min(vx, left);\n      right = Math.max(vx, right);\n      top = Math.min(vy, top);\n      bottom = Math.max(vy, bottom);\n    }\n    bounds != null ? bounds : bounds = {};\n    bounds.x = left;\n    bounds.y = top;\n    bounds.width = right - left;\n    bounds.height = bottom - top;\n    return bounds;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n  }\n  update(dt, now) {\n    this.focusController.update(dt);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\");\n    this.motionManager.destroy();\n    this.motionManager = void 0;\n  }\n}\nconst TAG$1 = \"XHRLoader\";\nclass NetworkError extends Error {\n  constructor(message, url2, status, aborted = false) {\n    super(message);\n    this.url = url2;\n    this.status = status;\n    this.aborted = aborted;\n  }\n}\nconst _XHRLoader = class {\n  static createXHR(target, url2, type, onload, onerror) {\n    const xhr = new XMLHttpRequest();\n    _XHRLoader.allXhrSet.add(xhr);\n    if (target) {\n      let xhrSet = _XHRLoader.xhrMap.get(target);\n      if (!xhrSet) {\n        xhrSet = /* @__PURE__ */ new Set([xhr]);\n        _XHRLoader.xhrMap.set(target, xhrSet);\n      } else {\n        xhrSet.add(xhr);\n      }\n      if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n        target.once(\"destroy\", _XHRLoader.cancelXHRs);\n      }\n    }\n    xhr.open(\"GET\", url2);\n    xhr.responseType = type;\n    xhr.onload = () => {\n      if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n        onload(xhr.response);\n      } else {\n        xhr.onerror();\n      }\n    };\n    xhr.onerror = () => {\n      logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url2}`);\n      onerror(new NetworkError(\"Network error.\", url2, xhr.status));\n    };\n    xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url2, xhr.status, true));\n    xhr.onloadend = () => {\n      var _a;\n      _XHRLoader.allXhrSet.delete(xhr);\n      if (target) {\n        (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n      }\n    };\n    return xhr;\n  }\n  static cancelXHRs() {\n    var _a;\n    (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n      xhr.abort();\n      _XHRLoader.allXhrSet.delete(xhr);\n    });\n    _XHRLoader.xhrMap.delete(this);\n  }\n  static release() {\n    _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n    _XHRLoader.allXhrSet.clear();\n    _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  }\n};\nlet XHRLoader = _XHRLoader;\nXHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\nXHRLoader.allXhrSet = /* @__PURE__ */ new Set();\nXHRLoader.loader = (context, next) => {\n  return new Promise((resolve, reject) => {\n    const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n      context.result = data;\n      resolve();\n    }, reject);\n    xhr.send();\n  });\n};\nfunction runMiddlewares(middleware, context) {\n  let index = -1;\n  return dispatch(0);\n  function dispatch(i, err) {\n    if (err)\n      return Promise.reject(err);\n    if (i <= index)\n      return Promise.reject(new Error(\"next() called multiple times\"));\n    index = i;\n    const fn = middleware[i];\n    if (!fn)\n      return Promise.resolve();\n    try {\n      return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n    } catch (err2) {\n      return Promise.reject(err2);\n    }\n  }\n}\nclass Live2DLoader {\n  static load(context) {\n    return runMiddlewares(this.middlewares, context).then(() => context.result);\n  }\n}\nLive2DLoader.middlewares = [XHRLoader.loader];\nfunction createTexture(url2, options = {}) {\n  var _a;\n  const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n  if (Texture.fromURL) {\n    return Texture.fromURL(url2, textureOptions).catch((e) => {\n      if (e instanceof Error) {\n        throw e;\n      }\n      const err = new Error(\"Texture loading error\");\n      err.event = e;\n      throw err;\n    });\n  }\n  textureOptions.resourceOptions.autoLoad = false;\n  const texture = Texture.from(url2, textureOptions);\n  if (texture.baseTexture.valid) {\n    return Promise.resolve(texture);\n  }\n  const resource = texture.baseTexture.resource;\n  (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n    const errorHandler = (event) => {\n      resource.source.removeEventListener(\"error\", errorHandler);\n      const err = new Error(\"Texture loading error\");\n      err.event = event;\n      reject(err);\n    };\n    resource.source.addEventListener(\"error\", errorHandler);\n    resource.load().then(() => resolve(texture)).catch(errorHandler);\n  });\n  return resource._live2d_load;\n}\nconst TAG = \"Live2DFactory\";\nconst urlToJSON = (context, next) => __async(void 0, null, function* () {\n  if (typeof context.source === \"string\") {\n    const data = yield Live2DLoader.load({\n      url: context.source,\n      type: \"json\",\n      target: context.live2dModel\n    });\n    data.url = context.source;\n    context.source = data;\n    context.live2dModel.emit(\"settingsJSONLoaded\", data);\n  }\n  return next();\n});\nconst jsonToSettings = (context, next) => __async(void 0, null, function* () {\n  if (context.source instanceof ModelSettings) {\n    context.settings = context.source;\n    return next();\n  } else if (typeof context.source === \"object\") {\n    const runtime = Live2DFactory.findRuntime(context.source);\n    if (runtime) {\n      const settings = runtime.createModelSettings(context.source);\n      context.settings = settings;\n      context.live2dModel.emit(\"settingsLoaded\", settings);\n      return next();\n    }\n  }\n  throw new TypeError(\"Unknown settings format.\");\n});\nconst waitUntilReady = (context, next) => {\n  if (context.settings) {\n    const runtime = Live2DFactory.findRuntime(context.settings);\n    if (runtime) {\n      return runtime.ready().then(next);\n    }\n  }\n  return next();\n};\nconst setupOptionals = (context, next) => __async(void 0, null, function* () {\n  yield next();\n  const internalModel = context.internalModel;\n  if (internalModel) {\n    const settings = context.settings;\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (runtime) {\n      const tasks = [];\n      if (settings.pose) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.pose,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n          context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n        }).catch((e) => {\n          context.live2dModel.emit(\"poseLoadError\", e);\n          logger.warn(TAG, \"Failed to load pose.\", e);\n        }));\n      }\n      if (settings.physics) {\n        tasks.push(Live2DLoader.load({\n          settings,\n          url: settings.physics,\n          type: \"json\",\n          target: internalModel\n        }).then((data) => {\n          internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n          context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n        }).catch((e) => {\n          context.live2dModel.emit(\"physicsLoadError\", e);\n          logger.warn(TAG, \"Failed to load physics.\", e);\n        }));\n      }\n      if (tasks.length) {\n        yield Promise.all(tasks);\n      }\n    }\n  }\n});\nconst setupEssentials = (context, next) => __async(void 0, null, function* () {\n  if (context.settings) {\n    const live2DModel = context.live2dModel;\n    const textureLoadings = context.settings.textures.map((tex) => {\n      const url2 = context.settings.resolveURL(tex);\n      return createTexture(url2, { crossOrigin: context.options.crossOrigin });\n    });\n    yield next();\n    if (context.internalModel) {\n      live2DModel.internalModel = context.internalModel;\n      live2DModel.emit(\"modelLoaded\", context.internalModel);\n    } else {\n      throw new TypeError(\"Missing internal model.\");\n    }\n    live2DModel.textures = yield Promise.all(textureLoadings);\n    live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n  } else {\n    throw new TypeError(\"Missing settings.\");\n  }\n});\nconst createInternalModel = (context, next) => __async(void 0, null, function* () {\n  const settings = context.settings;\n  if (settings instanceof ModelSettings) {\n    const runtime = Live2DFactory.findRuntime(settings);\n    if (!runtime) {\n      throw new TypeError(\"Unknown model settings.\");\n    }\n    const modelData = yield Live2DLoader.load({\n      settings,\n      url: settings.moc,\n      type: \"arraybuffer\",\n      target: context.live2dModel\n    });\n    if (!runtime.isValidMoc(modelData)) {\n      throw new Error(\"Invalid moc data\");\n    }\n    const coreModel = runtime.createCoreModel(modelData);\n    context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n    return next();\n  }\n  throw new TypeError(\"Missing settings.\");\n});\nconst _Live2DFactory = class {\n  static registerRuntime(runtime) {\n    _Live2DFactory.runtimes.push(runtime);\n    _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n  }\n  static findRuntime(source) {\n    for (const runtime of _Live2DFactory.runtimes) {\n      if (runtime.test(source)) {\n        return runtime;\n      }\n    }\n  }\n  static setupLive2DModel(live2dModel, source, options) {\n    return __async(this, null, function* () {\n      const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n      const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n      const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n      yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n        live2dModel,\n        source,\n        options: options || {}\n      });\n      yield readyEventEmitted;\n      live2dModel.emit(\"load\");\n    });\n  }\n  static loadMotion(motionManager, group, index) {\n    var _a, _b;\n    const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n    try {\n      const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n      if (!tasks) {\n        tasks = {};\n        _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n      }\n      let taskGroup = tasks[group];\n      if (!taskGroup) {\n        taskGroup = [];\n        tasks[group] = taskGroup;\n      }\n      const path = motionManager.getMotionFile(definition);\n      (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n        url: path,\n        settings: motionManager.settings,\n        type: motionManager.motionDataType,\n        target: motionManager\n      }).then((data) => {\n        var _a2;\n        const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n        if (taskGroup2) {\n          delete taskGroup2[index];\n        }\n        const motion = motionManager.createMotion(data, group, definition);\n        motionManager.emit(\"motionLoaded\", group, index, motion);\n        return motion;\n      }).catch((e) => {\n        logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n        handleError(e);\n      });\n      return taskGroup[index];\n    } catch (e) {\n      logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static loadExpression(expressionManager, index) {\n    var _a;\n    const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n    try {\n      const definition = expressionManager.definitions[index];\n      if (!definition) {\n        return Promise.resolve(void 0);\n      }\n      if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n        expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n      }\n      let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n      if (!tasks) {\n        tasks = [];\n        _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n      }\n      const path = expressionManager.getExpressionFile(definition);\n      (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n        url: path,\n        settings: expressionManager.settings,\n        type: \"json\",\n        target: expressionManager\n      }).then((data) => {\n        const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (tasks2) {\n          delete tasks2[index];\n        }\n        const expression = expressionManager.createExpression(data, definition);\n        expressionManager.emit(\"expressionLoaded\", index, expression);\n        return expression;\n      }).catch((e) => {\n        logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n        handleError(e);\n      });\n      return tasks[index];\n    } catch (e) {\n      logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n      handleError(e);\n    }\n    return Promise.resolve(void 0);\n  }\n  static releaseTasks() {\n    if (this instanceof MotionManager) {\n      _Live2DFactory.motionTasksMap.delete(this);\n    } else {\n      _Live2DFactory.expressionTasksMap.delete(this);\n    }\n  }\n};\nlet Live2DFactory = _Live2DFactory;\nLive2DFactory.runtimes = [];\nLive2DFactory.urlToJSON = urlToJSON;\nLive2DFactory.jsonToSettings = jsonToSettings;\nLive2DFactory.waitUntilReady = waitUntilReady;\nLive2DFactory.setupOptionals = setupOptionals;\nLive2DFactory.setupEssentials = setupEssentials;\nLive2DFactory.createInternalModel = createInternalModel;\nLive2DFactory.live2DModelMiddlewares = [\n  urlToJSON,\n  jsonToSettings,\n  waitUntilReady,\n  setupOptionals,\n  setupEssentials,\n  createInternalModel\n];\nLive2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\nLive2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\nMotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n  return Live2DFactory.loadMotion(this, group, index);\n};\nExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n  return Live2DFactory.loadExpression(this, index);\n};\nclass InteractionMixin {\n  constructor() {\n    this._autoInteract = false;\n  }\n  get autoInteract() {\n    return this._autoInteract;\n  }\n  set autoInteract(autoInteract) {\n    if (autoInteract !== this._autoInteract) {\n      if (autoInteract) {\n        this.on(\"pointertap\", onTap, this);\n      } else {\n        this.off(\"pointertap\", onTap, this);\n      }\n      this._autoInteract = autoInteract;\n    }\n  }\n  registerInteraction(manager) {\n    if (manager !== this.interactionManager) {\n      this.unregisterInteraction();\n      if (this._autoInteract && manager) {\n        this.interactionManager = manager;\n        manager.on(\"pointermove\", onPointerMove, this);\n      }\n    }\n  }\n  unregisterInteraction() {\n    var _a;\n    if (this.interactionManager) {\n      (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n      this.interactionManager = void 0;\n    }\n  }\n}\nfunction onTap(event) {\n  this.tap(event.data.global.x, event.data.global.y);\n}\nfunction onPointerMove(event) {\n  this.focus(event.data.global.x, event.data.global.y);\n}\nclass Live2DTransform extends Transform {\n}\nconst tempPoint = new Point();\nconst tempMatrix$1 = new Matrix();\nlet tickerRef;\nclass Live2DModel extends Container {\n  constructor(options) {\n    super();\n    this.tag = \"Live2DModel(uninitialized)\";\n    this.textures = [];\n    this.transform = new Live2DTransform();\n    this.anchor = new ObservablePoint(this.onAnchorChange, this, 0, 0);\n    this.glContextID = -1;\n    this.elapsedTime = performance.now();\n    this.deltaTime = 0;\n    this._autoUpdate = false;\n    this.once(\"modelLoaded\", () => this.init(options));\n  }\n  static from(source, options) {\n    const model = new this(options);\n    return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n  }\n  static fromSync(source, options) {\n    const model = new this(options);\n    Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n    return model;\n  }\n  static registerTicker(tickerClass) {\n    tickerRef = tickerClass;\n  }\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(autoUpdate) {\n    var _a;\n    tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n    if (autoUpdate) {\n      if (!this._destroyed) {\n        if (tickerRef) {\n          tickerRef.shared.add(this.onTickerUpdate, this);\n          this._autoUpdate = true;\n        } else {\n          logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n        }\n      }\n    } else {\n      tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n      this._autoUpdate = false;\n    }\n  }\n  init(options) {\n    this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n    const _options = Object.assign({\n      autoUpdate: true,\n      autoInteract: true\n    }, options);\n    if (_options.autoInteract) {\n      this.interactive = true;\n    }\n    this.autoInteract = _options.autoInteract;\n    this.autoUpdate = _options.autoUpdate;\n  }\n  onAnchorChange() {\n    this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n  }\n  motion(group, index, priority) {\n    return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n  }\n  expression(id) {\n    if (this.internalModel.motionManager.expressionManager) {\n      return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n    }\n    return Promise.resolve(false);\n  }\n  focus(x, y, instant = false) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint, true);\n    let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n    let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n    let radian = Math.atan2(ty, tx);\n    this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n  }\n  tap(x, y) {\n    const hitAreaNames = this.hitTest(x, y);\n    if (hitAreaNames.length) {\n      logger.log(this.tag, `Hit`, hitAreaNames);\n      this.emit(\"hit\", hitAreaNames);\n    }\n  }\n  hitTest(x, y) {\n    tempPoint.x = x;\n    tempPoint.y = y;\n    this.toModelPosition(tempPoint, tempPoint);\n    return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n  }\n  toModelPosition(position, result = position.clone(), skipUpdate) {\n    if (!skipUpdate) {\n      this._recursivePostUpdateTransform();\n      if (!this.parent) {\n        this.parent = this._tempDisplayObjectParent;\n        this.displayObjectUpdateTransform();\n        this.parent = null;\n      } else {\n        this.displayObjectUpdateTransform();\n      }\n    }\n    this.transform.worldTransform.applyInverse(position, result);\n    this.internalModel.localTransform.applyInverse(result, result);\n    return result;\n  }\n  containsPoint(point) {\n    return this.getBounds(true).contains(point.x, point.y);\n  }\n  _calculateBounds() {\n    this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n  }\n  onTickerUpdate() {\n    this.update(tickerRef.shared.deltaMS);\n  }\n  update(dt) {\n    this.deltaTime += dt;\n    this.elapsedTime += dt;\n  }\n  _render(renderer) {\n    this.registerInteraction(renderer.plugins.interaction);\n    renderer.batch.reset();\n    renderer.geometry.reset();\n    renderer.shader.reset();\n    renderer.state.reset();\n    let shouldUpdateTexture = false;\n    if (this.glContextID !== renderer.CONTEXT_UID) {\n      this.glContextID = renderer.CONTEXT_UID;\n      this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n      shouldUpdateTexture = true;\n    }\n    for (let i = 0; i < this.textures.length; i++) {\n      const texture = this.textures[i];\n      if (!texture.valid) {\n        continue;\n      }\n      if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n        renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n        renderer.texture.bind(texture.baseTexture, 0);\n      }\n      this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n      texture.baseTexture.touched = renderer.textureGC.count;\n    }\n    const viewport = renderer.framebuffer.viewport;\n    this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n    if (this.deltaTime) {\n      this.internalModel.update(this.deltaTime, this.elapsedTime);\n      this.deltaTime = 0;\n    }\n    const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n    this.internalModel.updateTransform(internalTransform);\n    this.internalModel.draw(renderer.gl);\n    renderer.state.reset();\n    renderer.texture.reset();\n  }\n  destroy(options) {\n    this.emit(\"destroy\");\n    this.autoUpdate = false;\n    this.unregisterInteraction();\n    if (options == null ? void 0 : options.texture) {\n      this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n    }\n    this.internalModel.destroy();\n    super.destroy(options);\n  }\n}\napplyMixins(Live2DModel, [InteractionMixin]);\nconst _FileLoader = class {\n  static resolveURL(settingsURL, filePath) {\n    var _a;\n    const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n    if (resolved === void 0) {\n      throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n    }\n    return resolved;\n  }\n  static upload(files, settings) {\n    return __async(this, null, function* () {\n      const fileMap = {};\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n        if (actualFile) {\n          fileMap[definedFile] = URL.createObjectURL(actualFile);\n        }\n      }\n      _FileLoader.filesMap[settings._objectURL] = fileMap;\n    });\n  }\n  static createSettings(files) {\n    return __async(this, null, function* () {\n      const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n      if (!settingsFile) {\n        throw new TypeError(\"Settings file not found\");\n      }\n      const settingsText = yield _FileLoader.readText(settingsFile);\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFile.webkitRelativePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      const settings = runtime.createModelSettings(settingsJSON);\n      settings._objectURL = URL.createObjectURL(settingsFile);\n      return settings;\n    });\n  }\n  static readText(file) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsText(file, \"utf8\");\n      });\n    });\n  }\n};\nlet FileLoader = _FileLoader;\nFileLoader.filesMap = {};\nFileLoader.factory = (context, next) => __async(void 0, null, function* () {\n  if (Array.isArray(context.source) && context.source[0] instanceof File) {\n    const files = context.source;\n    let settings = files.settings;\n    if (!settings) {\n      settings = yield _FileLoader.createSettings(files);\n    } else if (!settings._objectURL) {\n      throw new Error('\"_objectURL\" must be specified in ModelSettings');\n    }\n    settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n    yield _FileLoader.upload(files, settings);\n    settings.resolveURL = function(url2) {\n      return _FileLoader.resolveURL(this._objectURL, url2);\n    };\n    context.source = settings;\n    context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n      internalModel.once(\"destroy\", function() {\n        const objectURL = this.settings._objectURL;\n        URL.revokeObjectURL(objectURL);\n        if (_FileLoader.filesMap[objectURL]) {\n          for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n            URL.revokeObjectURL(resourceObjectURL);\n          }\n        }\n        delete _FileLoader.filesMap[objectURL];\n      });\n    });\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\nconst _ZipLoader = class {\n  static unzip(reader, settings) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const requiredFilePaths = [];\n      for (const definedFile of settings.getDefinedFiles()) {\n        const actualPath = decodeURI(url.resolve(settings.url, definedFile));\n        if (filePaths.includes(actualPath)) {\n          requiredFilePaths.push(actualPath);\n        }\n      }\n      const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n      for (let i = 0; i < files.length; i++) {\n        const path = requiredFilePaths[i];\n        const file = files[i];\n        Object.defineProperty(file, \"webkitRelativePath\", {\n          value: path\n        });\n      }\n      return files;\n    });\n  }\n  static createSettings(reader) {\n    return __async(this, null, function* () {\n      const filePaths = yield _ZipLoader.getFilePaths(reader);\n      const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n      if (!settingsFilePath) {\n        throw new Error(\"Settings file not found\");\n      }\n      const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n      if (!settingsText) {\n        throw new Error(\"Empty settings file: \" + settingsFilePath);\n      }\n      const settingsJSON = JSON.parse(settingsText);\n      settingsJSON.url = settingsFilePath;\n      const runtime = Live2DFactory.findRuntime(settingsJSON);\n      if (!runtime) {\n        throw new Error(\"Unknown settings JSON\");\n      }\n      return runtime.createModelSettings(settingsJSON);\n    });\n  }\n  static zipReader(data, url2) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFilePaths(reader) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static getFiles(reader, paths) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static readText(reader, path) {\n    return __async(this, null, function* () {\n      throw new Error(\"Not implemented\");\n    });\n  }\n  static releaseReader(reader) {\n  }\n};\nlet ZipLoader = _ZipLoader;\nZipLoader.ZIP_PROTOCOL = \"zip://\";\nZipLoader.uid = 0;\nZipLoader.factory = (context, next) => __async(void 0, null, function* () {\n  const source = context.source;\n  let sourceURL;\n  let zipBlob;\n  let settings;\n  if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n    if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n      sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n    } else {\n      sourceURL = source;\n    }\n    zipBlob = yield Live2DLoader.load({\n      url: sourceURL,\n      type: \"blob\",\n      target: context.live2dModel\n    });\n  } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n    zipBlob = source[0];\n    sourceURL = URL.createObjectURL(zipBlob);\n    settings = source.settings;\n  }\n  if (zipBlob) {\n    if (!zipBlob.size) {\n      throw new Error(\"Empty zip file\");\n    }\n    const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n    if (!settings) {\n      settings = yield _ZipLoader.createSettings(reader);\n    }\n    settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n    const files = yield _ZipLoader.unzip(reader, settings);\n    files.settings = settings;\n    context.source = files;\n    if (sourceURL.startsWith(\"blob:\")) {\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          URL.revokeObjectURL(sourceURL);\n        });\n      });\n    }\n    _ZipLoader.releaseReader(reader);\n  }\n  return next();\n});\nLive2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\nif (!window.Live2DCubismCore) {\n  throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n}\nclass Cubism4ExpressionManager extends ExpressionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.expressions) != null ? _a : [];\n    this.init();\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  getExpressionIndex(name) {\n    return this.definitions.findIndex((def) => def.Name === name);\n  }\n  getExpressionFile(definition) {\n    return definition.File;\n  }\n  createExpression(data, definition) {\n    return CubismExpressionMotion.create(data);\n  }\n  _setExpression(motion) {\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  stopAllExpressions() {\n    this.queueManager.stopAllMotions();\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n}\nclass Cubism4ModelSettings extends ModelSettings {\n  constructor(json) {\n    super(json);\n    if (!Cubism4ModelSettings.isValidJSON(json)) {\n      throw new TypeError(\"Invalid JSON.\");\n    }\n    Object.assign(this, new CubismModelSettingsJson(json));\n  }\n  static isValidJSON(json) {\n    var _a;\n    return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n  }\n  replaceFiles(replace) {\n    super.replaceFiles(replace);\n    if (this.motions) {\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n          if (motions[i].Sound !== void 0) {\n            motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n          }\n        }\n      }\n    }\n    if (this.expressions) {\n      for (let i = 0; i < this.expressions.length; i++) {\n        this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n      }\n    }\n  }\n}\napplyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\nclass Cubism4MotionManager extends MotionManager {\n  constructor(settings, options) {\n    var _a;\n    super(settings, options);\n    this.groups = { idle: \"Idle\" };\n    this.motionDataType = \"json\";\n    this.queueManager = new CubismMotionQueueManager();\n    this.definitions = (_a = settings.motions) != null ? _a : {};\n    this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n    this.lipSyncIds = settings.getLipSyncParameters() || [];\n    this.init(options);\n  }\n  init(options) {\n    super.init(options);\n    if (this.settings.expressions) {\n      this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n    }\n    this.queueManager.setEventCallback((caller, eventValue, customData) => {\n      this.emit(\"motion:\" + eventValue);\n    });\n  }\n  isFinished() {\n    return this.queueManager.isFinished();\n  }\n  _startMotion(motion, onFinish) {\n    motion.setFinishedMotionHandler(onFinish);\n    this.queueManager.stopAllMotions();\n    return this.queueManager.startMotion(motion, false, performance.now());\n  }\n  _stopAllMotions() {\n    this.queueManager.stopAllMotions();\n  }\n  createMotion(data, group, definition) {\n    const motion = CubismMotion.create(data);\n    const json = new CubismMotionJson(data);\n    const defaultFadingDuration = (group === this.groups.idle ? config.idleMotionFadingDuration : config.motionFadingDuration) / 1e3;\n    if (json.getMotionFadeInTime() === void 0) {\n      motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n    }\n    if (json.getMotionFadeOutTime() === void 0) {\n      motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n    }\n    motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n    return motion;\n  }\n  getMotionFile(definition) {\n    return definition.File;\n  }\n  getMotionName(definition) {\n    return definition.File;\n  }\n  getSoundFile(definition) {\n    return definition.Sound;\n  }\n  updateParameters(model, now) {\n    return this.queueManager.doUpdateMotion(model, now);\n  }\n  destroy() {\n    super.destroy();\n    this.queueManager.release();\n    this.queueManager = void 0;\n  }\n}\nconst tempMatrix = new CubismMatrix44();\nclass Cubism4InternalModel extends InternalModel {\n  constructor(coreModel, settings, options) {\n    super();\n    this.lipSync = true;\n    this.breath = CubismBreath.create();\n    this.renderer = new CubismRenderer_WebGL();\n    this.idParamAngleX = ParamAngleX;\n    this.idParamAngleY = ParamAngleY;\n    this.idParamAngleZ = ParamAngleZ;\n    this.idParamEyeBallX = ParamEyeBallX;\n    this.idParamEyeBallY = ParamEyeBallY;\n    this.idParamBodyAngleX = ParamBodyAngleX;\n    this.idParamBreath = ParamBreath;\n    this.pixelsPerUnit = 1;\n    this.centeringTransform = new Matrix();\n    this.coreModel = coreModel;\n    this.settings = settings;\n    this.motionManager = new Cubism4MotionManager(settings, options);\n    this.init();\n  }\n  init() {\n    var _a;\n    super.init();\n    if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n      this.eyeBlink = CubismEyeBlink.create(this.settings);\n    }\n    this.breath.setParameters([\n      new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n      new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n      new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n      new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n      new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n    ]);\n    this.renderer.initialize(this.coreModel);\n    this.renderer.setIsPremultipliedAlpha(true);\n  }\n  getSize() {\n    return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n  }\n  getLayout() {\n    const layout = {};\n    if (this.settings.layout) {\n      for (const key of Object.keys(this.settings.layout)) {\n        const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n        layout[commonKey] = this.settings.layout[key];\n      }\n    }\n    return layout;\n  }\n  setupLayout() {\n    super.setupLayout();\n    this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n    this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n  }\n  updateWebGLContext(gl, glContextID) {\n    this.renderer.firstDraw = true;\n    this.renderer._bufferData = {\n      vertex: null,\n      uv: null,\n      index: null\n    };\n    this.renderer.startUp(gl);\n    this.renderer._clippingManager._currentFrameNo = glContextID;\n    this.renderer._clippingManager._maskTexture = void 0;\n    CubismShader_WebGL.getInstance()._shaderSets = [];\n  }\n  bindTexture(index, texture) {\n    this.renderer.bindTexture(index, texture);\n  }\n  getHitAreaDefs() {\n    var _a, _b;\n    return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n      id: hitArea.Id,\n      name: hitArea.Name,\n      index: this.coreModel.getDrawableIndex(hitArea.Id)\n    }))) != null ? _b : [];\n  }\n  getDrawableIDs() {\n    return this.coreModel.getDrawableIds();\n  }\n  getDrawableIndex(id) {\n    return this.coreModel.getDrawableIndex(id);\n  }\n  getDrawableVertices(drawIndex) {\n    if (typeof drawIndex === \"string\") {\n      drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n      if (drawIndex === -1)\n        throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n    }\n    const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n    for (let i = 0; i < arr.length; i += 2) {\n      arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n      arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n    }\n    return arr;\n  }\n  updateTransform(transform) {\n    this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n  }\n  update(dt, now) {\n    var _a, _b, _c, _d;\n    super.update(dt, now);\n    dt /= 1e3;\n    now /= 1e3;\n    const model = this.coreModel;\n    this.emit(\"beforeMotionUpdate\");\n    const motionUpdated = this.motionManager.update(this.coreModel, now);\n    this.emit(\"afterMotionUpdate\");\n    model.saveParameters();\n    (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n    if (!motionUpdated) {\n      (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n    }\n    this.updateFocus();\n    this.updateNaturalMovements(dt * 1e3, now * 1e3);\n    (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n    (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n    this.emit(\"beforeModelUpdate\");\n    model.update();\n    model.loadParameters();\n  }\n  updateFocus() {\n    this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n    this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n    this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n    this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n    this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n  }\n  updateNaturalMovements(dt, now) {\n    var _a;\n    (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n  }\n  draw(gl) {\n    const matrix = this.drawingMatrix;\n    const array = tempMatrix.getArray();\n    array[0] = matrix.a;\n    array[1] = matrix.b;\n    array[4] = -matrix.c;\n    array[5] = -matrix.d;\n    array[12] = matrix.tx;\n    array[13] = matrix.ty;\n    this.renderer.setMvpMatrix(tempMatrix);\n    this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n    this.renderer.drawModel();\n  }\n  destroy() {\n    super.destroy();\n    this.renderer.release();\n    this.coreModel.release();\n    this.renderer = void 0;\n    this.coreModel = void 0;\n  }\n}\nlet startupPromise;\nlet startupRetries = 20;\nfunction cubism4Ready() {\n  if (CubismFramework.isStarted()) {\n    return Promise.resolve();\n  }\n  startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n    function startUpWithRetry() {\n      try {\n        startUpCubism4();\n        resolve();\n      } catch (e) {\n        startupRetries--;\n        if (startupRetries < 0) {\n          const err = new Error(\"Failed to start up Cubism 4 framework.\");\n          err.cause = e;\n          reject(err);\n          return;\n        }\n        logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n        setTimeout(startUpWithRetry, 10);\n      }\n    }\n    startUpWithRetry();\n  });\n  return startupPromise;\n}\nfunction startUpCubism4(options) {\n  options = Object.assign({\n    logFunction: console.log,\n    loggingLevel: LogLevel.LogLevel_Verbose\n  }, options);\n  CubismFramework.startUp(options);\n  CubismFramework.initialize();\n}\nLive2DFactory.registerRuntime({\n  version: 4,\n  ready: cubism4Ready,\n  test(source) {\n    return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n  },\n  isValidMoc(modelData) {\n    if (modelData.byteLength < 4) {\n      return false;\n    }\n    const view = new Int8Array(modelData, 0, 4);\n    return String.fromCharCode(...view) === \"MOC3\";\n  },\n  createModelSettings(json) {\n    return new Cubism4ModelSettings(json);\n  },\n  createCoreModel(data) {\n    const moc = CubismMoc.create(data);\n    try {\n      const model = moc.createModel();\n      model.__moc = moc;\n      return model;\n    } catch (e) {\n      try {\n        moc.release();\n      } catch (ignored) {\n      }\n      throw e;\n    }\n  },\n  createInternalModel(coreModel, settings, options) {\n    const model = new Cubism4InternalModel(coreModel, settings, options);\n    const coreModelWithMoc = coreModel;\n    if (coreModelWithMoc.__moc) {\n      model.__moc = coreModelWithMoc.__moc;\n      delete coreModelWithMoc.__moc;\n      model.once(\"destroy\", releaseMoc);\n    }\n    return model;\n  },\n  createPhysics(coreModel, data) {\n    return CubismPhysics.create(data);\n  },\n  createPose(coreModel, data) {\n    return CubismPose.create(data);\n  }\n});\nfunction releaseMoc() {\n  var _a;\n  (_a = this.__moc) == null ? void 0 : _a.release();\n}\nexport { ACubismMotion, BreathParameterData, CSM_ASSERT, Constant, Cubism4ExpressionManager, Cubism4InternalModel, Cubism4ModelSettings, Cubism4MotionManager, CubismBlendMode, CubismBreath, CubismClippingContext, CubismClippingManager_WebGL, CubismConfig, CubismDebug, CubismExpressionMotion, CubismEyeBlink, CubismFramework, CubismLogDebug, CubismLogError, CubismLogInfo, CubismLogVerbose, CubismLogWarning, CubismMath, CubismMatrix44, CubismMoc, CubismModel, CubismModelSettingsJson, CubismModelUserData, CubismModelUserDataJson, CubismMotion, CubismMotionCurve, CubismMotionCurveTarget, CubismMotionData, CubismMotionEvent, CubismMotionJson, CubismMotionManager, CubismMotionPoint, CubismMotionQueueEntry, CubismMotionQueueManager, CubismMotionSegment, CubismMotionSegmentType, CubismPhysics, CubismPhysicsInput, CubismPhysicsJson, CubismPhysicsOutput, CubismPhysicsParticle, CubismPhysicsRig, CubismPhysicsSource, CubismPhysicsSubRig, CubismPhysicsTargetType, CubismPose, CubismRenderTextureResource, CubismRenderer, CubismRenderer_WebGL, CubismShader_WebGL, CubismTextureColor, CubismVector2, EvaluationOptionFlag, ExpressionBlendType, ExpressionManager, EyeState, FileLoader, FocusController, HitAreaBody, HitAreaHead, HitAreaPrefix, InteractionMixin, InternalModel, InvalidMotionQueueEntryHandleValue, LOGICAL_HEIGHT, LOGICAL_WIDTH, Live2DFactory, Live2DLoader, Live2DModel, Live2DTransform, LogLevel, ModelSettings, MotionManager, MotionPreloadStrategy, MotionPriority, MotionState, Options, ParamAngleX, ParamAngleY, ParamAngleZ, ParamArmLA, ParamArmLB, ParamArmRA, ParamArmRB, ParamBaseX, ParamBaseY, ParamBodyAngleX, ParamBodyAngleY, ParamBodyAngleZ, ParamBreath, ParamBrowLAngle, ParamBrowLForm, ParamBrowLX, ParamBrowLY, ParamBrowRAngle, ParamBrowRForm, ParamBrowRX, ParamBrowRY, ParamBustX, ParamBustY, ParamCheek, ParamEyeBallForm, ParamEyeBallX, ParamEyeBallY, ParamEyeLOpen, ParamEyeLSmile, ParamEyeROpen, ParamEyeRSmile, ParamHairBack, ParamHairFluffy, ParamHairFront, ParamHairSide, ParamHandL, ParamHandR, ParamMouthForm, ParamMouthOpenY, ParamNONE, ParamShoulderY, PartData, PartsArmLPrefix, PartsArmPrefix, PartsArmRPrefix, PartsIdCore, PhysicsJsonEffectiveForces, ShaderNames, SoundManager, VERSION, XHRLoader, ZipLoader, applyMixins, clamp, config, copyArray, copyProperty, csmRect, cubism4Ready, folderName, fragmentShaderSrcMaskInvertedPremultipliedAlpha, fragmentShaderSrcMaskPremultipliedAlpha, fragmentShaderSrcPremultipliedAlpha, fragmentShaderSrcsetupMask, logger, rand, remove, startUpCubism4, vertexShaderSrc, vertexShaderSrcMasked, vertexShaderSrcSetupMask };\n","import * as PIXI from \"pixi.js\";\r\nimport {Live2DModel} from \"@/pixi-live2d-display/dist/cubism4.es\";\r\nimport axios from \"axios\";\r\n\r\nwindow.PIXI = PIXI;\r\n\r\nexport default async function createModel(store,live2d){\r\n//for the modelName\r\n    let modelName= await axios({\r\n      url:\"/get\",\r\n      method:\"get\"\r\n    }).catch( err => {\r\n      console.log(err)\r\n\r\n    }) || {};\r\n    //load the live2d model and add the  model on the state\r\n    store.model4 = await Live2DModel.from(\r\n        \"./model/\"+ (modelName.data || \"mao_pro_t02.model3.json\"),\r\n        { autoUpdate: true });\r\n    // this.set=this.model4.\r\n    //     internalModel.coreModel.\r\n    //     setParameterValueById\r\n\r\n    //set the scale of model\r\n    store.model4.scale.set(store.scale+0)\r\n\r\n    let app = new PIXI.Application({\r\n        view: live2d,\r\n        autoStart: true,\r\n        width:store.model4.width ,\r\n        height:store.model4.height ,\r\n        backgroundAlpha:0\r\n    });\r\n\r\n\r\n\r\n    app.stage.addChild(store.model4);\r\n\r\n\r\n\r\n\r\n//adapt defferent parameterIds of models\r\n   if (store.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthOpenY\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthOpenY\")\r\n    }\r\n\r\n    if (store.model4.internalModel.coreModel._parameterIds.includes(\"PARAM_MOUTH_OPEN_Y\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"PARAM_MOUTH_OPEN_Y\")\r\n    }\r\n\r\n    if (store.model4.internalModel.coreModel._parameterIds.includes(\"ParamMouthA\")){\r\n        store.parameterIndex = store.model4.internalModel.coreModel.getParameterIndex(\"ParamMouthA\")\r\n    }\r\n\r\n    return app\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","<template>\n  <div id=\"app\" style=\"text-align: center;\">\n    <Drawer\n    ></Drawer>\n    <canvas ref=\"live2d\"\n            @mousedown=\"handleMouseDown\"\n            @mousemove=\"handleMouseMove\"\n            @mouseup=\"handleMouseUp\"\n            style=\"position: relative;\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\n\n\nimport { config } from './pixi-live2d-display';\nimport Drawer from \"@/components/Drawer.vue\";\nimport initWebSocket from \"@/ws\";\nimport {getWav,createAnalyser} from \"@/openMouthY\";\nimport createModel from \"@/loadLive2d\"\n\n\n// log level\nconfig.logLevel = config.LOG_LEVEL_WARNING; // LOG_LEVEL_VERBOSE, LOG_LEVEL_ERROR, LOG_LEVEL_NONE\n\n\n\n\n\nexport default {\n  name:\"app\",\n  components: {Drawer},\n  data(){\n  return{\n\n    isDragging: false,\n    lastX: 0,\n    lastY: 0,\n  }\n  },\n  mounted() {\n    //load live2d model\n    (async () => {\n      this.$store.state.app = await createModel(this.$store.state,this.$refs.live2d)\n      //create analyser\n      createAnalyser()\n      window.onresize = () => {\n        this.$store.state.model4.x = this.$refs.live2d.clientWidth / 2 -this.$store.state.model4.width / 2\n      }\n    })()\n    //addlistener for the window resizing\n\n\n// put the canvas dom-element in the state\n    this.$store.state.live2d = this.$refs.live2d\n// test the mouthOpen\n//     this.$refs.live2d.onclick=()=>{\n//       getWav({\n//         voice :\"synthesize.wav\",\n//         VType:1\n//       },this.$store.state)\n\n    // }\n\n  }\n  ,\n  created() {\n    // init the ws\n    this.$store.state.websocket = initWebSocket()\n// async add a callback function for the message\n   setTimeout(()=>{\n     this.$store.state.websocket.onmessage =\n         (event) => {\n           let data=JSON.parse(event.data)\n           getWav(data,this.$store.state)\n\n         }\n    })\n  },\n  destroyed() {\n    this.$store.state.websocket.close(); //离开路由之后断开websocket连接\n  },\n  methods:{\n    //add drag\n    handleMouseDown(event) {\n      this.isDragging = true;\n      this.lastX = event.clientX;\n      this.lastY = event.clientY;\n    },\n    handleMouseMove(event) {\n      if (this.isDragging) {\n        const deltaX = event.clientX - this.lastX;\n        const deltaY = event.clientY - this.lastY;\n        this.$refs.live2d.style.left = parseInt(this.$refs.live2d.style.left || 0) + deltaX + \"px\";\n        this.$refs.live2d.style.top = parseInt(this.$refs.live2d.style.top || 0) + deltaY + \"px\";\n        this.lastX = event.clientX;\n        this.lastY = event.clientY;\n      }\n    },\n    handleMouseUp() {\n      this.isDragging = false;\n      this.isDragging = false;\n      this.isDragging = false;\n    }\n\n\n\n},\n\n\n}\n\n\n</script>\n\n<style>\n\nbody {\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n  background-color: #01FE00;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n\n\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6974a0dd&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=6974a0dd&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport {store} from \"core-js/internals/reflect-metadata\";\r\n\r\n\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        websocket :\"\",\r\n        model4:\"\",\r\n        parameterIndex:\"\",\r\n        percentage:localStorage.getItem(\"percentage\") || 60,\r\n        scale:localStorage.getItem(\"scale\") || 1 ,\r\n        app:\"\",\r\n        live2d:\"\"\r\n\r\n    },\r\n    mutations: {\r\n    },\r\n    actions: {\r\n        //increase the percentage when click the button\r\n        increase(context) {\r\n            context.state.percentage += 5;\r\n            if (context.state.percentage > 100) {\r\n                context.state.percentage = 100;\r\n            }\r\n        },\r\n       // decrease the percentage when click the button\r\n        decrease(context) {\r\n            context.state.percentage -= 5;\r\n            if (context.state.percentage <= 1) {\r\n                context.state.percentage = 1;\r\n            }\r\n        },\r\n        //reduce the scale of the live2d model when click the button\r\n        reduce(context,live2d){\r\n        // ensure the scale is a number\r\n            if (typeof localStorage.scale != \"number\" ){\r\n                localStorage.scale = parseFloat(localStorage.scale)\r\n            }\r\n\r\n\r\n            if(context.state.scale<=0.3){\r\n                context.state.scale=0.3\r\n            }\r\n            context.state.scale-=0.1\r\n            context.state.model4.scale.set(context.state.scale) // reset the scale of the model\r\n\r\n            //reset the width and height of canvas\r\n            // live2d.style.width=context.state.width/2\r\n            live2d.width=context.state.model4.width\r\n            live2d.height=context.state.model4.height\r\n            context.state.app.resizeTo=live2d\r\n        },\r\n\r\n        //amplify the scale of the live2d model when click the button\r\n        amplify(context,live2d){\r\n        // ensure the scale is a number\r\n            if (typeof localStorage.scale != \"number\" ){\r\n                localStorage.scale = parseFloat(localStorage.scale)\r\n            }\r\n\r\n            if (context.state.scale>=1.5){\r\n                context.state.scale=1.5\r\n            }\r\n            context.state.scale-=(-0.1)\r\n            context.state.model4.scale.set(context.state.scale) // reset the scale of the model\r\n\r\n            //reset the width and height of canvas\r\n            live2d.width=context.state.model4.width\r\n            live2d.height=context.state.model4.height\r\n            context.state.app.resizeTo=live2d\r\n        },\r\n\r\n\r\n    }\r\n});","import Vue from 'vue'\nimport App from './App.vue'\nimport {Button, ButtonGroup, Drawer, Input, Message, Progress, Tooltip} from \"element-ui\";\n\nimport store from './store'\n\n\nVue.config.productionTip = false\n\n// navigator.mediaDevices.getUserMedia({ audio: true });\nVue.use(Button)\nVue.use(Drawer)\nVue.use(Progress)\nVue.use(ButtonGroup)\nVue.use(Input)\nVue.use(Tooltip)\n\n\n\n\nnew Vue({\n  render: h => h(App),\n  beforeCreate() {\n    Vue.prototype.$message = Message;\n  },\n  store,\n\n\n}).$mount('#app');\n\n\n\n\n","var __pow = Math.pow;\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n(function(global, factory) {\n  typeof exports === \"object\" && typeof module !== \"undefined\" ? factory(exports, require(\"@pixi/utils\"), require(\"@pixi/math\"), require(\"@pixi/core\"), require(\"@pixi/display\")) : typeof define === \"function\" && define.amd ? define([\"exports\", \"@pixi/utils\", \"@pixi/math\", \"@pixi/core\", \"@pixi/display\"], factory) : (global = typeof globalThis !== \"undefined\" ? globalThis : global || self, factory((global.PIXI = global.PIXI || {}, global.PIXI.live2d = global.PIXI.live2d || {}), global.PIXI.utils, global.PIXI, global.PIXI, global.PIXI));\n})(this, function(exports2, utils, math, core, display) {\n  \"use strict\";\n  const LOGICAL_WIDTH = 2;\n  const LOGICAL_HEIGHT = 2;\n  var CubismConfig;\n  ((CubismConfig2) => {\n    CubismConfig2.supportMoreMaskDivisions = true;\n    CubismConfig2.setOpacityFromMotion = false;\n  })(CubismConfig || (CubismConfig = {}));\n  exports2.config = void 0;\n  ((config2) => {\n    config2.LOG_LEVEL_VERBOSE = 0;\n    config2.LOG_LEVEL_WARNING = 1;\n    config2.LOG_LEVEL_ERROR = 2;\n    config2.LOG_LEVEL_NONE = 999;\n    config2.logLevel = config2.LOG_LEVEL_WARNING;\n    config2.sound = true;\n    config2.motionSync = true;\n    config2.motionFadingDuration = 500;\n    config2.idleMotionFadingDuration = 2e3;\n    config2.expressionFadingDuration = 500;\n    config2.preserveExpressionOnMotion = true;\n    config2.cubism4 = CubismConfig;\n  })(exports2.config || (exports2.config = {}));\n  const VERSION = \"0.4.0\";\n  const logger = {\n    log(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_VERBOSE) {\n        console.log(`[${tag}]`, ...messages);\n      }\n    },\n    warn(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_WARNING) {\n        console.warn(`[${tag}]`, ...messages);\n      }\n    },\n    error(tag, ...messages) {\n      if (exports2.config.logLevel <= exports2.config.LOG_LEVEL_ERROR) {\n        console.error(`[${tag}]`, ...messages);\n      }\n    }\n  };\n  function clamp(num, lower, upper) {\n    return num < lower ? lower : num > upper ? upper : num;\n  }\n  function rand(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  function copyProperty(type, from, to, fromKey, toKey) {\n    const value = from[fromKey];\n    if (value !== null && typeof value === type) {\n      to[toKey] = value;\n    }\n  }\n  function copyArray(type, from, to, fromKey, toKey) {\n    const array = from[fromKey];\n    if (Array.isArray(array)) {\n      to[toKey] = array.filter((item) => item !== null && typeof item === type);\n    }\n  }\n  function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n        if (name !== \"constructor\") {\n          Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n        }\n      });\n    });\n  }\n  function folderName(url) {\n    let lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex != -1) {\n      url = url.slice(0, lastSlashIndex);\n    }\n    lastSlashIndex = url.lastIndexOf(\"/\");\n    if (lastSlashIndex !== -1) {\n      url = url.slice(lastSlashIndex + 1);\n    }\n    return url;\n  }\n  function remove(array, item) {\n    const index = array.indexOf(item);\n    if (index !== -1) {\n      array.splice(index, 1);\n    }\n  }\n  class ExpressionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.expressions = [];\n      this.reserveExpressionIndex = -1;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `ExpressionManager(${settings.name})`;\n    }\n    init() {\n      this.defaultExpression = this.createExpression({}, void 0);\n      this.currentExpression = this.defaultExpression;\n      this.stopAllExpressions();\n    }\n    loadExpression(index) {\n      return __async(this, null, function* () {\n        if (!this.definitions[index]) {\n          logger.warn(this.tag, `Undefined expression at [${index}]`);\n          return void 0;\n        }\n        if (this.expressions[index] === null) {\n          logger.warn(this.tag, `Cannot set expression at [${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.expressions[index]) {\n          return this.expressions[index];\n        }\n        const expression = yield this._loadExpression(index);\n        this.expressions[index] = expression;\n        return expression;\n      });\n    }\n    _loadExpression(index) {\n      throw new Error(\"Not implemented.\");\n    }\n    setRandomExpression() {\n      return __async(this, null, function* () {\n        if (this.definitions.length) {\n          const availableIndices = [];\n          for (let i = 0; i < this.definitions.length; i++) {\n            if (this.expressions[i] !== null && this.expressions[i] !== this.currentExpression && i !== this.reserveExpressionIndex) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.setExpression(index);\n          }\n        }\n        return false;\n      });\n    }\n    resetExpression() {\n      this._setExpression(this.defaultExpression);\n    }\n    restoreExpression() {\n      this._setExpression(this.currentExpression);\n    }\n    setExpression(index) {\n      return __async(this, null, function* () {\n        if (typeof index !== \"number\") {\n          index = this.getExpressionIndex(index);\n        }\n        if (!(index > -1 && index < this.definitions.length)) {\n          return false;\n        }\n        if (index === this.expressions.indexOf(this.currentExpression)) {\n          return false;\n        }\n        this.reserveExpressionIndex = index;\n        const expression = yield this.loadExpression(index);\n        if (!expression || this.reserveExpressionIndex !== index) {\n          return false;\n        }\n        this.reserveExpressionIndex = -1;\n        this.currentExpression = expression;\n        this._setExpression(expression);\n        return true;\n      });\n    }\n    update(model, now) {\n      if (!this.isFinished()) {\n        return this.updateParameters(model, now);\n      }\n      return false;\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.expressions = void 0;\n    }\n  }\n  const EPSILON = 0.01;\n  const MAX_SPEED = 40 / 7.5;\n  const ACCELERATION_TIME = 1 / (0.15 * 1e3);\n  class FocusController {\n    constructor() {\n      this.targetX = 0;\n      this.targetY = 0;\n      this.x = 0;\n      this.y = 0;\n      this.vx = 0;\n      this.vy = 0;\n    }\n    focus(x, y, instant = false) {\n      this.targetX = clamp(x, -1, 1);\n      this.targetY = clamp(y, -1, 1);\n      if (instant) {\n        this.x = this.targetX;\n        this.y = this.targetY;\n      }\n    }\n    update(dt) {\n      const dx = this.targetX - this.x;\n      const dy = this.targetY - this.y;\n      if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n        return;\n      const d = Math.sqrt(__pow(dx, 2) + __pow(dy, 2));\n      const maxSpeed = MAX_SPEED / (1e3 / dt);\n      let ax = maxSpeed * (dx / d) - this.vx;\n      let ay = maxSpeed * (dy / d) - this.vy;\n      const a = Math.sqrt(__pow(ax, 2) + __pow(ay, 2));\n      const maxA = maxSpeed * ACCELERATION_TIME * dt;\n      if (a > maxA) {\n        ax *= maxA / a;\n        ay *= maxA / a;\n      }\n      this.vx += ax;\n      this.vy += ay;\n      const v = Math.sqrt(__pow(this.vx, 2) + __pow(this.vy, 2));\n      const maxV = 0.5 * (Math.sqrt(__pow(maxA, 2) + 8 * maxA * d) - maxA);\n      if (v > maxV) {\n        this.vx *= maxV / v;\n        this.vy *= maxV / v;\n      }\n      this.x += this.vx;\n      this.y += this.vy;\n    }\n  }\n  class ModelSettings {\n    constructor(json) {\n      this.json = json;\n      let url2 = json.url;\n      if (typeof url2 !== \"string\") {\n        throw new TypeError(\"The `url` field in settings JSON must be defined as a string.\");\n      }\n      this.url = url2;\n      this.name = folderName(this.url);\n    }\n    resolveURL(path) {\n      return utils.url.resolve(this.url, path);\n    }\n    replaceFiles(replacer) {\n      this.moc = replacer(this.moc, \"moc\");\n      if (this.pose !== void 0) {\n        this.pose = replacer(this.pose, \"pose\");\n      }\n      if (this.physics !== void 0) {\n        this.physics = replacer(this.physics, \"physics\");\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        this.textures[i] = replacer(this.textures[i], `textures[${i}]`);\n      }\n    }\n    getDefinedFiles() {\n      const files = [];\n      this.replaceFiles((file) => {\n        files.push(file);\n        return file;\n      });\n      return files;\n    }\n    validateFiles(files) {\n      const assertFileExists = (expectedFile, shouldThrow) => {\n        const actualPath = this.resolveURL(expectedFile);\n        if (!files.includes(actualPath)) {\n          if (shouldThrow) {\n            throw new Error(`File \"${expectedFile}\" is defined in settings, but doesn't exist in given files`);\n          }\n          return false;\n        }\n        return true;\n      };\n      const essentialFiles = [this.moc, ...this.textures];\n      essentialFiles.forEach((texture) => assertFileExists(texture, true));\n      const definedFiles = this.getDefinedFiles();\n      return definedFiles.filter((file) => assertFileExists(file, false));\n    }\n  }\n  var MotionPriority = /* @__PURE__ */ ((MotionPriority2) => {\n    MotionPriority2[MotionPriority2[\"NONE\"] = 0] = \"NONE\";\n    MotionPriority2[MotionPriority2[\"IDLE\"] = 1] = \"IDLE\";\n    MotionPriority2[MotionPriority2[\"NORMAL\"] = 2] = \"NORMAL\";\n    MotionPriority2[MotionPriority2[\"FORCE\"] = 3] = \"FORCE\";\n    return MotionPriority2;\n  })(MotionPriority || {});\n  class MotionState {\n    constructor() {\n      this.debug = false;\n      this.currentPriority = 0;\n      this.reservePriority = 0;\n    }\n    reserve(group, index, priority) {\n      if (priority <= 0) {\n        logger.log(this.tag, `Cannot start a motion with MotionPriority.NONE.`);\n        return false;\n      }\n      if (group === this.currentGroup && index === this.currentIndex) {\n        logger.log(this.tag, `Motion is already playing.`, this.dump(group, index));\n        return false;\n      }\n      if (group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex) {\n        logger.log(this.tag, `Motion is already reserved.`, this.dump(group, index));\n        return false;\n      }\n      if (priority === 1) {\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, `Cannot start idle motion because another motion is playing.`, this.dump(group, index));\n          return false;\n        }\n        if (this.reservedIdleGroup !== void 0) {\n          logger.log(this.tag, `Cannot start idle motion because another idle motion has reserved.`, this.dump(group, index));\n          return false;\n        }\n        this.setReservedIdle(group, index);\n      } else {\n        if (priority < 3) {\n          if (priority <= this.currentPriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion is playing as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n          if (priority <= this.reservePriority) {\n            logger.log(this.tag, \"Cannot start motion because another motion has reserved as an equivalent or higher priority.\", this.dump(group, index));\n            return false;\n          }\n        }\n        this.setReserved(group, index, priority);\n      }\n      return true;\n    }\n    start(motion, group, index, priority) {\n      if (priority === 1) {\n        this.setReservedIdle(void 0, void 0);\n        if (this.currentPriority !== 0) {\n          logger.log(this.tag, \"Cannot start idle motion because another motion is playing.\", this.dump(group, index));\n          return false;\n        }\n      } else {\n        if (group !== this.reservedGroup || index !== this.reservedIndex) {\n          logger.log(this.tag, \"Cannot start motion because another motion has taken the place.\", this.dump(group, index));\n          return false;\n        }\n        this.setReserved(void 0, void 0, 0);\n      }\n      if (!motion) {\n        return false;\n      }\n      this.setCurrent(group, index, priority);\n      return true;\n    }\n    complete() {\n      this.setCurrent(void 0, void 0, 0);\n    }\n    setCurrent(group, index, priority) {\n      this.currentPriority = priority;\n      this.currentGroup = group;\n      this.currentIndex = index;\n    }\n    setReserved(group, index, priority) {\n      this.reservePriority = priority;\n      this.reservedGroup = group;\n      this.reservedIndex = index;\n    }\n    setReservedIdle(group, index) {\n      this.reservedIdleGroup = group;\n      this.reservedIdleIndex = index;\n    }\n    isActive(group, index) {\n      return group === this.currentGroup && index === this.currentIndex || group === this.reservedGroup && index === this.reservedIndex || group === this.reservedIdleGroup && index === this.reservedIdleIndex;\n    }\n    reset() {\n      this.setCurrent(void 0, void 0, 0);\n      this.setReserved(void 0, void 0, 0);\n      this.setReservedIdle(void 0, void 0);\n    }\n    shouldRequestIdleMotion() {\n      return this.currentGroup === void 0 && this.reservedIdleGroup === void 0;\n    }\n    shouldOverrideExpression() {\n      return !exports2.config.preserveExpressionOnMotion && this.currentPriority > 1;\n    }\n    dump(requestedGroup, requestedIndex) {\n      if (this.debug) {\n        const keys = [\n          \"currentPriority\",\n          \"reservePriority\",\n          \"currentGroup\",\n          \"currentIndex\",\n          \"reservedGroup\",\n          \"reservedIndex\",\n          \"reservedIdleGroup\",\n          \"reservedIdleIndex\"\n        ];\n        return `\n<Requested> group = \"${requestedGroup}\", index = ${requestedIndex}\n` + keys.map((key) => \"[\" + key + \"] \" + this[key]).join(\"\\n\");\n      }\n      return \"\";\n    }\n  }\n  const TAG$2 = \"SoundManager\";\n  const VOLUME = 0.5;\n  class SoundManager {\n    static get volume() {\n      return this._volume;\n    }\n    static set volume(value) {\n      this._volume = (value > 1 ? 1 : value < 0 ? 0 : value) || 0;\n      this.audios.forEach((audio) => audio.volume = this._volume);\n    }\n    static add(file, onFinish, onError) {\n      const audio = new Audio(file);\n      audio.volume = this._volume;\n      audio.preload = \"auto\";\n      audio.addEventListener(\"ended\", () => {\n        this.dispose(audio);\n        onFinish == null ? void 0 : onFinish();\n      });\n      audio.addEventListener(\"error\", (e) => {\n        this.dispose(audio);\n        logger.warn(TAG$2, `Error occurred on \"${file}\"`, e.error);\n        onError == null ? void 0 : onError(e.error);\n      });\n      this.audios.push(audio);\n      return audio;\n    }\n    static play(audio) {\n      return new Promise((resolve, reject) => {\n        var _a;\n        (_a = audio.play()) == null ? void 0 : _a.catch((e) => {\n          audio.dispatchEvent(new ErrorEvent(\"error\", { error: e }));\n          reject(e);\n        });\n        if (audio.readyState === audio.HAVE_ENOUGH_DATA) {\n          resolve();\n        } else {\n          audio.addEventListener(\"canplaythrough\", resolve);\n        }\n      });\n    }\n    static dispose(audio) {\n      audio.pause();\n      audio.removeAttribute(\"src\");\n      remove(this.audios, audio);\n    }\n    static destroy() {\n      for (let i = this.audios.length - 1; i >= 0; i--) {\n        this.dispose(this.audios[i]);\n      }\n    }\n  }\n  SoundManager.audios = [];\n  SoundManager._volume = VOLUME;\n  var MotionPreloadStrategy = /* @__PURE__ */ ((MotionPreloadStrategy2) => {\n    MotionPreloadStrategy2[\"ALL\"] = \"ALL\";\n    MotionPreloadStrategy2[\"IDLE\"] = \"IDLE\";\n    MotionPreloadStrategy2[\"NONE\"] = \"NONE\";\n    return MotionPreloadStrategy2;\n  })(MotionPreloadStrategy || {});\n  class MotionManager extends utils.EventEmitter {\n    constructor(settings, options) {\n      super();\n      this.motionGroups = {};\n      this.state = new MotionState();\n      this.playing = false;\n      this.destroyed = false;\n      this.settings = settings;\n      this.tag = `MotionManager(${settings.name})`;\n      this.state.tag = this.tag;\n    }\n    init(options) {\n      if (options == null ? void 0 : options.idleMotionGroup) {\n        this.groups.idle = options.idleMotionGroup;\n      }\n      this.setupMotions(options);\n      this.stopAllMotions();\n    }\n    setupMotions(options) {\n      for (const group of Object.keys(this.definitions)) {\n        this.motionGroups[group] = [];\n      }\n      let groups;\n      switch (options == null ? void 0 : options.motionPreload) {\n        case \"NONE\":\n          return;\n        case \"ALL\":\n          groups = Object.keys(this.definitions);\n          break;\n        case \"IDLE\":\n        default:\n          groups = [this.groups.idle];\n          break;\n      }\n      for (const group of groups) {\n        if (this.definitions[group]) {\n          for (let i = 0; i < this.definitions[group].length; i++) {\n            this.loadMotion(group, i).then();\n          }\n        }\n      }\n    }\n    loadMotion(group, index) {\n      return __async(this, null, function* () {\n        var _a;\n        if (!((_a = this.definitions[group]) == null ? void 0 : _a[index])) {\n          logger.warn(this.tag, `Undefined motion at \"${group}\"[${index}]`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index] === null) {\n          logger.warn(this.tag, `Cannot start motion at \"${group}\"[${index}] because it's already failed in loading.`);\n          return void 0;\n        }\n        if (this.motionGroups[group][index]) {\n          return this.motionGroups[group][index];\n        }\n        const motion = yield this._loadMotion(group, index);\n        if (this.destroyed) {\n          return;\n        }\n        this.motionGroups[group][index] = motion != null ? motion : null;\n        return motion;\n      });\n    }\n    _loadMotion(group, index) {\n      throw new Error(\"Not implemented.\");\n    }\n    startMotion(_0, _1) {\n      return __async(this, arguments, function* (group, index, priority = MotionPriority.NORMAL) {\n        var _a;\n        if (!this.state.reserve(group, index, priority)) {\n          return false;\n        }\n        const definition = (_a = this.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return false;\n        }\n        if (this.currentAudio) {\n          SoundManager.dispose(this.currentAudio);\n        }\n        let audio;\n        if (exports2.config.sound) {\n          const soundURL = this.getSoundFile(definition);\n          if (soundURL) {\n            try {\n              audio = SoundManager.add(this.settings.resolveURL(soundURL), () => this.currentAudio = void 0, () => this.currentAudio = void 0);\n              this.currentAudio = audio;\n            } catch (e) {\n              logger.warn(this.tag, \"Failed to create audio\", soundURL, e);\n            }\n          }\n        }\n        const motion = yield this.loadMotion(group, index);\n        if (audio) {\n          const readyToPlay = SoundManager.play(audio).catch((e) => logger.warn(this.tag, \"Failed to play audio\", audio.src, e));\n          if (exports2.config.motionSync) {\n            yield readyToPlay;\n          }\n        }\n        if (!this.state.start(motion, group, index, priority)) {\n          if (audio) {\n            SoundManager.dispose(audio);\n            this.currentAudio = void 0;\n          }\n          return false;\n        }\n        logger.log(this.tag, \"Start motion:\", this.getMotionName(definition));\n        this.emit(\"motionStart\", group, index, audio);\n        if (this.state.shouldOverrideExpression()) {\n          this.expressionManager && this.expressionManager.resetExpression();\n        }\n        this.playing = true;\n        this._startMotion(motion);\n        return true;\n      });\n    }\n    startRandomMotion(group, priority) {\n      return __async(this, null, function* () {\n        const groupDefs = this.definitions[group];\n        if (groupDefs == null ? void 0 : groupDefs.length) {\n          const availableIndices = [];\n          for (let i = 0; i < groupDefs.length; i++) {\n            if (this.motionGroups[group][i] !== null && !this.state.isActive(group, i)) {\n              availableIndices.push(i);\n            }\n          }\n          if (availableIndices.length) {\n            const index = Math.floor(Math.random() * availableIndices.length);\n            return this.startMotion(group, availableIndices[index], priority);\n          }\n        }\n        return false;\n      });\n    }\n    stopAllMotions() {\n      this._stopAllMotions();\n      this.state.reset();\n      if (this.currentAudio) {\n        SoundManager.dispose(this.currentAudio);\n        this.currentAudio = void 0;\n      }\n    }\n    update(model, now) {\n      var _a;\n      if (this.isFinished()) {\n        if (this.playing) {\n          this.playing = false;\n          this.emit(\"motionFinish\");\n        }\n        if (this.state.shouldOverrideExpression()) {\n          (_a = this.expressionManager) == null ? void 0 : _a.restoreExpression();\n        }\n        this.state.complete();\n        if (this.state.shouldRequestIdleMotion()) {\n          this.startRandomMotion(this.groups.idle, MotionPriority.IDLE);\n        }\n      }\n      return this.updateParameters(model, now);\n    }\n    destroy() {\n      var _a;\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.stopAllMotions();\n      (_a = this.expressionManager) == null ? void 0 : _a.destroy();\n      const self2 = this;\n      self2.definitions = void 0;\n      self2.motionGroups = void 0;\n    }\n  }\n  const tempBounds = { x: 0, y: 0, width: 0, height: 0 };\n  class InternalModel extends utils.EventEmitter {\n    constructor() {\n      super(...arguments);\n      this.focusController = new FocusController();\n      this.originalWidth = 0;\n      this.originalHeight = 0;\n      this.width = 0;\n      this.height = 0;\n      this.localTransform = new math.Matrix();\n      this.drawingMatrix = new math.Matrix();\n      this.hitAreas = {};\n      this.textureFlipY = false;\n      this.viewport = [0, 0, 0, 0];\n      this.destroyed = false;\n    }\n    init() {\n      this.setupLayout();\n      this.setupHitAreas();\n    }\n    setupLayout() {\n      const self2 = this;\n      const size = this.getSize();\n      self2.originalWidth = size[0];\n      self2.originalHeight = size[1];\n      const layout = Object.assign({\n        width: LOGICAL_WIDTH,\n        height: LOGICAL_HEIGHT\n      }, this.getLayout());\n      this.localTransform.scale(layout.width / LOGICAL_WIDTH, layout.height / LOGICAL_HEIGHT);\n      self2.width = this.originalWidth * this.localTransform.a;\n      self2.height = this.originalHeight * this.localTransform.d;\n      const offsetX = layout.x !== void 0 && layout.x - layout.width / 2 || layout.centerX !== void 0 && layout.centerX || layout.left !== void 0 && layout.left - layout.width / 2 || layout.right !== void 0 && layout.right + layout.width / 2 || 0;\n      const offsetY = layout.y !== void 0 && layout.y - layout.height / 2 || layout.centerY !== void 0 && layout.centerY || layout.top !== void 0 && layout.top - layout.height / 2 || layout.bottom !== void 0 && layout.bottom + layout.height / 2 || 0;\n      this.localTransform.translate(this.width * offsetX, -this.height * offsetY);\n    }\n    setupHitAreas() {\n      const definitions = this.getHitAreaDefs().filter((hitArea) => hitArea.index >= 0);\n      for (const def of definitions) {\n        this.hitAreas[def.name] = def;\n      }\n    }\n    hitTest(x, y) {\n      return Object.keys(this.hitAreas).filter((hitAreaName) => this.isHit(hitAreaName, x, y));\n    }\n    isHit(hitAreaName, x, y) {\n      if (!this.hitAreas[hitAreaName]) {\n        return false;\n      }\n      const drawIndex = this.hitAreas[hitAreaName].index;\n      const bounds = this.getDrawableBounds(drawIndex, tempBounds);\n      return bounds.x <= x && x <= bounds.x + bounds.width && bounds.y <= y && y <= bounds.y + bounds.height;\n    }\n    getDrawableBounds(index, bounds) {\n      const vertices = this.getDrawableVertices(index);\n      let left = vertices[0];\n      let right = vertices[0];\n      let top = vertices[1];\n      let bottom = vertices[1];\n      for (let i = 0; i < vertices.length; i += 2) {\n        const vx = vertices[i];\n        const vy = vertices[i + 1];\n        left = Math.min(vx, left);\n        right = Math.max(vx, right);\n        top = Math.min(vy, top);\n        bottom = Math.max(vy, bottom);\n      }\n      bounds != null ? bounds : bounds = {};\n      bounds.x = left;\n      bounds.y = top;\n      bounds.width = right - left;\n      bounds.height = bottom - top;\n      return bounds;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(transform).append(this.localTransform);\n    }\n    update(dt, now) {\n      this.focusController.update(dt);\n    }\n    destroy() {\n      this.destroyed = true;\n      this.emit(\"destroy\");\n      this.motionManager.destroy();\n      this.motionManager = void 0;\n    }\n  }\n  const TAG$1 = \"XHRLoader\";\n  class NetworkError extends Error {\n    constructor(message, url, status, aborted = false) {\n      super(message);\n      this.url = url;\n      this.status = status;\n      this.aborted = aborted;\n    }\n  }\n  const _XHRLoader = class {\n    static createXHR(target, url, type, onload, onerror) {\n      const xhr = new XMLHttpRequest();\n      _XHRLoader.allXhrSet.add(xhr);\n      if (target) {\n        let xhrSet = _XHRLoader.xhrMap.get(target);\n        if (!xhrSet) {\n          xhrSet = /* @__PURE__ */ new Set([xhr]);\n          _XHRLoader.xhrMap.set(target, xhrSet);\n        } else {\n          xhrSet.add(xhr);\n        }\n        if (!target.listeners(\"destroy\").includes(_XHRLoader.cancelXHRs)) {\n          target.once(\"destroy\", _XHRLoader.cancelXHRs);\n        }\n      }\n      xhr.open(\"GET\", url);\n      xhr.responseType = type;\n      xhr.onload = () => {\n        if ((xhr.status === 200 || xhr.status === 0) && xhr.response) {\n          onload(xhr.response);\n        } else {\n          xhr.onerror();\n        }\n      };\n      xhr.onerror = () => {\n        logger.warn(TAG$1, `Failed to load resource as ${xhr.responseType} (Status ${xhr.status}): ${url}`);\n        onerror(new NetworkError(\"Network error.\", url, xhr.status));\n      };\n      xhr.onabort = () => onerror(new NetworkError(\"Aborted.\", url, xhr.status, true));\n      xhr.onloadend = () => {\n        var _a;\n        _XHRLoader.allXhrSet.delete(xhr);\n        if (target) {\n          (_a = _XHRLoader.xhrMap.get(target)) == null ? void 0 : _a.delete(xhr);\n        }\n      };\n      return xhr;\n    }\n    static cancelXHRs() {\n      var _a;\n      (_a = _XHRLoader.xhrMap.get(this)) == null ? void 0 : _a.forEach((xhr) => {\n        xhr.abort();\n        _XHRLoader.allXhrSet.delete(xhr);\n      });\n      _XHRLoader.xhrMap.delete(this);\n    }\n    static release() {\n      _XHRLoader.allXhrSet.forEach((xhr) => xhr.abort());\n      _XHRLoader.allXhrSet.clear();\n      _XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n    }\n  };\n  let XHRLoader = _XHRLoader;\n  XHRLoader.xhrMap = /* @__PURE__ */ new WeakMap();\n  XHRLoader.allXhrSet = /* @__PURE__ */ new Set();\n  XHRLoader.loader = (context, next) => {\n    return new Promise((resolve, reject) => {\n      const xhr = _XHRLoader.createXHR(context.target, context.settings ? context.settings.resolveURL(context.url) : context.url, context.type, (data) => {\n        context.result = data;\n        resolve();\n      }, reject);\n      xhr.send();\n    });\n  };\n  function runMiddlewares(middleware, context) {\n    let index = -1;\n    return dispatch(0);\n    function dispatch(i, err) {\n      if (err)\n        return Promise.reject(err);\n      if (i <= index)\n        return Promise.reject(new Error(\"next() called multiple times\"));\n      index = i;\n      const fn = middleware[i];\n      if (!fn)\n        return Promise.resolve();\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err2) {\n        return Promise.reject(err2);\n      }\n    }\n  }\n  class Live2DLoader {\n    static load(context) {\n      return runMiddlewares(this.middlewares, context).then(() => context.result);\n    }\n  }\n  Live2DLoader.middlewares = [XHRLoader.loader];\n  function createTexture(url, options = {}) {\n    var _a;\n    const textureOptions = { resourceOptions: { crossorigin: options.crossOrigin } };\n    if (core.Texture.fromURL) {\n      return core.Texture.fromURL(url, textureOptions).catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        }\n        const err = new Error(\"Texture loading error\");\n        err.event = e;\n        throw err;\n      });\n    }\n    textureOptions.resourceOptions.autoLoad = false;\n    const texture = core.Texture.from(url, textureOptions);\n    if (texture.baseTexture.valid) {\n      return Promise.resolve(texture);\n    }\n    const resource = texture.baseTexture.resource;\n    (_a = resource._live2d_load) != null ? _a : resource._live2d_load = new Promise((resolve, reject) => {\n      const errorHandler = (event) => {\n        resource.source.removeEventListener(\"error\", errorHandler);\n        const err = new Error(\"Texture loading error\");\n        err.event = event;\n        reject(err);\n      };\n      resource.source.addEventListener(\"error\", errorHandler);\n      resource.load().then(() => resolve(texture)).catch(errorHandler);\n    });\n    return resource._live2d_load;\n  }\n  const TAG = \"Live2DFactory\";\n  const urlToJSON = (context, next) => __async(this, null, function* () {\n    if (typeof context.source === \"string\") {\n      const data = yield Live2DLoader.load({\n        url: context.source,\n        type: \"json\",\n        target: context.live2dModel\n      });\n      data.url = context.source;\n      context.source = data;\n      context.live2dModel.emit(\"settingsJSONLoaded\", data);\n    }\n    return next();\n  });\n  const jsonToSettings = (context, next) => __async(this, null, function* () {\n    if (context.source instanceof ModelSettings) {\n      context.settings = context.source;\n      return next();\n    } else if (typeof context.source === \"object\") {\n      const runtime = Live2DFactory.findRuntime(context.source);\n      if (runtime) {\n        const settings = runtime.createModelSettings(context.source);\n        context.settings = settings;\n        context.live2dModel.emit(\"settingsLoaded\", settings);\n        return next();\n      }\n    }\n    throw new TypeError(\"Unknown settings format.\");\n  });\n  const waitUntilReady = (context, next) => {\n    if (context.settings) {\n      const runtime = Live2DFactory.findRuntime(context.settings);\n      if (runtime) {\n        return runtime.ready().then(next);\n      }\n    }\n    return next();\n  };\n  const setupOptionals = (context, next) => __async(this, null, function* () {\n    yield next();\n    const internalModel = context.internalModel;\n    if (internalModel) {\n      const settings = context.settings;\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (runtime) {\n        const tasks = [];\n        if (settings.pose) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.pose,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.pose = runtime.createPose(internalModel.coreModel, data);\n            context.live2dModel.emit(\"poseLoaded\", internalModel.pose);\n          }).catch((e) => {\n            context.live2dModel.emit(\"poseLoadError\", e);\n            logger.warn(TAG, \"Failed to load pose.\", e);\n          }));\n        }\n        if (settings.physics) {\n          tasks.push(Live2DLoader.load({\n            settings,\n            url: settings.physics,\n            type: \"json\",\n            target: internalModel\n          }).then((data) => {\n            internalModel.physics = runtime.createPhysics(internalModel.coreModel, data);\n            context.live2dModel.emit(\"physicsLoaded\", internalModel.physics);\n          }).catch((e) => {\n            context.live2dModel.emit(\"physicsLoadError\", e);\n            logger.warn(TAG, \"Failed to load physics.\", e);\n          }));\n        }\n        if (tasks.length) {\n          yield Promise.all(tasks);\n        }\n      }\n    }\n  });\n  const setupEssentials = (context, next) => __async(this, null, function* () {\n    if (context.settings) {\n      const live2DModel = context.live2dModel;\n      const textureLoadings = context.settings.textures.map((tex) => {\n        const url = context.settings.resolveURL(tex);\n        return createTexture(url, { crossOrigin: context.options.crossOrigin });\n      });\n      yield next();\n      if (context.internalModel) {\n        live2DModel.internalModel = context.internalModel;\n        live2DModel.emit(\"modelLoaded\", context.internalModel);\n      } else {\n        throw new TypeError(\"Missing internal model.\");\n      }\n      live2DModel.textures = yield Promise.all(textureLoadings);\n      live2DModel.emit(\"textureLoaded\", live2DModel.textures);\n    } else {\n      throw new TypeError(\"Missing settings.\");\n    }\n  });\n  const createInternalModel = (context, next) => __async(this, null, function* () {\n    const settings = context.settings;\n    if (settings instanceof ModelSettings) {\n      const runtime = Live2DFactory.findRuntime(settings);\n      if (!runtime) {\n        throw new TypeError(\"Unknown model settings.\");\n      }\n      const modelData = yield Live2DLoader.load({\n        settings,\n        url: settings.moc,\n        type: \"arraybuffer\",\n        target: context.live2dModel\n      });\n      if (!runtime.isValidMoc(modelData)) {\n        throw new Error(\"Invalid moc data\");\n      }\n      const coreModel = runtime.createCoreModel(modelData);\n      context.internalModel = runtime.createInternalModel(coreModel, settings, context.options);\n      return next();\n    }\n    throw new TypeError(\"Missing settings.\");\n  });\n  const _Live2DFactory = class {\n    static registerRuntime(runtime) {\n      _Live2DFactory.runtimes.push(runtime);\n      _Live2DFactory.runtimes.sort((a, b) => b.version - a.version);\n    }\n    static findRuntime(source) {\n      for (const runtime of _Live2DFactory.runtimes) {\n        if (runtime.test(source)) {\n          return runtime;\n        }\n      }\n    }\n    static setupLive2DModel(live2dModel, source, options) {\n      return __async(this, null, function* () {\n        const textureLoaded = new Promise((resolve) => live2dModel.once(\"textureLoaded\", resolve));\n        const modelLoaded = new Promise((resolve) => live2dModel.once(\"modelLoaded\", resolve));\n        const readyEventEmitted = Promise.all([textureLoaded, modelLoaded]).then(() => live2dModel.emit(\"ready\"));\n        yield runMiddlewares(_Live2DFactory.live2DModelMiddlewares, {\n          live2dModel,\n          source,\n          options: options || {}\n        });\n        yield readyEventEmitted;\n        live2dModel.emit(\"load\");\n      });\n    }\n    static loadMotion(motionManager, group, index) {\n      var _a, _b;\n      const handleError = (e) => motionManager.emit(\"motionLoadError\", group, index, e);\n      try {\n        const definition = (_a = motionManager.definitions[group]) == null ? void 0 : _a[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!motionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          motionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.motionTasksMap.get(motionManager);\n        if (!tasks) {\n          tasks = {};\n          _Live2DFactory.motionTasksMap.set(motionManager, tasks);\n        }\n        let taskGroup = tasks[group];\n        if (!taskGroup) {\n          taskGroup = [];\n          tasks[group] = taskGroup;\n        }\n        const path = motionManager.getMotionFile(definition);\n        (_b = taskGroup[index]) != null ? _b : taskGroup[index] = Live2DLoader.load({\n          url: path,\n          settings: motionManager.settings,\n          type: motionManager.motionDataType,\n          target: motionManager\n        }).then((data) => {\n          var _a2;\n          const taskGroup2 = (_a2 = _Live2DFactory.motionTasksMap.get(motionManager)) == null ? void 0 : _a2[group];\n          if (taskGroup2) {\n            delete taskGroup2[index];\n          }\n          const motion = motionManager.createMotion(data, group, definition);\n          motionManager.emit(\"motionLoaded\", group, index, motion);\n          return motion;\n        }).catch((e) => {\n          logger.warn(motionManager.tag, `Failed to load motion: ${path}\n`, e);\n          handleError(e);\n        });\n        return taskGroup[index];\n      } catch (e) {\n        logger.warn(motionManager.tag, `Failed to load motion at \"${group}\"[${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static loadExpression(expressionManager, index) {\n      var _a;\n      const handleError = (e) => expressionManager.emit(\"expressionLoadError\", index, e);\n      try {\n        const definition = expressionManager.definitions[index];\n        if (!definition) {\n          return Promise.resolve(void 0);\n        }\n        if (!expressionManager.listeners(\"destroy\").includes(_Live2DFactory.releaseTasks)) {\n          expressionManager.once(\"destroy\", _Live2DFactory.releaseTasks);\n        }\n        let tasks = _Live2DFactory.expressionTasksMap.get(expressionManager);\n        if (!tasks) {\n          tasks = [];\n          _Live2DFactory.expressionTasksMap.set(expressionManager, tasks);\n        }\n        const path = expressionManager.getExpressionFile(definition);\n        (_a = tasks[index]) != null ? _a : tasks[index] = Live2DLoader.load({\n          url: path,\n          settings: expressionManager.settings,\n          type: \"json\",\n          target: expressionManager\n        }).then((data) => {\n          const tasks2 = _Live2DFactory.expressionTasksMap.get(expressionManager);\n          if (tasks2) {\n            delete tasks2[index];\n          }\n          const expression = expressionManager.createExpression(data, definition);\n          expressionManager.emit(\"expressionLoaded\", index, expression);\n          return expression;\n        }).catch((e) => {\n          logger.warn(expressionManager.tag, `Failed to load expression: ${path}\n`, e);\n          handleError(e);\n        });\n        return tasks[index];\n      } catch (e) {\n        logger.warn(expressionManager.tag, `Failed to load expression at [${index}]\n`, e);\n        handleError(e);\n      }\n      return Promise.resolve(void 0);\n    }\n    static releaseTasks() {\n      if (this instanceof MotionManager) {\n        _Live2DFactory.motionTasksMap.delete(this);\n      } else {\n        _Live2DFactory.expressionTasksMap.delete(this);\n      }\n    }\n  };\n  let Live2DFactory = _Live2DFactory;\n  Live2DFactory.runtimes = [];\n  Live2DFactory.urlToJSON = urlToJSON;\n  Live2DFactory.jsonToSettings = jsonToSettings;\n  Live2DFactory.waitUntilReady = waitUntilReady;\n  Live2DFactory.setupOptionals = setupOptionals;\n  Live2DFactory.setupEssentials = setupEssentials;\n  Live2DFactory.createInternalModel = createInternalModel;\n  Live2DFactory.live2DModelMiddlewares = [\n    urlToJSON,\n    jsonToSettings,\n    waitUntilReady,\n    setupOptionals,\n    setupEssentials,\n    createInternalModel\n  ];\n  Live2DFactory.motionTasksMap = /* @__PURE__ */ new WeakMap();\n  Live2DFactory.expressionTasksMap = /* @__PURE__ */ new WeakMap();\n  MotionManager.prototype[\"_loadMotion\"] = function(group, index) {\n    return Live2DFactory.loadMotion(this, group, index);\n  };\n  ExpressionManager.prototype[\"_loadExpression\"] = function(index) {\n    return Live2DFactory.loadExpression(this, index);\n  };\n  class InteractionMixin {\n    constructor() {\n      this._autoInteract = false;\n    }\n    get autoInteract() {\n      return this._autoInteract;\n    }\n    set autoInteract(autoInteract) {\n      if (autoInteract !== this._autoInteract) {\n        if (autoInteract) {\n          this.on(\"pointertap\", onTap, this);\n        } else {\n          this.off(\"pointertap\", onTap, this);\n        }\n        this._autoInteract = autoInteract;\n      }\n    }\n    registerInteraction(manager) {\n      if (manager !== this.interactionManager) {\n        this.unregisterInteraction();\n        if (this._autoInteract && manager) {\n          this.interactionManager = manager;\n          manager.on(\"pointermove\", onPointerMove, this);\n        }\n      }\n    }\n    unregisterInteraction() {\n      var _a;\n      if (this.interactionManager) {\n        (_a = this.interactionManager) == null ? void 0 : _a.off(\"pointermove\", onPointerMove, this);\n        this.interactionManager = void 0;\n      }\n    }\n  }\n  function onTap(event) {\n    this.tap(event.data.global.x, event.data.global.y);\n  }\n  function onPointerMove(event) {\n    this.focus(event.data.global.x, event.data.global.y);\n  }\n  class Live2DTransform extends math.Transform {\n  }\n  const tempPoint = new math.Point();\n  const tempMatrix$1 = new math.Matrix();\n  let tickerRef;\n  class Live2DModel extends display.Container {\n    constructor(options) {\n      super();\n      this.tag = \"Live2DModel(uninitialized)\";\n      this.textures = [];\n      this.transform = new Live2DTransform();\n      this.anchor = new math.ObservablePoint(this.onAnchorChange, this, 0, 0);\n      this.glContextID = -1;\n      this.elapsedTime = performance.now();\n      this.deltaTime = 0;\n      this._autoUpdate = false;\n      this.once(\"modelLoaded\", () => this.init(options));\n    }\n    static from(source, options) {\n      const model = new this(options);\n      return Live2DFactory.setupLive2DModel(model, source, options).then(() => model);\n    }\n    static fromSync(source, options) {\n      const model = new this(options);\n      Live2DFactory.setupLive2DModel(model, source, options).then(options == null ? void 0 : options.onLoad).catch(options == null ? void 0 : options.onError);\n      return model;\n    }\n    static registerTicker(tickerClass) {\n      tickerRef = tickerClass;\n    }\n    get autoUpdate() {\n      return this._autoUpdate;\n    }\n    set autoUpdate(autoUpdate) {\n      var _a;\n      tickerRef || (tickerRef = (_a = window.PIXI) == null ? void 0 : _a.Ticker);\n      if (autoUpdate) {\n        if (!this._destroyed) {\n          if (tickerRef) {\n            tickerRef.shared.add(this.onTickerUpdate, this);\n            this._autoUpdate = true;\n          } else {\n            logger.warn(this.tag, \"No Ticker registered, please call Live2DModel.registerTicker(Ticker).\");\n          }\n        }\n      } else {\n        tickerRef == null ? void 0 : tickerRef.shared.remove(this.onTickerUpdate, this);\n        this._autoUpdate = false;\n      }\n    }\n    init(options) {\n      this.tag = `Live2DModel(${this.internalModel.settings.name})`;\n      const _options = Object.assign({\n        autoUpdate: true,\n        autoInteract: true\n      }, options);\n      if (_options.autoInteract) {\n        this.interactive = true;\n      }\n      this.autoInteract = _options.autoInteract;\n      this.autoUpdate = _options.autoUpdate;\n    }\n    onAnchorChange() {\n      this.pivot.set(this.anchor.x * this.internalModel.width, this.anchor.y * this.internalModel.height);\n    }\n    motion(group, index, priority) {\n      return index === void 0 ? this.internalModel.motionManager.startRandomMotion(group, priority) : this.internalModel.motionManager.startMotion(group, index, priority);\n    }\n    expression(id) {\n      if (this.internalModel.motionManager.expressionManager) {\n        return id === void 0 ? this.internalModel.motionManager.expressionManager.setRandomExpression() : this.internalModel.motionManager.expressionManager.setExpression(id);\n      }\n      return Promise.resolve(false);\n    }\n    focus(x, y, instant = false) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint, true);\n      let tx = tempPoint.x / this.internalModel.originalWidth * 2 - 1;\n      let ty = tempPoint.y / this.internalModel.originalHeight * 2 - 1;\n      let radian = Math.atan2(ty, tx);\n      this.internalModel.focusController.focus(Math.cos(radian), -Math.sin(radian), instant);\n    }\n    tap(x, y) {\n      const hitAreaNames = this.hitTest(x, y);\n      if (hitAreaNames.length) {\n        logger.log(this.tag, `Hit`, hitAreaNames);\n        this.emit(\"hit\", hitAreaNames);\n      }\n    }\n    hitTest(x, y) {\n      tempPoint.x = x;\n      tempPoint.y = y;\n      this.toModelPosition(tempPoint, tempPoint);\n      return this.internalModel.hitTest(tempPoint.x, tempPoint.y);\n    }\n    toModelPosition(position, result = position.clone(), skipUpdate) {\n      if (!skipUpdate) {\n        this._recursivePostUpdateTransform();\n        if (!this.parent) {\n          this.parent = this._tempDisplayObjectParent;\n          this.displayObjectUpdateTransform();\n          this.parent = null;\n        } else {\n          this.displayObjectUpdateTransform();\n        }\n      }\n      this.transform.worldTransform.applyInverse(position, result);\n      this.internalModel.localTransform.applyInverse(result, result);\n      return result;\n    }\n    containsPoint(point) {\n      return this.getBounds(true).contains(point.x, point.y);\n    }\n    _calculateBounds() {\n      this._bounds.addFrame(this.transform, 0, 0, this.internalModel.width, this.internalModel.height);\n    }\n    onTickerUpdate() {\n      this.update(tickerRef.shared.deltaMS);\n    }\n    update(dt) {\n      this.deltaTime += dt;\n      this.elapsedTime += dt;\n    }\n    _render(renderer) {\n      this.registerInteraction(renderer.plugins.interaction);\n      renderer.batch.reset();\n      renderer.geometry.reset();\n      renderer.shader.reset();\n      renderer.state.reset();\n      let shouldUpdateTexture = false;\n      if (this.glContextID !== renderer.CONTEXT_UID) {\n        this.glContextID = renderer.CONTEXT_UID;\n        this.internalModel.updateWebGLContext(renderer.gl, this.glContextID);\n        shouldUpdateTexture = true;\n      }\n      for (let i = 0; i < this.textures.length; i++) {\n        const texture = this.textures[i];\n        if (!texture.valid) {\n          continue;\n        }\n        if (shouldUpdateTexture || !texture.baseTexture._glTextures[this.glContextID]) {\n          renderer.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, this.internalModel.textureFlipY);\n          renderer.texture.bind(texture.baseTexture, 0);\n        }\n        this.internalModel.bindTexture(i, texture.baseTexture._glTextures[this.glContextID].texture);\n        texture.baseTexture.touched = renderer.textureGC.count;\n      }\n      const viewport = renderer.framebuffer.viewport;\n      this.internalModel.viewport = [viewport.x, viewport.y, viewport.width, viewport.height];\n      if (this.deltaTime) {\n        this.internalModel.update(this.deltaTime, this.elapsedTime);\n        this.deltaTime = 0;\n      }\n      const internalTransform = tempMatrix$1.copyFrom(renderer.globalUniforms.uniforms.projectionMatrix).append(this.worldTransform);\n      this.internalModel.updateTransform(internalTransform);\n      this.internalModel.draw(renderer.gl);\n      renderer.state.reset();\n      renderer.texture.reset();\n    }\n    destroy(options) {\n      this.emit(\"destroy\");\n      this.autoUpdate = false;\n      this.unregisterInteraction();\n      if (options == null ? void 0 : options.texture) {\n        this.textures.forEach((texture) => texture.destroy(options.baseTexture));\n      }\n      this.internalModel.destroy();\n      super.destroy(options);\n    }\n  }\n  applyMixins(Live2DModel, [InteractionMixin]);\n  const _FileLoader = class {\n    static resolveURL(settingsURL, filePath) {\n      var _a;\n      const resolved = (_a = _FileLoader.filesMap[settingsURL]) == null ? void 0 : _a[filePath];\n      if (resolved === void 0) {\n        throw new Error(\"Cannot find this file from uploaded files: \" + filePath);\n      }\n      return resolved;\n    }\n    static upload(files, settings) {\n      return __async(this, null, function* () {\n        const fileMap = {};\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          const actualFile = files.find((file) => file.webkitRelativePath === actualPath);\n          if (actualFile) {\n            fileMap[definedFile] = URL.createObjectURL(actualFile);\n          }\n        }\n        _FileLoader.filesMap[settings._objectURL] = fileMap;\n      });\n    }\n    static createSettings(files) {\n      return __async(this, null, function* () {\n        const settingsFile = files.find((file) => file.name.endsWith(\"model.json\") || file.name.endsWith(\"model3.json\"));\n        if (!settingsFile) {\n          throw new TypeError(\"Settings file not found\");\n        }\n        const settingsText = yield _FileLoader.readText(settingsFile);\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFile.webkitRelativePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        const settings = runtime.createModelSettings(settingsJSON);\n        settings._objectURL = URL.createObjectURL(settingsFile);\n        return settings;\n      });\n    }\n    static readText(file) {\n      return __async(this, null, function* () {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsText(file, \"utf8\");\n        });\n      });\n    }\n  };\n  let FileLoader = _FileLoader;\n  FileLoader.filesMap = {};\n  FileLoader.factory = (context, next) => __async(this, null, function* () {\n    if (Array.isArray(context.source) && context.source[0] instanceof File) {\n      const files = context.source;\n      let settings = files.settings;\n      if (!settings) {\n        settings = yield _FileLoader.createSettings(files);\n      } else if (!settings._objectURL) {\n        throw new Error('\"_objectURL\" must be specified in ModelSettings');\n      }\n      settings.validateFiles(files.map((file) => encodeURI(file.webkitRelativePath)));\n      yield _FileLoader.upload(files, settings);\n      settings.resolveURL = function(url) {\n        return _FileLoader.resolveURL(this._objectURL, url);\n      };\n      context.source = settings;\n      context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n        internalModel.once(\"destroy\", function() {\n          const objectURL = this.settings._objectURL;\n          URL.revokeObjectURL(objectURL);\n          if (_FileLoader.filesMap[objectURL]) {\n            for (const resourceObjectURL of Object.values(_FileLoader.filesMap[objectURL])) {\n              URL.revokeObjectURL(resourceObjectURL);\n            }\n          }\n          delete _FileLoader.filesMap[objectURL];\n        });\n      });\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(FileLoader.factory);\n  const _ZipLoader = class {\n    static unzip(reader, settings) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const requiredFilePaths = [];\n        for (const definedFile of settings.getDefinedFiles()) {\n          const actualPath = decodeURI(utils.url.resolve(settings.url, definedFile));\n          if (filePaths.includes(actualPath)) {\n            requiredFilePaths.push(actualPath);\n          }\n        }\n        const files = yield _ZipLoader.getFiles(reader, requiredFilePaths);\n        for (let i = 0; i < files.length; i++) {\n          const path = requiredFilePaths[i];\n          const file = files[i];\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: path\n          });\n        }\n        return files;\n      });\n    }\n    static createSettings(reader) {\n      return __async(this, null, function* () {\n        const filePaths = yield _ZipLoader.getFilePaths(reader);\n        const settingsFilePath = filePaths.find((path) => path.endsWith(\"model.json\") || path.endsWith(\"model3.json\"));\n        if (!settingsFilePath) {\n          throw new Error(\"Settings file not found\");\n        }\n        const settingsText = yield _ZipLoader.readText(reader, settingsFilePath);\n        if (!settingsText) {\n          throw new Error(\"Empty settings file: \" + settingsFilePath);\n        }\n        const settingsJSON = JSON.parse(settingsText);\n        settingsJSON.url = settingsFilePath;\n        const runtime = Live2DFactory.findRuntime(settingsJSON);\n        if (!runtime) {\n          throw new Error(\"Unknown settings JSON\");\n        }\n        return runtime.createModelSettings(settingsJSON);\n      });\n    }\n    static zipReader(data, url) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFilePaths(reader) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static getFiles(reader, paths) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static readText(reader, path) {\n      return __async(this, null, function* () {\n        throw new Error(\"Not implemented\");\n      });\n    }\n    static releaseReader(reader) {\n    }\n  };\n  let ZipLoader = _ZipLoader;\n  ZipLoader.ZIP_PROTOCOL = \"zip://\";\n  ZipLoader.uid = 0;\n  ZipLoader.factory = (context, next) => __async(this, null, function* () {\n    const source = context.source;\n    let sourceURL;\n    let zipBlob;\n    let settings;\n    if (typeof source === \"string\" && (source.endsWith(\".zip\") || source.startsWith(_ZipLoader.ZIP_PROTOCOL))) {\n      if (source.startsWith(_ZipLoader.ZIP_PROTOCOL)) {\n        sourceURL = source.slice(_ZipLoader.ZIP_PROTOCOL.length);\n      } else {\n        sourceURL = source;\n      }\n      zipBlob = yield Live2DLoader.load({\n        url: sourceURL,\n        type: \"blob\",\n        target: context.live2dModel\n      });\n    } else if (Array.isArray(source) && source.length === 1 && source[0] instanceof File && source[0].name.endsWith(\".zip\")) {\n      zipBlob = source[0];\n      sourceURL = URL.createObjectURL(zipBlob);\n      settings = source.settings;\n    }\n    if (zipBlob) {\n      if (!zipBlob.size) {\n        throw new Error(\"Empty zip file\");\n      }\n      const reader = yield _ZipLoader.zipReader(zipBlob, sourceURL);\n      if (!settings) {\n        settings = yield _ZipLoader.createSettings(reader);\n      }\n      settings._objectURL = _ZipLoader.ZIP_PROTOCOL + _ZipLoader.uid + \"/\" + settings.url;\n      const files = yield _ZipLoader.unzip(reader, settings);\n      files.settings = settings;\n      context.source = files;\n      if (sourceURL.startsWith(\"blob:\")) {\n        context.live2dModel.once(\"modelLoaded\", (internalModel) => {\n          internalModel.once(\"destroy\", function() {\n            URL.revokeObjectURL(sourceURL);\n          });\n        });\n      }\n      _ZipLoader.releaseReader(reader);\n    }\n    return next();\n  });\n  Live2DFactory.live2DModelMiddlewares.unshift(ZipLoader.factory);\n  if (!window.Live2D) {\n    throw new Error(\"Could not find Cubism 2 runtime. This plugin requires live2d.min.js to be loaded.\");\n  }\n  const originalUpdateParam = Live2DMotion.prototype.updateParam;\n  Live2DMotion.prototype.updateParam = function(model, entry) {\n    originalUpdateParam.call(this, model, entry);\n    if (entry.isFinished() && this.onFinishHandler) {\n      this.onFinishHandler(this);\n      delete this.onFinishHandler;\n    }\n  };\n  class Live2DExpression extends AMotion {\n    constructor(json) {\n      super();\n      this.params = [];\n      this.setFadeIn(json.fade_in > 0 ? json.fade_in : exports2.config.expressionFadingDuration);\n      this.setFadeOut(json.fade_out > 0 ? json.fade_out : exports2.config.expressionFadingDuration);\n      if (Array.isArray(json.params)) {\n        json.params.forEach((param) => {\n          const calc = param.calc || \"add\";\n          if (calc === \"add\") {\n            const defaultValue = param.def || 0;\n            param.val -= defaultValue;\n          } else if (calc === \"mult\") {\n            const defaultValue = param.def || 1;\n            param.val /= defaultValue;\n          }\n          this.params.push({\n            calc,\n            val: param.val,\n            id: param.id\n          });\n        });\n      }\n    }\n    updateParamExe(model, time, weight, motionQueueEnt) {\n      this.params.forEach((param) => {\n        model.setParamFloat(param.id, param.val * weight);\n      });\n    }\n  }\n  class Cubism2ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new MotionQueueManager();\n      this.definitions = (_a = this.settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.file;\n    }\n    createExpression(data, definition) {\n      return new Live2DExpression(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion);\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, dt) {\n      return this.queueManager.updateParam(model);\n    }\n  }\n  class Cubism2MotionManager extends MotionManager {\n    constructor(settings, options) {\n      super(settings, options);\n      this.groups = { idle: \"idle\" };\n      this.motionDataType = \"arraybuffer\";\n      this.queueManager = new MotionQueueManager();\n      this.definitions = this.settings.motions;\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism2ExpressionManager(this.settings, options);\n      }\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    createMotion(data, group, definition) {\n      const motion = Live2DMotion.loadMotion(data);\n      const defaultFadingDuration = group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration;\n      motion.setFadeIn(definition.fade_in > 0 ? definition.fade_in : defaultFadingDuration);\n      motion.setFadeOut(definition.fade_out > 0 ? definition.fade_out : defaultFadingDuration);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.file;\n    }\n    getMotionName(definition) {\n      return definition.file;\n    }\n    getSoundFile(definition) {\n      return definition.sound;\n    }\n    _startMotion(motion, onFinish) {\n      motion.onFinishHandler = onFinish;\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion);\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.updateParam(model);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager = void 0;\n    }\n  }\n  class Live2DEyeBlink {\n    constructor(coreModel) {\n      this.coreModel = coreModel;\n      this.blinkInterval = 4e3;\n      this.closingDuration = 100;\n      this.closedDuration = 50;\n      this.openingDuration = 150;\n      this.eyeState = 0;\n      this.eyeParamValue = 1;\n      this.closedTimer = 0;\n      this.nextBlinkTimeLeft = this.blinkInterval;\n      this.leftParam = coreModel.getParamIndex(\"PARAM_EYE_L_OPEN\");\n      this.rightParam = coreModel.getParamIndex(\"PARAM_EYE_R_OPEN\");\n    }\n    setEyeParams(value) {\n      this.eyeParamValue = clamp(value, 0, 1);\n      this.coreModel.setParamFloat(this.leftParam, this.eyeParamValue);\n      this.coreModel.setParamFloat(this.rightParam, this.eyeParamValue);\n    }\n    update(dt) {\n      switch (this.eyeState) {\n        case 0:\n          this.nextBlinkTimeLeft -= dt;\n          if (this.nextBlinkTimeLeft < 0) {\n            this.eyeState = 1;\n            this.nextBlinkTimeLeft = this.blinkInterval + this.closingDuration + this.closedDuration + this.openingDuration + rand(0, 2e3);\n          }\n          break;\n        case 1:\n          this.setEyeParams(this.eyeParamValue + dt / this.closingDuration);\n          if (this.eyeParamValue <= 0) {\n            this.eyeState = 2;\n            this.closedTimer = 0;\n          }\n          break;\n        case 2:\n          this.closedTimer += dt;\n          if (this.closedTimer >= this.closedDuration) {\n            this.eyeState = 3;\n          }\n          break;\n        case 3:\n          this.setEyeParams(this.eyeParamValue + dt / this.openingDuration);\n          if (this.eyeParamValue >= 1) {\n            this.eyeState = 0;\n          }\n      }\n    }\n  }\n  const tempMatrixArray = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  class Cubism2InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.textureFlipY = true;\n      this.drawDataCount = 0;\n      this.disableCulling = false;\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism2MotionManager(settings, options);\n      this.eyeBlink = new Live2DEyeBlink(coreModel);\n      this.eyeballXParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_X\");\n      this.eyeballYParamIndex = coreModel.getParamIndex(\"PARAM_EYE_BALL_Y\");\n      this.angleXParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_X\");\n      this.angleYParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Y\");\n      this.angleZParamIndex = coreModel.getParamIndex(\"PARAM_ANGLE_Z\");\n      this.bodyAngleXParamIndex = coreModel.getParamIndex(\"PARAM_BODY_ANGLE_X\");\n      this.breathParamIndex = coreModel.getParamIndex(\"PARAM_BREATH\");\n      this.init();\n    }\n    init() {\n      super.init();\n      if (this.settings.initParams) {\n        this.settings.initParams.forEach(({ id, value }) => this.coreModel.setParamFloat(id, value));\n      }\n      if (this.settings.initOpacities) {\n        this.settings.initOpacities.forEach(({ id, value }) => this.coreModel.setPartsOpacity(id, value));\n      }\n      this.coreModel.saveParam();\n      const arr = this.coreModel.getModelContext()._$aS;\n      if (arr == null ? void 0 : arr.length) {\n        this.drawDataCount = arr.length;\n      }\n      let culling = this.coreModel.drawParamWebGL.culling;\n      Object.defineProperty(this.coreModel.drawParamWebGL, \"culling\", {\n        set: (v) => culling = v,\n        get: () => this.disableCulling ? false : culling\n      });\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      const originalSetupClip = clipManager.setupClip;\n      clipManager.setupClip = (modelContext, drawParam) => {\n        originalSetupClip.call(clipManager, modelContext, drawParam);\n        drawParam.gl.viewport(...this.viewport);\n      };\n    }\n    getSize() {\n      return [this.coreModel.getCanvasWidth(), this.coreModel.getCanvasHeight()];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          let commonKey = key;\n          if (key === \"center_x\") {\n            commonKey = \"centerX\";\n          } else if (key === \"center_y\") {\n            commonKey = \"centerY\";\n          }\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    updateWebGLContext(gl, glContextID) {\n      const drawParamWebGL = this.coreModel.drawParamWebGL;\n      drawParamWebGL.firstDraw = true;\n      drawParamWebGL.setGL(gl);\n      drawParamWebGL.glno = glContextID;\n      for (const prop in drawParamWebGL) {\n        if (drawParamWebGL.hasOwnProperty(prop) && drawParamWebGL[prop] instanceof WebGLBuffer) {\n          drawParamWebGL[prop] = null;\n        }\n      }\n      const clipManager = this.coreModel.getModelContext().clipManager;\n      clipManager.curFrameNo = glContextID;\n      const framebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n      clipManager.getMaskRenderTexture();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    bindTexture(index, texture) {\n      this.coreModel.setTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a;\n      return ((_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.id,\n        name: hitArea.name,\n        index: this.coreModel.getDrawDataIndex(hitArea.id)\n      }))) || [];\n    }\n    getDrawableIDs() {\n      const modelContext = this.coreModel.getModelContext();\n      const ids = [];\n      for (let i = 0; i < this.drawDataCount; i++) {\n        const drawData = modelContext.getDrawData(i);\n        if (drawData) {\n          ids.push(drawData.getDrawDataID().id);\n        }\n      }\n      return ids;\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawDataIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawDataIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      return this.coreModel.getTransformedPoints(drawIndex).slice();\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParam();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.update(dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt, now);\n      (_c = this.physics) == null ? void 0 : _c.update(now);\n      (_d = this.pose) == null ? void 0 : _d.update(dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParam();\n    }\n    updateFocus() {\n      this.coreModel.addToParamFloat(this.eyeballXParamIndex, this.focusController.x);\n      this.coreModel.addToParamFloat(this.eyeballYParamIndex, this.focusController.y);\n      this.coreModel.addToParamFloat(this.angleXParamIndex, this.focusController.x * 30);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, this.focusController.y * 30);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      const t = now / 1e3 * 2 * Math.PI;\n      this.coreModel.addToParamFloat(this.angleXParamIndex, 15 * Math.sin(t / 6.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleYParamIndex, 8 * Math.sin(t / 3.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.angleZParamIndex, 10 * Math.sin(t / 5.5345) * 0.5);\n      this.coreModel.addToParamFloat(this.bodyAngleXParamIndex, 4 * Math.sin(t / 15.5345) * 0.5);\n      this.coreModel.setParamFloat(this.breathParamIndex, 0.5 + 0.5 * Math.sin(t / 3.2345));\n    }\n    draw(gl) {\n      const disableCulling = this.disableCulling;\n      if (gl.getParameter(gl.FRAMEBUFFER_BINDING)) {\n        this.disableCulling = true;\n      }\n      const matrix = this.drawingMatrix;\n      tempMatrixArray[0] = matrix.a;\n      tempMatrixArray[1] = matrix.b;\n      tempMatrixArray[4] = matrix.c;\n      tempMatrixArray[5] = matrix.d;\n      tempMatrixArray[12] = matrix.tx;\n      tempMatrixArray[13] = matrix.ty;\n      this.coreModel.setMatrix(tempMatrixArray);\n      this.coreModel.draw();\n      this.disableCulling = disableCulling;\n    }\n    destroy() {\n      super.destroy();\n      this.coreModel = void 0;\n    }\n  }\n  class Cubism2ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      this.motions = {};\n      if (!Cubism2ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      this.moc = json.model;\n      copyArray(\"string\", json, this, \"textures\", \"textures\");\n      this.copy(json);\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!json && typeof json.model === \"string\" && ((_a = json.textures) == null ? void 0 : _a.length) > 0 && json.textures.every((item) => typeof item === \"string\");\n    }\n    copy(json) {\n      copyProperty(\"string\", json, this, \"name\", \"name\");\n      copyProperty(\"string\", json, this, \"pose\", \"pose\");\n      copyProperty(\"string\", json, this, \"physics\", \"physics\");\n      copyProperty(\"object\", json, this, \"layout\", \"layout\");\n      copyProperty(\"object\", json, this, \"motions\", \"motions\");\n      copyArray(\"object\", json, this, \"hit_areas\", \"hitAreas\");\n      copyArray(\"object\", json, this, \"expressions\", \"expressions\");\n      copyArray(\"object\", json, this, \"init_params\", \"initParams\");\n      copyArray(\"object\", json, this, \"init_opacities\", \"initOpacities\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      for (const [group, motions] of Object.entries(this.motions)) {\n        for (let i = 0; i < motions.length; i++) {\n          motions[i].file = replace(motions[i].file, `motions.${group}[${i}].file`);\n          if (motions[i].sound !== void 0) {\n            motions[i].sound = replace(motions[i].sound, `motions.${group}[${i}].sound`);\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].file = replace(this.expressions[i].file, `expressions[${i}].file`);\n        }\n      }\n    }\n  }\n  const SRC_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  const TARGET_TYPE_MAP = {\n    x: PhysicsHair.Src.SRC_TO_X,\n    y: PhysicsHair.Src.SRC_TO_Y,\n    angle: PhysicsHair.Src.SRC_TO_G_ANGLE\n  };\n  class Live2DPhysics {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.physicsHairs = [];\n      if (json.physics_hair) {\n        this.physicsHairs = json.physics_hair.map((definition) => {\n          const physicsHair = new PhysicsHair();\n          physicsHair.setup(definition.setup.length, definition.setup.regist, definition.setup.mass);\n          definition.src.forEach(({ id, ptype, scale, weight }) => {\n            const type = SRC_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addSrcParam(type, id, scale, weight);\n            }\n          });\n          definition.targets.forEach(({ id, ptype, scale, weight }) => {\n            const type = TARGET_TYPE_MAP[ptype];\n            if (type) {\n              physicsHair.addTargetParam(type, id, scale, weight);\n            }\n          });\n          return physicsHair;\n        });\n      }\n    }\n    update(elapsed) {\n      this.physicsHairs.forEach((physicsHair) => physicsHair.update(this.coreModel, elapsed));\n    }\n  }\n  class Live2DPartsParam {\n    constructor(id) {\n      this.id = id;\n      this.paramIndex = -1;\n      this.partsIndex = -1;\n      this.link = [];\n    }\n    initIndex(model) {\n      this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n      this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n      model.setParamFloat(this.paramIndex, 1);\n    }\n  }\n  class Live2DPose {\n    constructor(coreModel, json) {\n      this.coreModel = coreModel;\n      this.opacityAnimDuration = 500;\n      this.partsGroups = [];\n      if (json.parts_visible) {\n        this.partsGroups = json.parts_visible.map(({ group }) => group.map(({ id, link }) => {\n          const parts = new Live2DPartsParam(id);\n          if (link) {\n            parts.link = link.map((l) => new Live2DPartsParam(l));\n          }\n          return parts;\n        }));\n        this.init();\n      }\n    }\n    init() {\n      this.partsGroups.forEach((group) => {\n        group.forEach((parts) => {\n          parts.initIndex(this.coreModel);\n          if (parts.paramIndex >= 0) {\n            const visible = this.coreModel.getParamFloat(parts.paramIndex) !== 0;\n            this.coreModel.setPartsOpacity(parts.partsIndex, visible ? 1 : 0);\n            this.coreModel.setParamFloat(parts.paramIndex, visible ? 1 : 0);\n            if (parts.link.length > 0) {\n              parts.link.forEach((p) => p.initIndex(this.coreModel));\n            }\n          }\n        });\n      });\n    }\n    normalizePartsOpacityGroup(partsGroup, dt) {\n      const model = this.coreModel;\n      const phi = 0.5;\n      const maxBackOpacity = 0.15;\n      let visibleOpacity = 1;\n      let visibleIndex = partsGroup.findIndex(({ paramIndex, partsIndex }) => partsIndex >= 0 && model.getParamFloat(paramIndex) !== 0);\n      if (visibleIndex >= 0) {\n        const originalOpacity = model.getPartsOpacity(partsGroup[visibleIndex].partsIndex);\n        visibleOpacity = clamp(originalOpacity + dt / this.opacityAnimDuration, 0, 1);\n      } else {\n        visibleIndex = 0;\n        visibleOpacity = 1;\n      }\n      partsGroup.forEach(({ partsIndex }, index) => {\n        if (partsIndex >= 0) {\n          if (visibleIndex == index) {\n            model.setPartsOpacity(partsIndex, visibleOpacity);\n          } else {\n            let opacity = model.getPartsOpacity(partsIndex);\n            let a1;\n            if (visibleOpacity < phi) {\n              a1 = visibleOpacity * (phi - 1) / phi + 1;\n            } else {\n              a1 = (1 - visibleOpacity) * phi / (1 - phi);\n            }\n            let backOp = (1 - a1) * (1 - visibleOpacity);\n            if (backOp > maxBackOpacity) {\n              a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n            }\n            if (opacity > a1) {\n              opacity = a1;\n            }\n            model.setPartsOpacity(partsIndex, opacity);\n          }\n        }\n      });\n    }\n    copyOpacity(partsGroup) {\n      const model = this.coreModel;\n      partsGroup.forEach(({ partsIndex, link }) => {\n        if (partsIndex >= 0 && link) {\n          const opacity = model.getPartsOpacity(partsIndex);\n          link.forEach(({ partsIndex: partsIndex2 }) => {\n            if (partsIndex2 >= 0) {\n              model.setPartsOpacity(partsIndex2, opacity);\n            }\n          });\n        }\n      });\n    }\n    update(dt) {\n      this.partsGroups.forEach((partGroup) => {\n        this.normalizePartsOpacityGroup(partGroup, dt);\n        this.copyOpacity(partGroup);\n      });\n    }\n  }\n  Live2DFactory.registerRuntime({\n    version: 2,\n    test(source) {\n      return source instanceof Cubism2ModelSettings || Cubism2ModelSettings.isValidJSON(source);\n    },\n    ready() {\n      return Promise.resolve();\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 3) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 3);\n      return String.fromCharCode(...view) === \"moc\";\n    },\n    createModelSettings(json) {\n      return new Cubism2ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const model = Live2DModelWebGL.loadModel(data);\n      const error = Live2D.getError();\n      if (error)\n        throw error;\n      return model;\n    },\n    createInternalModel(coreModel, settings, options) {\n      return new Cubism2InternalModel(coreModel, settings, options);\n    },\n    createPose(coreModel, data) {\n      return new Live2DPose(coreModel, data);\n    },\n    createPhysics(coreModel, data) {\n      return new Live2DPhysics(coreModel, data);\n    }\n  });\n  if (!window.Live2DCubismCore) {\n    throw new Error(\"Could not find Cubism 4 runtime. This plugin requires live2dcubismcore.js to be loaded.\");\n  }\n  class CubismVector2 {\n    constructor(x, y) {\n      this.x = x || 0;\n      this.y = y || 0;\n    }\n    add(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x + vector2.x;\n      ret.y = this.y + vector2.y;\n      return ret;\n    }\n    substract(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x - vector2.x;\n      ret.y = this.y - vector2.y;\n      return ret;\n    }\n    multiply(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x * vector2.x;\n      ret.y = this.y * vector2.y;\n      return ret;\n    }\n    multiplyByScaler(scalar) {\n      return this.multiply(new CubismVector2(scalar, scalar));\n    }\n    division(vector2) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this.x / vector2.x;\n      ret.y = this.y / vector2.y;\n      return ret;\n    }\n    divisionByScalar(scalar) {\n      return this.division(new CubismVector2(scalar, scalar));\n    }\n    getLength() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    getDistanceWith(a) {\n      return Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y));\n    }\n    dot(a) {\n      return this.x * a.x + this.y * a.y;\n    }\n    normalize() {\n      const length = Math.pow(this.x * this.x + this.y * this.y, 0.5);\n      this.x = this.x / length;\n      this.y = this.y / length;\n    }\n    isEqual(rhs) {\n      return this.x == rhs.x && this.y == rhs.y;\n    }\n    isNotEqual(rhs) {\n      return !this.isEqual(rhs);\n    }\n  }\n  const _CubismMath = class {\n    static range(value, min, max) {\n      if (value < min) {\n        value = min;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n    static sin(x) {\n      return Math.sin(x);\n    }\n    static cos(x) {\n      return Math.cos(x);\n    }\n    static abs(x) {\n      return Math.abs(x);\n    }\n    static sqrt(x) {\n      return Math.sqrt(x);\n    }\n    static cbrt(x) {\n      if (x === 0) {\n        return x;\n      }\n      let cx = x;\n      const isNegativeNumber = cx < 0;\n      if (isNegativeNumber) {\n        cx = -cx;\n      }\n      let ret;\n      if (cx === Infinity) {\n        ret = Infinity;\n      } else {\n        ret = Math.exp(Math.log(cx) / 3);\n        ret = (cx / (ret * ret) + 2 * ret) / 3;\n      }\n      return isNegativeNumber ? -ret : ret;\n    }\n    static getEasingSine(value) {\n      if (value < 0) {\n        return 0;\n      } else if (value > 1) {\n        return 1;\n      }\n      return 0.5 - 0.5 * this.cos(value * Math.PI);\n    }\n    static max(left, right) {\n      return left > right ? left : right;\n    }\n    static min(left, right) {\n      return left > right ? right : left;\n    }\n    static degreesToRadian(degrees) {\n      return degrees / 180 * Math.PI;\n    }\n    static radianToDegrees(radian) {\n      return radian * 180 / Math.PI;\n    }\n    static directionToRadian(from, to) {\n      const q1 = Math.atan2(to.y, to.x);\n      const q2 = Math.atan2(from.y, from.x);\n      let ret = q1 - q2;\n      while (ret < -Math.PI) {\n        ret += Math.PI * 2;\n      }\n      while (ret > Math.PI) {\n        ret -= Math.PI * 2;\n      }\n      return ret;\n    }\n    static directionToDegrees(from, to) {\n      const radian = this.directionToRadian(from, to);\n      let degree = this.radianToDegrees(radian);\n      if (to.x - from.x > 0) {\n        degree = -degree;\n      }\n      return degree;\n    }\n    static radianToDirection(totalAngle) {\n      const ret = new CubismVector2();\n      ret.x = this.sin(totalAngle);\n      ret.y = this.cos(totalAngle);\n      return ret;\n    }\n    static quadraticEquation(a, b, c) {\n      if (this.abs(a) < _CubismMath.Epsilon) {\n        if (this.abs(b) < _CubismMath.Epsilon) {\n          return -c;\n        }\n        return -c / b;\n      }\n      return -(b + this.sqrt(b * b - 4 * a * c)) / (2 * a);\n    }\n    static cardanoAlgorithmForBezier(a, b, c, d) {\n      if (this.sqrt(a) < _CubismMath.Epsilon) {\n        return this.range(this.quadraticEquation(b, c, d), 0, 1);\n      }\n      const ba = b / a;\n      const ca = c / a;\n      const da = d / a;\n      const p = (3 * ca - ba * ba) / 3;\n      const p3 = p / 3;\n      const q = (2 * ba * ba * ba - 9 * ba * ca + 27 * da) / 27;\n      const q2 = q / 2;\n      const discriminant = q2 * q2 + p3 * p3 * p3;\n      const center = 0.5;\n      const threshold = center + 0.01;\n      if (discriminant < 0) {\n        const mp3 = -p / 3;\n        const mp33 = mp3 * mp3 * mp3;\n        const r = this.sqrt(mp33);\n        const t = -q / (2 * r);\n        const cosphi = this.range(t, -1, 1);\n        const phi = Math.acos(cosphi);\n        const crtr = this.cbrt(r);\n        const t1 = 2 * crtr;\n        const root12 = t1 * this.cos(phi / 3) - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = t1 * this.cos((phi + 2 * Math.PI) / 3) - ba / 3;\n        if (this.abs(root2 - center) < threshold) {\n          return this.range(root2, 0, 1);\n        }\n        const root3 = t1 * this.cos((phi + 4 * Math.PI) / 3) - ba / 3;\n        return this.range(root3, 0, 1);\n      }\n      if (discriminant == 0) {\n        let u12;\n        if (q2 < 0) {\n          u12 = this.cbrt(-q2);\n        } else {\n          u12 = -this.cbrt(q2);\n        }\n        const root12 = 2 * u12 - ba / 3;\n        if (this.abs(root12 - center) < threshold) {\n          return this.range(root12, 0, 1);\n        }\n        const root2 = -u12 - ba / 3;\n        return this.range(root2, 0, 1);\n      }\n      const sd = this.sqrt(discriminant);\n      const u1 = this.cbrt(sd - q2);\n      const v1 = this.cbrt(sd + q2);\n      const root1 = u1 - v1 - ba / 3;\n      return this.range(root1, 0, 1);\n    }\n    constructor() {\n    }\n  };\n  let CubismMath = _CubismMath;\n  CubismMath.Epsilon = 1e-5;\n  class CubismMatrix44 {\n    constructor() {\n      this._tr = new Float32Array(16);\n      this.loadIdentity();\n    }\n    static multiply(a, b, dst) {\n      const c = new Float32Array([\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ]);\n      const n = 4;\n      for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < n; ++j) {\n          for (let k = 0; k < n; ++k) {\n            c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\n          }\n        }\n      }\n      for (let i = 0; i < 16; ++i) {\n        dst[i] = c[i];\n      }\n    }\n    loadIdentity() {\n      const c = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      this.setMatrix(c);\n    }\n    setMatrix(tr) {\n      for (let i = 0; i < 16; ++i) {\n        this._tr[i] = tr[i];\n      }\n    }\n    getArray() {\n      return this._tr;\n    }\n    getScaleX() {\n      return this._tr[0];\n    }\n    getScaleY() {\n      return this._tr[5];\n    }\n    getTranslateX() {\n      return this._tr[12];\n    }\n    getTranslateY() {\n      return this._tr[13];\n    }\n    transformX(src) {\n      return this._tr[0] * src + this._tr[12];\n    }\n    transformY(src) {\n      return this._tr[5] * src + this._tr[13];\n    }\n    invertTransformX(src) {\n      return (src - this._tr[12]) / this._tr[0];\n    }\n    invertTransformY(src) {\n      return (src - this._tr[13]) / this._tr[5];\n    }\n    translateRelative(x, y) {\n      const tr1 = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        x,\n        y,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    translate(x, y) {\n      this._tr[12] = x;\n      this._tr[13] = y;\n    }\n    translateX(x) {\n      this._tr[12] = x;\n    }\n    translateY(y) {\n      this._tr[13] = y;\n    }\n    scaleRelative(x, y) {\n      const tr1 = new Float32Array([\n        x,\n        0,\n        0,\n        0,\n        0,\n        y,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n      CubismMatrix44.multiply(tr1, this._tr, this._tr);\n    }\n    scale(x, y) {\n      this._tr[0] = x;\n      this._tr[5] = y;\n    }\n    multiplyByMatrix(m) {\n      CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\n    }\n    clone() {\n      const cloneMatrix = new CubismMatrix44();\n      for (let i = 0; i < this._tr.length; i++) {\n        cloneMatrix._tr[i] = this._tr[i];\n      }\n      return cloneMatrix;\n    }\n  }\n  class CubismRenderer {\n    initialize(model) {\n      this._model = model;\n    }\n    drawModel() {\n      if (this.getModel() == null)\n        return;\n      this.doDrawModel();\n    }\n    setMvpMatrix(matrix44) {\n      this._mvpMatrix4x4.setMatrix(matrix44.getArray());\n    }\n    getMvpMatrix() {\n      return this._mvpMatrix4x4;\n    }\n    setModelColor(red, green, blue, alpha) {\n      if (red < 0) {\n        red = 0;\n      } else if (red > 1) {\n        red = 1;\n      }\n      if (green < 0) {\n        green = 0;\n      } else if (green > 1) {\n        green = 1;\n      }\n      if (blue < 0) {\n        blue = 0;\n      } else if (blue > 1) {\n        blue = 1;\n      }\n      if (alpha < 0) {\n        alpha = 0;\n      } else if (alpha > 1) {\n        alpha = 1;\n      }\n      this._modelColor.R = red;\n      this._modelColor.G = green;\n      this._modelColor.B = blue;\n      this._modelColor.A = alpha;\n    }\n    getModelColor() {\n      return Object.assign({}, this._modelColor);\n    }\n    setIsPremultipliedAlpha(enable) {\n      this._isPremultipliedAlpha = enable;\n    }\n    isPremultipliedAlpha() {\n      return this._isPremultipliedAlpha;\n    }\n    setIsCulling(culling) {\n      this._isCulling = culling;\n    }\n    isCulling() {\n      return this._isCulling;\n    }\n    setAnisotropy(n) {\n      this._anisortopy = n;\n    }\n    getAnisotropy() {\n      return this._anisortopy;\n    }\n    getModel() {\n      return this._model;\n    }\n    constructor() {\n      this._isCulling = false;\n      this._isPremultipliedAlpha = false;\n      this._anisortopy = 0;\n      this._modelColor = new CubismTextureColor();\n      this._mvpMatrix4x4 = new CubismMatrix44();\n      this._mvpMatrix4x4.loadIdentity();\n    }\n  }\n  var CubismBlendMode = /* @__PURE__ */ ((CubismBlendMode2) => {\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Normal\"] = 0] = \"CubismBlendMode_Normal\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Additive\"] = 1] = \"CubismBlendMode_Additive\";\n    CubismBlendMode2[CubismBlendMode2[\"CubismBlendMode_Multiplicative\"] = 2] = \"CubismBlendMode_Multiplicative\";\n    return CubismBlendMode2;\n  })(CubismBlendMode || {});\n  class CubismTextureColor {\n    constructor() {\n      this.R = 1;\n      this.G = 1;\n      this.B = 1;\n      this.A = 1;\n    }\n  }\n  let s_isStarted = false;\n  let s_isInitialized = false;\n  let s_option = void 0;\n  const Constant = {\n    vertexOffset: 0,\n    vertexStep: 2\n  };\n  class CubismFramework {\n    static startUp(option) {\n      if (s_isStarted) {\n        CubismLogInfo(\"CubismFramework.startUp() is already done.\");\n        return s_isStarted;\n      }\n      if (Live2DCubismCore._isStarted) {\n        s_isStarted = true;\n        return true;\n      }\n      Live2DCubismCore._isStarted = true;\n      s_option = option;\n      if (s_option) {\n        Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\n      }\n      s_isStarted = true;\n      if (s_isStarted) {\n        const version = Live2DCubismCore.Version.csmGetVersion();\n        const major = (version & 4278190080) >> 24;\n        const minor = (version & 16711680) >> 16;\n        const patch = version & 65535;\n        const versionNumber = version;\n        CubismLogInfo(`Live2D Cubism Core version: {0}.{1}.{2} ({3})`, (\"00\" + major).slice(-2), (\"00\" + minor).slice(-2), (\"0000\" + patch).slice(-4), versionNumber);\n      }\n      CubismLogInfo(\"CubismFramework.startUp() is complete.\");\n      return s_isStarted;\n    }\n    static cleanUp() {\n      s_isStarted = false;\n      s_isInitialized = false;\n      s_option = void 0;\n    }\n    static initialize() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.initialize() skipped, already initialized.\");\n        return;\n      }\n      s_isInitialized = true;\n      CubismLogInfo(\"CubismFramework.initialize() is complete.\");\n    }\n    static dispose() {\n      if (!s_isStarted) {\n        CubismLogWarning(\"CubismFramework is not started.\");\n        return;\n      }\n      if (!s_isInitialized) {\n        CubismLogWarning(\"CubismFramework.dispose() skipped, not initialized.\");\n        return;\n      }\n      CubismRenderer.staticRelease();\n      s_isInitialized = false;\n      CubismLogInfo(\"CubismFramework.dispose() is complete.\");\n    }\n    static isStarted() {\n      return s_isStarted;\n    }\n    static isInitialized() {\n      return s_isInitialized;\n    }\n    static coreLogFunction(message) {\n      if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\n        return;\n      }\n      Live2DCubismCore.Logging.csmGetLogFunction()(message);\n    }\n    static getLoggingLevel() {\n      if (s_option != null) {\n        return s_option.loggingLevel;\n      }\n      return LogLevel.LogLevel_Off;\n    }\n    constructor() {\n    }\n  }\n  var LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n    LogLevel2[LogLevel2[\"LogLevel_Verbose\"] = 0] = \"LogLevel_Verbose\";\n    LogLevel2[LogLevel2[\"LogLevel_Debug\"] = 1] = \"LogLevel_Debug\";\n    LogLevel2[LogLevel2[\"LogLevel_Info\"] = 2] = \"LogLevel_Info\";\n    LogLevel2[LogLevel2[\"LogLevel_Warning\"] = 3] = \"LogLevel_Warning\";\n    LogLevel2[LogLevel2[\"LogLevel_Error\"] = 4] = \"LogLevel_Error\";\n    LogLevel2[LogLevel2[\"LogLevel_Off\"] = 5] = \"LogLevel_Off\";\n    return LogLevel2;\n  })(LogLevel || {});\n  const CSM_ASSERT = () => {\n  };\n  function CubismLogDebug(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Debug, \"[CSM][D]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogInfo(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Info, \"[CSM][I]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogWarning(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Warning, \"[CSM][W]\" + fmt + \"\\n\", args);\n  }\n  function CubismLogError(fmt, ...args) {\n    CubismDebug.print(LogLevel.LogLevel_Error, \"[CSM][E]\" + fmt + \"\\n\", args);\n  }\n  class CubismDebug {\n    static print(logLevel, format, args) {\n      if (logLevel < CubismFramework.getLoggingLevel()) {\n        return;\n      }\n      const logPrint = CubismFramework.coreLogFunction;\n      if (!logPrint)\n        return;\n      const buffer = format.replace(/{(\\d+)}/g, (m, k) => {\n        return args[k];\n      });\n      logPrint(buffer);\n    }\n    static dumpBytes(logLevel, data, length) {\n      for (let i = 0; i < length; i++) {\n        if (i % 16 == 0 && i > 0)\n          this.print(logLevel, \"\\n\");\n        else if (i % 8 == 0 && i > 0)\n          this.print(logLevel, \"  \");\n        this.print(logLevel, \"{0} \", [data[i] & 255]);\n      }\n      this.print(logLevel, \"\\n\");\n    }\n    constructor() {\n    }\n  }\n  class ACubismMotion {\n    constructor() {\n      this._fadeInSeconds = -1;\n      this._fadeOutSeconds = -1;\n      this._weight = 1;\n      this._offsetSeconds = 0;\n      this._firedEventValues = [];\n    }\n    release() {\n      this._weight = 0;\n    }\n    updateParameters(model, motionQueueEntry, userTimeSeconds) {\n      if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\n        return;\n      }\n      if (!motionQueueEntry.isStarted()) {\n        motionQueueEntry.setIsStarted(true);\n        motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds);\n        motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n        const duration = this.getDuration();\n        if (motionQueueEntry.getEndTime() < 0) {\n          motionQueueEntry.setEndTime(duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration);\n        }\n      }\n      let fadeWeight = this._weight;\n      const fadeIn = this._fadeInSeconds == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const fadeOut = this._fadeOutSeconds == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      fadeWeight = fadeWeight * fadeIn * fadeOut;\n      motionQueueEntry.setState(userTimeSeconds, fadeWeight);\n      this.doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry);\n      if (motionQueueEntry.getEndTime() > 0 && motionQueueEntry.getEndTime() < userTimeSeconds) {\n        motionQueueEntry.setIsFinished(true);\n      }\n    }\n    setFadeInTime(fadeInSeconds) {\n      this._fadeInSeconds = fadeInSeconds;\n    }\n    setFadeOutTime(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n    }\n    getFadeOutTime() {\n      return this._fadeOutSeconds;\n    }\n    getFadeInTime() {\n      return this._fadeInSeconds;\n    }\n    setWeight(weight) {\n      this._weight = weight;\n    }\n    getWeight() {\n      return this._weight;\n    }\n    getDuration() {\n      return -1;\n    }\n    getLoopDuration() {\n      return -1;\n    }\n    setOffsetTime(offsetSeconds) {\n      this._offsetSeconds = offsetSeconds;\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      return this._firedEventValues;\n    }\n    setFinishedMotionHandler(onFinishedMotionHandler) {\n      this._onFinishedMotion = onFinishedMotionHandler;\n    }\n    getFinishedMotionHandler() {\n      return this._onFinishedMotion;\n    }\n  }\n  const DefaultFadeTime = 1;\n  class CubismExpressionMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._parameters = [];\n    }\n    static create(json) {\n      const expression = new CubismExpressionMotion();\n      const fadeInTime = json.FadeInTime;\n      const fadeOutTime = json.FadeOutTime;\n      expression.setFadeInTime(fadeInTime !== void 0 ? fadeInTime : DefaultFadeTime);\n      expression.setFadeOutTime(fadeOutTime !== void 0 ? fadeOutTime : DefaultFadeTime);\n      const parameters = json.Parameters || [];\n      for (let i = 0; i < parameters.length; ++i) {\n        const param = parameters[i];\n        const parameterId = param.Id;\n        const value = param.Value;\n        let blendType;\n        switch (param.Blend) {\n          case \"Multiply\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\n            break;\n          case \"Overwrite\":\n            blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\n            break;\n          case \"Add\":\n          default:\n            blendType = ExpressionBlendType.ExpressionBlendType_Add;\n            break;\n        }\n        const item = {\n          parameterId,\n          blendType,\n          value\n        };\n        expression._parameters.push(item);\n      }\n      return expression;\n    }\n    doUpdateParameters(model, userTimeSeconds, weight, motionQueueEntry) {\n      for (let i = 0; i < this._parameters.length; ++i) {\n        const parameter = this._parameters[i];\n        switch (parameter.blendType) {\n          case ExpressionBlendType.ExpressionBlendType_Add: {\n            model.addParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Multiply: {\n            model.multiplyParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n          case ExpressionBlendType.ExpressionBlendType_Overwrite: {\n            model.setParameterValueById(parameter.parameterId, parameter.value, weight);\n            break;\n          }\n        }\n      }\n    }\n  }\n  var ExpressionBlendType = /* @__PURE__ */ ((ExpressionBlendType2) => {\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Add\"] = 0] = \"ExpressionBlendType_Add\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Multiply\"] = 1] = \"ExpressionBlendType_Multiply\";\n    ExpressionBlendType2[ExpressionBlendType2[\"ExpressionBlendType_Overwrite\"] = 2] = \"ExpressionBlendType_Overwrite\";\n    return ExpressionBlendType2;\n  })(ExpressionBlendType || {});\n  class CubismMotionQueueEntry {\n    constructor() {\n      this._autoDelete = false;\n      this._available = true;\n      this._finished = false;\n      this._started = false;\n      this._startTimeSeconds = -1;\n      this._fadeInStartTimeSeconds = 0;\n      this._endTimeSeconds = -1;\n      this._stateTimeSeconds = 0;\n      this._stateWeight = 0;\n      this._lastEventCheckSeconds = 0;\n      this._motionQueueEntryHandle = this;\n      this._fadeOutSeconds = 0;\n      this._isTriggeredFadeOut = false;\n    }\n    release() {\n      if (this._autoDelete && this._motion) {\n        this._motion.release();\n      }\n    }\n    setFadeOut(fadeOutSeconds) {\n      this._fadeOutSeconds = fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n    }\n    startFadeOut(fadeOutSeconds, userTimeSeconds) {\n      const newEndTimeSeconds = userTimeSeconds + fadeOutSeconds;\n      this._isTriggeredFadeOut = true;\n      if (this._endTimeSeconds < 0 || newEndTimeSeconds < this._endTimeSeconds) {\n        this._endTimeSeconds = newEndTimeSeconds;\n      }\n    }\n    isFinished() {\n      return this._finished;\n    }\n    isStarted() {\n      return this._started;\n    }\n    getStartTime() {\n      return this._startTimeSeconds;\n    }\n    getFadeInStartTime() {\n      return this._fadeInStartTimeSeconds;\n    }\n    getEndTime() {\n      return this._endTimeSeconds;\n    }\n    setStartTime(startTime) {\n      this._startTimeSeconds = startTime;\n    }\n    setFadeInStartTime(startTime) {\n      this._fadeInStartTimeSeconds = startTime;\n    }\n    setEndTime(endTime) {\n      this._endTimeSeconds = endTime;\n    }\n    setIsFinished(f) {\n      this._finished = f;\n    }\n    setIsStarted(f) {\n      this._started = f;\n    }\n    isAvailable() {\n      return this._available;\n    }\n    setIsAvailable(v) {\n      this._available = v;\n    }\n    setState(timeSeconds, weight) {\n      this._stateTimeSeconds = timeSeconds;\n      this._stateWeight = weight;\n    }\n    getStateTime() {\n      return this._stateTimeSeconds;\n    }\n    getStateWeight() {\n      return this._stateWeight;\n    }\n    getLastCheckEventSeconds() {\n      return this._lastEventCheckSeconds;\n    }\n    setLastCheckEventSeconds(checkSeconds) {\n      this._lastEventCheckSeconds = checkSeconds;\n    }\n    isTriggeredFadeOut() {\n      return this._isTriggeredFadeOut;\n    }\n    getFadeOutSeconds() {\n      return this._fadeOutSeconds;\n    }\n  }\n  class CubismMotionQueueManager {\n    constructor() {\n      this._userTimeSeconds = 0;\n      this._eventCustomData = null;\n      this._motions = [];\n    }\n    release() {\n      for (let i = 0; i < this._motions.length; ++i) {\n        if (this._motions[i]) {\n          this._motions[i].release();\n        }\n      }\n      this._motions = void 0;\n    }\n    startMotion(motion, autoDelete, userTimeSeconds) {\n      if (motion == null) {\n        return InvalidMotionQueueEntryHandleValue;\n      }\n      let motionQueueEntry;\n      for (let i = 0; i < this._motions.length; ++i) {\n        motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime());\n      }\n      motionQueueEntry = new CubismMotionQueueEntry();\n      motionQueueEntry._autoDelete = autoDelete;\n      motionQueueEntry._motion = motion;\n      this._motions.push(motionQueueEntry);\n      return motionQueueEntry._motionQueueEntryHandle;\n    }\n    isFinished() {\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        if (!motionQueueEntry.isFinished()) {\n          return false;\n        }\n        i++;\n      }\n      return true;\n    }\n    isFinishedByHandle(motionQueueEntryNumber) {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          continue;\n        }\n        if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber && !motionQueueEntry.isFinished()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    stopAllMotions() {\n      for (let i = 0; i < this._motions.length; i++) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry != null) {\n          motionQueueEntry.release();\n        }\n      }\n      this._motions = [];\n    }\n    getCubismMotionQueueEntry(motionQueueEntryNumber) {\n      return this._motions.find((entry) => entry != null && entry._motionQueueEntryHandle == motionQueueEntryNumber);\n    }\n    setEventCallback(callback, customData = null) {\n      this._eventCallBack = callback;\n      this._eventCustomData = customData;\n    }\n    doUpdateMotion(model, userTimeSeconds) {\n      let updated = false;\n      let i = 0;\n      while (i < this._motions.length) {\n        const motionQueueEntry = this._motions[i];\n        if (motionQueueEntry == null) {\n          this._motions.splice(i, 1);\n          continue;\n        }\n        const motion = motionQueueEntry._motion;\n        if (motion == null) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n          continue;\n        }\n        motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\n        updated = true;\n        const firedList = motion.getFiredEvent(motionQueueEntry.getLastCheckEventSeconds() - motionQueueEntry.getStartTime(), userTimeSeconds - motionQueueEntry.getStartTime());\n        for (let i2 = 0; i2 < firedList.length; ++i2) {\n          this._eventCallBack(this, firedList[i2], this._eventCustomData);\n        }\n        motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\n        if (motionQueueEntry.isFinished()) {\n          motionQueueEntry.release();\n          this._motions.splice(i, 1);\n        } else {\n          if (motionQueueEntry.isTriggeredFadeOut()) {\n            motionQueueEntry.startFadeOut(motionQueueEntry.getFadeOutSeconds(), userTimeSeconds);\n          }\n          i++;\n        }\n      }\n      return updated;\n    }\n  }\n  const InvalidMotionQueueEntryHandleValue = -1;\n  class Cubism4ExpressionManager extends ExpressionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.expressions) != null ? _a : [];\n      this.init();\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    getExpressionIndex(name) {\n      return this.definitions.findIndex((def) => def.Name === name);\n    }\n    getExpressionFile(definition) {\n      return definition.File;\n    }\n    createExpression(data, definition) {\n      return CubismExpressionMotion.create(data);\n    }\n    _setExpression(motion) {\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    stopAllExpressions() {\n      this.queueManager.stopAllMotions();\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n  }\n  class CubismModelSettingsJson {\n    constructor(json) {\n      this.groups = json.Groups;\n      this.hitAreas = json.HitAreas;\n      this.layout = json.Layout;\n      this.moc = json.FileReferences.Moc;\n      this.expressions = json.FileReferences.Expressions;\n      this.motions = json.FileReferences.Motions;\n      this.textures = json.FileReferences.Textures;\n      this.physics = json.FileReferences.Physics;\n      this.pose = json.FileReferences.Pose;\n    }\n    getEyeBlinkParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"EyeBlink\")) == null ? void 0 : _b.Ids;\n    }\n    getLipSyncParameters() {\n      var _a, _b;\n      return (_b = (_a = this.groups) == null ? void 0 : _a.find((group) => group.Name === \"LipSync\")) == null ? void 0 : _b.Ids;\n    }\n  }\n  class Cubism4ModelSettings extends ModelSettings {\n    constructor(json) {\n      super(json);\n      if (!Cubism4ModelSettings.isValidJSON(json)) {\n        throw new TypeError(\"Invalid JSON.\");\n      }\n      Object.assign(this, new CubismModelSettingsJson(json));\n    }\n    static isValidJSON(json) {\n      var _a;\n      return !!(json == null ? void 0 : json.FileReferences) && typeof json.FileReferences.Moc === \"string\" && ((_a = json.FileReferences.Textures) == null ? void 0 : _a.length) > 0 && json.FileReferences.Textures.every((item) => typeof item === \"string\");\n    }\n    replaceFiles(replace) {\n      super.replaceFiles(replace);\n      if (this.motions) {\n        for (const [group, motions] of Object.entries(this.motions)) {\n          for (let i = 0; i < motions.length; i++) {\n            motions[i].File = replace(motions[i].File, `motions.${group}[${i}].File`);\n            if (motions[i].Sound !== void 0) {\n              motions[i].Sound = replace(motions[i].Sound, `motions.${group}[${i}].Sound`);\n            }\n          }\n        }\n      }\n      if (this.expressions) {\n        for (let i = 0; i < this.expressions.length; i++) {\n          this.expressions[i].File = replace(this.expressions[i].File, `expressions[${i}].File`);\n        }\n      }\n    }\n  }\n  applyMixins(Cubism4ModelSettings, [CubismModelSettingsJson]);\n  var CubismMotionCurveTarget = /* @__PURE__ */ ((CubismMotionCurveTarget2) => {\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Model\"] = 0] = \"CubismMotionCurveTarget_Model\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_Parameter\"] = 1] = \"CubismMotionCurveTarget_Parameter\";\n    CubismMotionCurveTarget2[CubismMotionCurveTarget2[\"CubismMotionCurveTarget_PartOpacity\"] = 2] = \"CubismMotionCurveTarget_PartOpacity\";\n    return CubismMotionCurveTarget2;\n  })(CubismMotionCurveTarget || {});\n  var CubismMotionSegmentType = /* @__PURE__ */ ((CubismMotionSegmentType2) => {\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Linear\"] = 0] = \"CubismMotionSegmentType_Linear\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Bezier\"] = 1] = \"CubismMotionSegmentType_Bezier\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_Stepped\"] = 2] = \"CubismMotionSegmentType_Stepped\";\n    CubismMotionSegmentType2[CubismMotionSegmentType2[\"CubismMotionSegmentType_InverseStepped\"] = 3] = \"CubismMotionSegmentType_InverseStepped\";\n    return CubismMotionSegmentType2;\n  })(CubismMotionSegmentType || {});\n  class CubismMotionPoint {\n    constructor(time = 0, value = 0) {\n      this.time = time;\n      this.value = value;\n    }\n  }\n  class CubismMotionSegment {\n    constructor() {\n      this.basePointIndex = 0;\n      this.segmentType = 0;\n    }\n  }\n  class CubismMotionCurve {\n    constructor() {\n      this.id = \"\";\n      this.type = 0;\n      this.segmentCount = 0;\n      this.baseSegmentIndex = 0;\n      this.fadeInTime = 0;\n      this.fadeOutTime = 0;\n    }\n  }\n  class CubismMotionEvent {\n    constructor() {\n      this.fireTime = 0;\n      this.value = \"\";\n    }\n  }\n  class CubismMotionData {\n    constructor() {\n      this.duration = 0;\n      this.loop = false;\n      this.curveCount = 0;\n      this.eventCount = 0;\n      this.fps = 0;\n      this.curves = [];\n      this.segments = [];\n      this.points = [];\n      this.events = [];\n    }\n  }\n  class CubismMotionJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getMotionDuration() {\n      return this._json.Meta.Duration;\n    }\n    isMotionLoop() {\n      return this._json.Meta.Loop || false;\n    }\n    getEvaluationOptionFlag(flagType) {\n      if (EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType) {\n        return !!this._json.Meta.AreBeziersRestricted;\n      }\n      return false;\n    }\n    getMotionCurveCount() {\n      return this._json.Meta.CurveCount;\n    }\n    getMotionFps() {\n      return this._json.Meta.Fps;\n    }\n    getMotionTotalSegmentCount() {\n      return this._json.Meta.TotalSegmentCount;\n    }\n    getMotionTotalPointCount() {\n      return this._json.Meta.TotalPointCount;\n    }\n    getMotionFadeInTime() {\n      return this._json.Meta.FadeInTime;\n    }\n    getMotionFadeOutTime() {\n      return this._json.Meta.FadeOutTime;\n    }\n    getMotionCurveTarget(curveIndex) {\n      return this._json.Curves[curveIndex].Target;\n    }\n    getMotionCurveId(curveIndex) {\n      return this._json.Curves[curveIndex].Id;\n    }\n    getMotionCurveFadeInTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeInTime;\n    }\n    getMotionCurveFadeOutTime(curveIndex) {\n      return this._json.Curves[curveIndex].FadeOutTime;\n    }\n    getMotionCurveSegmentCount(curveIndex) {\n      return this._json.Curves[curveIndex].Segments.length;\n    }\n    getMotionCurveSegment(curveIndex, segmentIndex) {\n      return this._json.Curves[curveIndex].Segments[segmentIndex];\n    }\n    getEventCount() {\n      return this._json.Meta.UserDataCount || 0;\n    }\n    getTotalEventValueSize() {\n      return this._json.Meta.TotalUserDataSize;\n    }\n    getEventTime(userDataIndex) {\n      return this._json.UserData[userDataIndex].Time;\n    }\n    getEventValue(userDataIndex) {\n      return this._json.UserData[userDataIndex].Value;\n    }\n  }\n  var EvaluationOptionFlag = /* @__PURE__ */ ((EvaluationOptionFlag2) => {\n    EvaluationOptionFlag2[EvaluationOptionFlag2[\"EvaluationOptionFlag_AreBeziersRistricted\"] = 0] = \"EvaluationOptionFlag_AreBeziersRistricted\";\n    return EvaluationOptionFlag2;\n  })(EvaluationOptionFlag || {});\n  const EffectNameEyeBlink = \"EyeBlink\";\n  const EffectNameLipSync = \"LipSync\";\n  const TargetNameModel = \"Model\";\n  const TargetNameParameter = \"Parameter\";\n  const TargetNamePartOpacity = \"PartOpacity\";\n  const UseOldBeziersCurveMotion = false;\n  function lerpPoints(a, b, t) {\n    const result = new CubismMotionPoint();\n    result.time = a.time + (b.time - a.time) * t;\n    result.value = a.value + (b.value - a.value) * t;\n    return result;\n  }\n  function linearEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[1].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    return points[0].value + (points[1].value - points[0].value) * t;\n  }\n  function bezierEvaluate(points, time) {\n    let t = (time - points[0].time) / (points[3].time - points[0].time);\n    if (t < 0) {\n      t = 0;\n    }\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function bezierEvaluateCardanoInterpretation(points, time) {\n    const x = time;\n    const x1 = points[0].time;\n    const x2 = points[3].time;\n    const cx1 = points[1].time;\n    const cx2 = points[2].time;\n    const a = x2 - 3 * cx2 + 3 * cx1 - x1;\n    const b = 3 * cx2 - 6 * cx1 + 3 * x1;\n    const c = 3 * cx1 - 3 * x1;\n    const d = x1 - x;\n    const t = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\n    const p01 = lerpPoints(points[0], points[1], t);\n    const p12 = lerpPoints(points[1], points[2], t);\n    const p23 = lerpPoints(points[2], points[3], t);\n    const p012 = lerpPoints(p01, p12, t);\n    const p123 = lerpPoints(p12, p23, t);\n    return lerpPoints(p012, p123, t).value;\n  }\n  function steppedEvaluate(points, time) {\n    return points[0].value;\n  }\n  function inverseSteppedEvaluate(points, time) {\n    return points[1].value;\n  }\n  function evaluateCurve(motionData, index, time) {\n    const curve = motionData.curves[index];\n    let target = -1;\n    const totalSegmentCount = curve.baseSegmentIndex + curve.segmentCount;\n    let pointPosition = 0;\n    for (let i = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\n      pointPosition = motionData.segments[i].basePointIndex + (motionData.segments[i].segmentType == CubismMotionSegmentType.CubismMotionSegmentType_Bezier ? 3 : 1);\n      if (motionData.points[pointPosition].time > time) {\n        target = i;\n        break;\n      }\n    }\n    if (target == -1) {\n      return motionData.points[pointPosition].value;\n    }\n    const segment = motionData.segments[target];\n    return segment.evaluate(motionData.points.slice(segment.basePointIndex), time);\n  }\n  class CubismMotion extends ACubismMotion {\n    constructor() {\n      super();\n      this._eyeBlinkParameterIds = [];\n      this._lipSyncParameterIds = [];\n      this._sourceFrameRate = 30;\n      this._loopDurationSeconds = -1;\n      this._isLoop = false;\n      this._isLoopFadeIn = true;\n      this._lastWeight = 0;\n    }\n    static create(json, onFinishedMotionHandler) {\n      const ret = new CubismMotion();\n      ret.parse(json);\n      ret._sourceFrameRate = ret._motionData.fps;\n      ret._loopDurationSeconds = ret._motionData.duration;\n      ret._onFinishedMotion = onFinishedMotionHandler;\n      return ret;\n    }\n    doUpdateParameters(model, userTimeSeconds, fadeWeight, motionQueueEntry) {\n      if (this._modelCurveIdEyeBlink == null) {\n        this._modelCurveIdEyeBlink = EffectNameEyeBlink;\n      }\n      if (this._modelCurveIdLipSync == null) {\n        this._modelCurveIdLipSync = EffectNameLipSync;\n      }\n      let timeOffsetSeconds = userTimeSeconds - motionQueueEntry.getStartTime();\n      if (timeOffsetSeconds < 0) {\n        timeOffsetSeconds = 0;\n      }\n      let lipSyncValue = Number.MAX_VALUE;\n      let eyeBlinkValue = Number.MAX_VALUE;\n      const MaxTargetSize = 64;\n      let lipSyncFlags = 0;\n      let eyeBlinkFlags = 0;\n      if (this._eyeBlinkParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many eye blink targets : {0}\", this._eyeBlinkParameterIds.length);\n      }\n      if (this._lipSyncParameterIds.length > MaxTargetSize) {\n        CubismLogDebug(\"too many lip sync targets : {0}\", this._lipSyncParameterIds.length);\n      }\n      const tmpFadeIn = this._fadeInSeconds <= 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / this._fadeInSeconds);\n      const tmpFadeOut = this._fadeOutSeconds <= 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / this._fadeOutSeconds);\n      let value;\n      let c, parameterIndex;\n      let time = timeOffsetSeconds;\n      if (this._isLoop) {\n        while (time > this._motionData.duration) {\n          time -= this._motionData.duration;\n        }\n      }\n      const curves = this._motionData.curves;\n      for (c = 0; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Model; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (curves[c].id == this._modelCurveIdEyeBlink) {\n          eyeBlinkValue = value;\n        } else if (curves[c].id == this._modelCurveIdLipSync) {\n          lipSyncValue = value;\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter; ++c) {\n        parameterIndex = model.getParameterIndex(curves[c].id);\n        if (parameterIndex == -1) {\n          continue;\n        }\n        const sourceValue = model.getParameterValueByIndex(parameterIndex);\n        value = evaluateCurve(this._motionData, c, time);\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._eyeBlinkParameterIds[i] == curves[c].id) {\n              value *= eyeBlinkValue;\n              eyeBlinkFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            if (this._lipSyncParameterIds[i] == curves[c].id) {\n              value += lipSyncValue;\n              lipSyncFlags |= 1 << i;\n              break;\n            }\n          }\n        }\n        let v;\n        if (curves[c].fadeInTime < 0 && curves[c].fadeOutTime < 0) {\n          v = sourceValue + (value - sourceValue) * fadeWeight;\n        } else {\n          let fin;\n          let fout;\n          if (curves[c].fadeInTime < 0) {\n            fin = tmpFadeIn;\n          } else {\n            fin = curves[c].fadeInTime == 0 ? 1 : CubismMath.getEasingSine((userTimeSeconds - motionQueueEntry.getFadeInStartTime()) / curves[c].fadeInTime);\n          }\n          if (curves[c].fadeOutTime < 0) {\n            fout = tmpFadeOut;\n          } else {\n            fout = curves[c].fadeOutTime == 0 || motionQueueEntry.getEndTime() < 0 ? 1 : CubismMath.getEasingSine((motionQueueEntry.getEndTime() - userTimeSeconds) / curves[c].fadeOutTime);\n          }\n          const paramWeight = this._weight * fin * fout;\n          v = sourceValue + (value - sourceValue) * paramWeight;\n        }\n        model.setParameterValueByIndex(parameterIndex, v, 1);\n      }\n      {\n        if (eyeBlinkValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._eyeBlinkParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._eyeBlinkParameterIds[i]);\n            if (eyeBlinkFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._eyeBlinkParameterIds[i], v);\n          }\n        }\n        if (lipSyncValue != Number.MAX_VALUE) {\n          for (let i = 0; i < this._lipSyncParameterIds.length && i < MaxTargetSize; ++i) {\n            const sourceValue = model.getParameterValueById(this._lipSyncParameterIds[i]);\n            if (lipSyncFlags >> i & 1) {\n              continue;\n            }\n            const v = sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\n            model.setParameterValueById(this._lipSyncParameterIds[i], v);\n          }\n        }\n      }\n      for (; c < this._motionData.curveCount && curves[c].type == CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity; ++c) {\n        value = evaluateCurve(this._motionData, c, time);\n        if (CubismConfig.setOpacityFromMotion) {\n          model.setPartOpacityById(curves[c].id, value);\n        } else {\n          parameterIndex = model.getParameterIndex(curves[c].id);\n          if (parameterIndex == -1) {\n            continue;\n          }\n          model.setParameterValueByIndex(parameterIndex, value);\n        }\n      }\n      if (timeOffsetSeconds >= this._motionData.duration) {\n        if (this._isLoop) {\n          motionQueueEntry.setStartTime(userTimeSeconds);\n          if (this._isLoopFadeIn) {\n            motionQueueEntry.setFadeInStartTime(userTimeSeconds);\n          }\n        } else {\n          if (this._onFinishedMotion) {\n            this._onFinishedMotion(this);\n          }\n          motionQueueEntry.setIsFinished(true);\n        }\n      }\n      this._lastWeight = fadeWeight;\n    }\n    setIsLoop(loop) {\n      this._isLoop = loop;\n    }\n    isLoop() {\n      return this._isLoop;\n    }\n    setIsLoopFadeIn(loopFadeIn) {\n      this._isLoopFadeIn = loopFadeIn;\n    }\n    isLoopFadeIn() {\n      return this._isLoopFadeIn;\n    }\n    getDuration() {\n      return this._isLoop ? -1 : this._loopDurationSeconds;\n    }\n    getLoopDuration() {\n      return this._loopDurationSeconds;\n    }\n    setParameterFadeInTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeInTime = value;\n          return;\n        }\n      }\n    }\n    setParameterFadeOutTime(parameterId, value) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          curves[i].fadeOutTime = value;\n          return;\n        }\n      }\n    }\n    getParameterFadeInTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeInTime;\n        }\n      }\n      return -1;\n    }\n    getParameterFadeOutTime(parameterId) {\n      const curves = this._motionData.curves;\n      for (let i = 0; i < this._motionData.curveCount; ++i) {\n        if (parameterId == curves[i].id) {\n          return curves[i].fadeOutTime;\n        }\n      }\n      return -1;\n    }\n    setEffectIds(eyeBlinkParameterIds, lipSyncParameterIds) {\n      this._eyeBlinkParameterIds = eyeBlinkParameterIds;\n      this._lipSyncParameterIds = lipSyncParameterIds;\n    }\n    release() {\n      this._motionData = void 0;\n    }\n    parse(motionJson) {\n      this._motionData = new CubismMotionData();\n      let json = new CubismMotionJson(motionJson);\n      this._motionData.duration = json.getMotionDuration();\n      this._motionData.loop = json.isMotionLoop();\n      this._motionData.curveCount = json.getMotionCurveCount();\n      this._motionData.fps = json.getMotionFps();\n      this._motionData.eventCount = json.getEventCount();\n      const areBeziersRestructed = json.getEvaluationOptionFlag(EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted);\n      const fadeInSeconds = json.getMotionFadeInTime();\n      const fadeOutSeconds = json.getMotionFadeOutTime();\n      if (fadeInSeconds !== void 0) {\n        this._fadeInSeconds = fadeInSeconds < 0 ? 1 : fadeInSeconds;\n      } else {\n        this._fadeInSeconds = 1;\n      }\n      if (fadeOutSeconds !== void 0) {\n        this._fadeOutSeconds = fadeOutSeconds < 0 ? 1 : fadeOutSeconds;\n      } else {\n        this._fadeOutSeconds = 1;\n      }\n      this._motionData.curves = Array.from({ length: this._motionData.curveCount }).map(() => new CubismMotionCurve());\n      this._motionData.segments = Array.from({ length: json.getMotionTotalSegmentCount() }).map(() => new CubismMotionSegment());\n      this._motionData.events = Array.from({ length: this._motionData.eventCount }).map(() => new CubismMotionEvent());\n      this._motionData.points = [];\n      let totalPointCount = 0;\n      let totalSegmentCount = 0;\n      for (let curveCount = 0; curveCount < this._motionData.curveCount; ++curveCount) {\n        const curve = this._motionData.curves[curveCount];\n        switch (json.getMotionCurveTarget(curveCount)) {\n          case TargetNameModel:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\n            break;\n          case TargetNameParameter:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\n            break;\n          case TargetNamePartOpacity:\n            curve.type = CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\n            break;\n          default:\n            CubismLogWarning('Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!');\n        }\n        curve.id = json.getMotionCurveId(curveCount);\n        curve.baseSegmentIndex = totalSegmentCount;\n        const fadeInTime = json.getMotionCurveFadeInTime(curveCount);\n        const fadeOutTime = json.getMotionCurveFadeOutTime(curveCount);\n        curve.fadeInTime = fadeInTime !== void 0 ? fadeInTime : -1;\n        curve.fadeOutTime = fadeOutTime !== void 0 ? fadeOutTime : -1;\n        for (let segmentPosition = 0; segmentPosition < json.getMotionCurveSegmentCount(curveCount); ) {\n          if (segmentPosition == 0) {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount;\n            this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition), json.getMotionCurveSegment(curveCount, segmentPosition + 1));\n            totalPointCount += 1;\n            segmentPosition += 2;\n          } else {\n            this._motionData.segments[totalSegmentCount].basePointIndex = totalPointCount - 1;\n          }\n          const segment = json.getMotionCurveSegment(curveCount, segmentPosition);\n          switch (segment) {\n            case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Linear;\n              this._motionData.segments[totalSegmentCount].evaluate = linearEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\n              if (areBeziersRestructed || UseOldBeziersCurveMotion) {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluate;\n              } else {\n                this._motionData.segments[totalSegmentCount].evaluate = bezierEvaluateCardanoInterpretation;\n              }\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              this._motionData.points[totalPointCount + 1] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 3), json.getMotionCurveSegment(curveCount, segmentPosition + 4));\n              this._motionData.points[totalPointCount + 2] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 5), json.getMotionCurveSegment(curveCount, segmentPosition + 6));\n              totalPointCount += 3;\n              segmentPosition += 7;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\n              this._motionData.segments[totalSegmentCount].evaluate = steppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n            case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\n              this._motionData.segments[totalSegmentCount].segmentType = CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\n              this._motionData.segments[totalSegmentCount].evaluate = inverseSteppedEvaluate;\n              this._motionData.points[totalPointCount] = new CubismMotionPoint(json.getMotionCurveSegment(curveCount, segmentPosition + 1), json.getMotionCurveSegment(curveCount, segmentPosition + 2));\n              totalPointCount += 1;\n              segmentPosition += 3;\n              break;\n            }\n          }\n          ++curve.segmentCount;\n          ++totalSegmentCount;\n        }\n        this._motionData.curves.push(curve);\n      }\n      for (let userdatacount = 0; userdatacount < json.getEventCount(); ++userdatacount) {\n        this._motionData.events[userdatacount].fireTime = json.getEventTime(userdatacount);\n        this._motionData.events[userdatacount].value = json.getEventValue(userdatacount);\n      }\n      json.release();\n    }\n    getFiredEvent(beforeCheckTimeSeconds, motionTimeSeconds) {\n      this._firedEventValues.length = 0;\n      for (let u = 0; u < this._motionData.eventCount; ++u) {\n        if (this._motionData.events[u].fireTime > beforeCheckTimeSeconds && this._motionData.events[u].fireTime <= motionTimeSeconds) {\n          this._firedEventValues.push(this._motionData.events[u].value);\n        }\n      }\n      return this._firedEventValues;\n    }\n  }\n  class Cubism4MotionManager extends MotionManager {\n    constructor(settings, options) {\n      var _a;\n      super(settings, options);\n      this.groups = { idle: \"Idle\" };\n      this.motionDataType = \"json\";\n      this.queueManager = new CubismMotionQueueManager();\n      this.definitions = (_a = settings.motions) != null ? _a : {};\n      this.eyeBlinkIds = settings.getEyeBlinkParameters() || [];\n      this.lipSyncIds = settings.getLipSyncParameters() || [];\n      this.init(options);\n    }\n    init(options) {\n      super.init(options);\n      if (this.settings.expressions) {\n        this.expressionManager = new Cubism4ExpressionManager(this.settings, options);\n      }\n      this.queueManager.setEventCallback((caller, eventValue, customData) => {\n        this.emit(\"motion:\" + eventValue);\n      });\n    }\n    isFinished() {\n      return this.queueManager.isFinished();\n    }\n    _startMotion(motion, onFinish) {\n      motion.setFinishedMotionHandler(onFinish);\n      this.queueManager.stopAllMotions();\n      return this.queueManager.startMotion(motion, false, performance.now());\n    }\n    _stopAllMotions() {\n      this.queueManager.stopAllMotions();\n    }\n    createMotion(data, group, definition) {\n      const motion = CubismMotion.create(data);\n      const json = new CubismMotionJson(data);\n      const defaultFadingDuration = (group === this.groups.idle ? exports2.config.idleMotionFadingDuration : exports2.config.motionFadingDuration) / 1e3;\n      if (json.getMotionFadeInTime() === void 0) {\n        motion.setFadeInTime(definition.FadeInTime > 0 ? definition.FadeInTime : defaultFadingDuration);\n      }\n      if (json.getMotionFadeOutTime() === void 0) {\n        motion.setFadeOutTime(definition.FadeOutTime > 0 ? definition.FadeOutTime : defaultFadingDuration);\n      }\n      motion.setEffectIds(this.eyeBlinkIds, this.lipSyncIds);\n      return motion;\n    }\n    getMotionFile(definition) {\n      return definition.File;\n    }\n    getMotionName(definition) {\n      return definition.File;\n    }\n    getSoundFile(definition) {\n      return definition.Sound;\n    }\n    updateParameters(model, now) {\n      return this.queueManager.doUpdateMotion(model, now);\n    }\n    destroy() {\n      super.destroy();\n      this.queueManager.release();\n      this.queueManager = void 0;\n    }\n  }\n  const ParamAngleX = \"ParamAngleX\";\n  const ParamAngleY = \"ParamAngleY\";\n  const ParamAngleZ = \"ParamAngleZ\";\n  const ParamEyeBallX = \"ParamEyeBallX\";\n  const ParamEyeBallY = \"ParamEyeBallY\";\n  const ParamBodyAngleX = \"ParamBodyAngleX\";\n  const ParamBreath = \"ParamBreath\";\n  class CubismBreath {\n    constructor() {\n      this._breathParameters = [];\n      this._currentTime = 0;\n    }\n    static create() {\n      return new CubismBreath();\n    }\n    setParameters(breathParameters) {\n      this._breathParameters = breathParameters;\n    }\n    getParameters() {\n      return this._breathParameters;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._currentTime += deltaTimeSeconds;\n      const t = this._currentTime * 2 * 3.14159;\n      for (let i = 0; i < this._breathParameters.length; ++i) {\n        const data = this._breathParameters[i];\n        model.addParameterValueById(data.parameterId, data.offset + data.peak * Math.sin(t / data.cycle), data.weight);\n      }\n    }\n  }\n  class BreathParameterData {\n    constructor(parameterId, offset, peak, cycle, weight) {\n      this.parameterId = parameterId == void 0 ? void 0 : parameterId;\n      this.offset = offset == void 0 ? 0 : offset;\n      this.peak = peak == void 0 ? 0 : peak;\n      this.cycle = cycle == void 0 ? 0 : cycle;\n      this.weight = weight == void 0 ? 0 : weight;\n    }\n  }\n  const _CubismEyeBlink = class {\n    static create(modelSetting) {\n      return new _CubismEyeBlink(modelSetting);\n    }\n    setBlinkingInterval(blinkingInterval) {\n      this._blinkingIntervalSeconds = blinkingInterval;\n    }\n    setBlinkingSetting(closing, closed, opening) {\n      this._closingSeconds = closing;\n      this._closedSeconds = closed;\n      this._openingSeconds = opening;\n    }\n    setParameterIds(parameterIds) {\n      this._parameterIds = parameterIds;\n    }\n    getParameterIds() {\n      return this._parameterIds;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      this._userTimeSeconds += deltaTimeSeconds;\n      let parameterValue;\n      let t = 0;\n      switch (this._blinkingState) {\n        case EyeState.EyeState_Closing:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Closed;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1 - t;\n          break;\n        case EyeState.EyeState_Closed:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._closedSeconds;\n          if (t >= 1) {\n            this._blinkingState = EyeState.EyeState_Opening;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 0;\n          break;\n        case EyeState.EyeState_Opening:\n          t = (this._userTimeSeconds - this._stateStartTimeSeconds) / this._openingSeconds;\n          if (t >= 1) {\n            t = 1;\n            this._blinkingState = EyeState.EyeState_Interval;\n            this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          }\n          parameterValue = t;\n          break;\n        case EyeState.EyeState_Interval:\n          if (this._nextBlinkingTime < this._userTimeSeconds) {\n            this._blinkingState = EyeState.EyeState_Closing;\n            this._stateStartTimeSeconds = this._userTimeSeconds;\n          }\n          parameterValue = 1;\n          break;\n        case EyeState.EyeState_First:\n        default:\n          this._blinkingState = EyeState.EyeState_Interval;\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\n          parameterValue = 1;\n          break;\n      }\n      if (!_CubismEyeBlink.CloseIfZero) {\n        parameterValue = -parameterValue;\n      }\n      for (let i = 0; i < this._parameterIds.length; ++i) {\n        model.setParameterValueById(this._parameterIds[i], parameterValue);\n      }\n    }\n    constructor(modelSetting) {\n      var _a, _b;\n      this._blinkingState = EyeState.EyeState_First;\n      this._nextBlinkingTime = 0;\n      this._stateStartTimeSeconds = 0;\n      this._blinkingIntervalSeconds = 4;\n      this._closingSeconds = 0.1;\n      this._closedSeconds = 0.05;\n      this._openingSeconds = 0.15;\n      this._userTimeSeconds = 0;\n      this._parameterIds = [];\n      if (modelSetting == null) {\n        return;\n      }\n      this._parameterIds = (_b = (_a = modelSetting.getEyeBlinkParameters()) == null ? void 0 : _a.slice()) != null ? _b : this._parameterIds;\n    }\n    determinNextBlinkingTiming() {\n      const r = Math.random();\n      return this._userTimeSeconds + r * (2 * this._blinkingIntervalSeconds - 1);\n    }\n  };\n  let CubismEyeBlink = _CubismEyeBlink;\n  CubismEyeBlink.CloseIfZero = true;\n  var EyeState = /* @__PURE__ */ ((EyeState2) => {\n    EyeState2[EyeState2[\"EyeState_First\"] = 0] = \"EyeState_First\";\n    EyeState2[EyeState2[\"EyeState_Interval\"] = 1] = \"EyeState_Interval\";\n    EyeState2[EyeState2[\"EyeState_Closing\"] = 2] = \"EyeState_Closing\";\n    EyeState2[EyeState2[\"EyeState_Closed\"] = 3] = \"EyeState_Closed\";\n    EyeState2[EyeState2[\"EyeState_Opening\"] = 4] = \"EyeState_Opening\";\n    return EyeState2;\n  })(EyeState || {});\n  class csmRect {\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n      this.x = x;\n      this.y = y;\n      this.width = w;\n      this.height = h;\n    }\n    getCenterX() {\n      return this.x + 0.5 * this.width;\n    }\n    getCenterY() {\n      return this.y + 0.5 * this.height;\n    }\n    getRight() {\n      return this.x + this.width;\n    }\n    getBottom() {\n      return this.y + this.height;\n    }\n    setRect(r) {\n      this.x = r.x;\n      this.y = r.y;\n      this.width = r.width;\n      this.height = r.height;\n    }\n    expand(w, h) {\n      this.x -= w;\n      this.y -= h;\n      this.width += w * 2;\n      this.height += h * 2;\n    }\n  }\n  const ColorChannelCount = 4;\n  const shaderCount = 10;\n  let s_instance;\n  let s_viewport;\n  let s_fbo;\n  class CubismClippingManager_WebGL {\n    getChannelFlagAsColor(channelNo) {\n      return this._channelColors[channelNo];\n    }\n    getMaskRenderTexture() {\n      let ret = 0;\n      if (this._maskTexture && this._maskTexture.texture != 0) {\n        this._maskTexture.frameNo = this._currentFrameNo;\n        ret = this._maskTexture.texture;\n      }\n      if (ret == 0) {\n        const size = this._clippingMaskBufferSize;\n        this._colorBuffer = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._colorBuffer);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, size, size, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, null);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\n        ret = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, ret);\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, this._colorBuffer, 0);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        this._maskTexture = new CubismRenderTextureResource(this._currentFrameNo, ret);\n      }\n      return ret;\n    }\n    setGL(gl) {\n      this.gl = gl;\n    }\n    calcClippedDrawTotalBounds(model, clippingContext) {\n      let clippedDrawTotalMinX = Number.MAX_VALUE;\n      let clippedDrawTotalMinY = Number.MAX_VALUE;\n      let clippedDrawTotalMaxX = Number.MIN_VALUE;\n      let clippedDrawTotalMaxY = Number.MIN_VALUE;\n      const clippedDrawCount = clippingContext._clippedDrawableIndexList.length;\n      for (let clippedDrawableIndex = 0; clippedDrawableIndex < clippedDrawCount; clippedDrawableIndex++) {\n        const drawableIndex = clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\n        const drawableVertexCount = model.getDrawableVertexCount(drawableIndex);\n        const drawableVertexes = model.getDrawableVertices(drawableIndex);\n        let minX = Number.MAX_VALUE;\n        let minY = Number.MAX_VALUE;\n        let maxX = Number.MIN_VALUE;\n        let maxY = Number.MIN_VALUE;\n        const loop = drawableVertexCount * Constant.vertexStep;\n        for (let pi = Constant.vertexOffset; pi < loop; pi += Constant.vertexStep) {\n          const x = drawableVertexes[pi];\n          const y = drawableVertexes[pi + 1];\n          if (x < minX) {\n            minX = x;\n          }\n          if (x > maxX) {\n            maxX = x;\n          }\n          if (y < minY) {\n            minY = y;\n          }\n          if (y > maxY) {\n            maxY = y;\n          }\n        }\n        if (minX == Number.MAX_VALUE) {\n          continue;\n        }\n        if (minX < clippedDrawTotalMinX) {\n          clippedDrawTotalMinX = minX;\n        }\n        if (minY < clippedDrawTotalMinY) {\n          clippedDrawTotalMinY = minY;\n        }\n        if (maxX > clippedDrawTotalMaxX) {\n          clippedDrawTotalMaxX = maxX;\n        }\n        if (maxY > clippedDrawTotalMaxY) {\n          clippedDrawTotalMaxY = maxY;\n        }\n        if (clippedDrawTotalMinX == Number.MAX_VALUE) {\n          clippingContext._allClippedDrawRect.x = 0;\n          clippingContext._allClippedDrawRect.y = 0;\n          clippingContext._allClippedDrawRect.width = 0;\n          clippingContext._allClippedDrawRect.height = 0;\n          clippingContext._isUsing = false;\n        } else {\n          clippingContext._isUsing = true;\n          const w = clippedDrawTotalMaxX - clippedDrawTotalMinX;\n          const h = clippedDrawTotalMaxY - clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\n          clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\n          clippingContext._allClippedDrawRect.width = w;\n          clippingContext._allClippedDrawRect.height = h;\n        }\n      }\n    }\n    constructor() {\n      this._maskRenderTexture = null;\n      this._colorBuffer = null;\n      this._currentFrameNo = 0;\n      this._clippingMaskBufferSize = 256;\n      this._clippingContextListForMask = [];\n      this._clippingContextListForDraw = [];\n      this._channelColors = [];\n      this._tmpBoundsOnModel = new csmRect();\n      this._tmpMatrix = new CubismMatrix44();\n      this._tmpMatrixForMask = new CubismMatrix44();\n      this._tmpMatrixForDraw = new CubismMatrix44();\n      let tmp = new CubismTextureColor();\n      tmp.R = 1;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 1;\n      tmp.B = 0;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 1;\n      tmp.A = 0;\n      this._channelColors.push(tmp);\n      tmp = new CubismTextureColor();\n      tmp.R = 0;\n      tmp.G = 0;\n      tmp.B = 0;\n      tmp.A = 1;\n      this._channelColors.push(tmp);\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        if (this._clippingContextListForMask[i]) {\n          (_a = this._clippingContextListForMask[i]) == null ? void 0 : _a.release();\n        }\n      }\n      self2._clippingContextListForMask = void 0;\n      self2._clippingContextListForDraw = void 0;\n      if (this._maskTexture) {\n        (_b = this.gl) == null ? void 0 : _b.deleteFramebuffer(this._maskTexture.texture);\n        self2._maskTexture = void 0;\n      }\n      self2._channelColors = void 0;\n      (_c = this.gl) == null ? void 0 : _c.deleteTexture(this._colorBuffer);\n      this._colorBuffer = null;\n    }\n    initialize(model, drawableCount, drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < drawableCount; i++) {\n        if (drawableMaskCounts[i] <= 0) {\n          this._clippingContextListForDraw.push(null);\n          continue;\n        }\n        let clippingContext = this.findSameClip(drawableMasks[i], drawableMaskCounts[i]);\n        if (clippingContext == null) {\n          clippingContext = new CubismClippingContext(this, drawableMasks[i], drawableMaskCounts[i]);\n          this._clippingContextListForMask.push(clippingContext);\n        }\n        clippingContext.addClippedDrawable(i);\n        this._clippingContextListForDraw.push(clippingContext);\n      }\n    }\n    setupClippingContext(model, renderer) {\n      this._currentFrameNo++;\n      let usingClipCount = 0;\n      for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n        const cc = this._clippingContextListForMask[clipIndex];\n        this.calcClippedDrawTotalBounds(model, cc);\n        if (cc._isUsing) {\n          usingClipCount++;\n        }\n      }\n      if (usingClipCount > 0) {\n        this.gl.viewport(0, 0, this._clippingMaskBufferSize, this._clippingMaskBufferSize);\n        this._maskRenderTexture = this.getMaskRenderTexture();\n        renderer.getMvpMatrix();\n        renderer.preDraw();\n        this.setupLayoutBounds(usingClipCount);\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this._maskRenderTexture);\n        this.gl.clearColor(1, 1, 1, 1);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        for (let clipIndex = 0; clipIndex < this._clippingContextListForMask.length; clipIndex++) {\n          const clipContext = this._clippingContextListForMask[clipIndex];\n          const allClipedDrawRect = clipContext._allClippedDrawRect;\n          const layoutBoundsOnTex01 = clipContext._layoutBounds;\n          const MARGIN = 0.05;\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\n          this._tmpBoundsOnModel.expand(allClipedDrawRect.width * MARGIN, allClipedDrawRect.height * MARGIN);\n          const scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\n          const scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(-1, -1);\n              this._tmpMatrix.scaleRelative(2, 2);\n            }\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\n          }\n          {\n            this._tmpMatrix.loadIdentity();\n            {\n              this._tmpMatrix.translateRelative(layoutBoundsOnTex01.x, layoutBoundsOnTex01.y);\n              this._tmpMatrix.scaleRelative(scaleX, scaleY);\n              this._tmpMatrix.translateRelative(-this._tmpBoundsOnModel.x, -this._tmpBoundsOnModel.y);\n            }\n            this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\n          }\n          clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\n          clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\n          const clipDrawCount = clipContext._clippingIdCount;\n          for (let i = 0; i < clipDrawCount; i++) {\n            const clipDrawIndex = clipContext._clippingIdList[i];\n            if (!model.getDrawableDynamicFlagVertexPositionsDidChange(clipDrawIndex)) {\n              continue;\n            }\n            renderer.setIsCulling(model.getDrawableCulling(clipDrawIndex) != false);\n            renderer.setClippingContextBufferForMask(clipContext);\n            renderer.drawMesh(model.getDrawableTextureIndices(clipDrawIndex), model.getDrawableVertexIndexCount(clipDrawIndex), model.getDrawableVertexCount(clipDrawIndex), model.getDrawableVertexIndices(clipDrawIndex), model.getDrawableVertices(clipDrawIndex), model.getDrawableVertexUvs(clipDrawIndex), model.getDrawableOpacity(clipDrawIndex), CubismBlendMode.CubismBlendMode_Normal, false);\n          }\n        }\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\n        renderer.setClippingContextBufferForMask(null);\n        this.gl.viewport(s_viewport[0], s_viewport[1], s_viewport[2], s_viewport[3]);\n      }\n    }\n    findSameClip(drawableMasks, drawableMaskCounts) {\n      for (let i = 0; i < this._clippingContextListForMask.length; i++) {\n        const clippingContext = this._clippingContextListForMask[i];\n        const count = clippingContext._clippingIdCount;\n        if (count != drawableMaskCounts) {\n          continue;\n        }\n        let sameCount = 0;\n        for (let j = 0; j < count; j++) {\n          const clipId = clippingContext._clippingIdList[j];\n          for (let k = 0; k < count; k++) {\n            if (drawableMasks[k] == clipId) {\n              sameCount++;\n              break;\n            }\n          }\n        }\n        if (sameCount == count) {\n          return clippingContext;\n        }\n      }\n      return null;\n    }\n    setupLayoutBounds(usingClipCount) {\n      let div = usingClipCount / ColorChannelCount;\n      let mod = usingClipCount % ColorChannelCount;\n      div = ~~div;\n      mod = ~~mod;\n      let curClipIndex = 0;\n      for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\n        const layoutCount = div + (channelNo < mod ? 1 : 0);\n        if (layoutCount == 0)\n          ;\n        else if (layoutCount == 1) {\n          const clipContext = this._clippingContextListForMask[curClipIndex++];\n          clipContext._layoutChannelNo = channelNo;\n          clipContext._layoutBounds.x = 0;\n          clipContext._layoutBounds.y = 0;\n          clipContext._layoutBounds.width = 1;\n          clipContext._layoutBounds.height = 1;\n        } else if (layoutCount == 2) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            xpos = ~~xpos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = 0;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 1;\n          }\n        } else if (layoutCount <= 4) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 2;\n            let ypos = i / 2;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos * 0.5;\n            cc._layoutBounds.y = ypos * 0.5;\n            cc._layoutBounds.width = 0.5;\n            cc._layoutBounds.height = 0.5;\n          }\n        } else if (layoutCount <= 9) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 3;\n            let ypos = i / 3;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 3;\n            cc._layoutBounds.y = ypos / 3;\n            cc._layoutBounds.width = 1 / 3;\n            cc._layoutBounds.height = 1 / 3;\n          }\n        } else if (CubismConfig.supportMoreMaskDivisions && layoutCount <= 16) {\n          for (let i = 0; i < layoutCount; i++) {\n            let xpos = i % 4;\n            let ypos = i / 4;\n            xpos = ~~xpos;\n            ypos = ~~ypos;\n            const cc = this._clippingContextListForMask[curClipIndex++];\n            cc._layoutChannelNo = channelNo;\n            cc._layoutBounds.x = xpos / 4;\n            cc._layoutBounds.y = ypos / 4;\n            cc._layoutBounds.width = 1 / 4;\n            cc._layoutBounds.height = 1 / 4;\n          }\n        } else {\n          CubismLogError(\"not supported mask count : {0}\", layoutCount);\n        }\n      }\n    }\n    getColorBuffer() {\n      return this._colorBuffer;\n    }\n    getClippingContextListForDraw() {\n      return this._clippingContextListForDraw;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingMaskBufferSize = size;\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingMaskBufferSize;\n    }\n  }\n  class CubismRenderTextureResource {\n    constructor(frameNo, texture) {\n      this.frameNo = frameNo;\n      this.texture = texture;\n    }\n  }\n  class CubismClippingContext {\n    constructor(manager, clippingDrawableIndices, clipCount) {\n      this._isUsing = false;\n      this._owner = manager;\n      this._clippingIdList = clippingDrawableIndices;\n      this._clippingIdCount = clipCount;\n      this._allClippedDrawRect = new csmRect();\n      this._layoutBounds = new csmRect();\n      this._clippedDrawableIndexList = [];\n      this._matrixForMask = new CubismMatrix44();\n      this._matrixForDraw = new CubismMatrix44();\n    }\n    release() {\n      const self2 = this;\n      self2._layoutBounds = void 0;\n      self2._allClippedDrawRect = void 0;\n      self2._clippedDrawableIndexList = void 0;\n    }\n    addClippedDrawable(drawableIndex) {\n      this._clippedDrawableIndexList.push(drawableIndex);\n    }\n    getClippingManager() {\n      return this._owner;\n    }\n    setGl(gl) {\n      this._owner.setGL(gl);\n    }\n  }\n  class CubismShader_WebGL {\n    static getInstance() {\n      if (s_instance == null) {\n        s_instance = new CubismShader_WebGL();\n        return s_instance;\n      }\n      return s_instance;\n    }\n    static deleteInstance() {\n      if (s_instance) {\n        s_instance.release();\n        s_instance = void 0;\n      }\n    }\n    constructor() {\n      this._shaderSets = [];\n    }\n    release() {\n      this.releaseShaderProgram();\n    }\n    setupShaderProgram(renderer, textureId, vertexCount, vertexArray, indexArray, uvArray, bufferData, opacity, colorBlendMode, baseColor, isPremultipliedAlpha, matrix4x4, invertedMask) {\n      if (!isPremultipliedAlpha) {\n        CubismLogError(\"NoPremultipliedAlpha is not allowed\");\n      }\n      if (this._shaderSets.length == 0) {\n        this.generateShaders();\n      }\n      let SRC_COLOR;\n      let DST_COLOR;\n      let SRC_ALPHA;\n      let DST_ALPHA;\n      const clippingContextBufferForMask = renderer.getClippingContextBufferForMask();\n      if (clippingContextBufferForMask != null) {\n        const shaderSet = this._shaderSets[ShaderNames.ShaderNames_SetupMask];\n        this.gl.useProgram(shaderSet.shaderProgram);\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        const channelNo = clippingContextBufferForMask._layoutChannelNo;\n        const colorChannel = clippingContextBufferForMask.getClippingManager().getChannelFlagAsColor(channelNo);\n        this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForMask._matrixForMask.getArray());\n        const rect = clippingContextBufferForMask._layoutBounds;\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, rect.x * 2 - 1, rect.y * 2 - 1, rect.getRight() * 2 - 1, rect.getBottom() * 2 - 1);\n        SRC_COLOR = this.gl.ZERO;\n        DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\n        SRC_ALPHA = this.gl.ZERO;\n        DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n      } else {\n        const clippingContextBufferForDraw = renderer.getClippingContextBufferForDraw();\n        const masked = clippingContextBufferForDraw != null;\n        const offset = masked ? invertedMask ? 2 : 1 : 0;\n        let shaderSet;\n        switch (colorBlendMode) {\n          case CubismBlendMode.CubismBlendMode_Normal:\n          default:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ONE;\n            DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\n            break;\n          case CubismBlendMode.CubismBlendMode_Additive:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_AddPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.ONE;\n            DST_COLOR = this.gl.ONE;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n          case CubismBlendMode.CubismBlendMode_Multiplicative:\n            shaderSet = this._shaderSets[ShaderNames.ShaderNames_MultPremultipliedAlpha + offset];\n            SRC_COLOR = this.gl.DST_COLOR;\n            DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\n            SRC_ALPHA = this.gl.ZERO;\n            DST_ALPHA = this.gl.ONE;\n            break;\n        }\n        this.gl.useProgram(shaderSet.shaderProgram);\n        if (bufferData.vertex == null) {\n          bufferData.vertex = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertexArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributePositionLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (bufferData.uv == null) {\n          bufferData.uv = this.gl.createBuffer();\n        }\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\n        this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\n        this.gl.vertexAttribPointer(shaderSet.attributeTexCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n        if (clippingContextBufferForDraw != null) {\n          this.gl.activeTexture(this.gl.TEXTURE1);\n          const tex = clippingContextBufferForDraw.getClippingManager().getColorBuffer();\n          this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\n          this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\n          this.gl.uniformMatrix4fv(shaderSet.uniformClipMatrixLocation, false, clippingContextBufferForDraw._matrixForDraw.getArray());\n          const channelNo = clippingContextBufferForDraw._layoutChannelNo;\n          const colorChannel = clippingContextBufferForDraw.getClippingManager().getChannelFlagAsColor(channelNo);\n          this.gl.uniform4f(shaderSet.uniformChannelFlagLocation, colorChannel.R, colorChannel.G, colorChannel.B, colorChannel.A);\n        }\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\n        this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\n        this.gl.uniformMatrix4fv(shaderSet.uniformMatrixLocation, false, matrix4x4.getArray());\n        this.gl.uniform4f(shaderSet.uniformBaseColorLocation, baseColor.R, baseColor.G, baseColor.B, baseColor.A);\n      }\n      if (bufferData.index == null) {\n        bufferData.index = this.gl.createBuffer();\n      }\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\n      this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indexArray, this.gl.DYNAMIC_DRAW);\n      this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\n    }\n    releaseShaderProgram() {\n      for (let i = 0; i < this._shaderSets.length; i++) {\n        this.gl.deleteProgram(this._shaderSets[i].shaderProgram);\n        this._shaderSets[i].shaderProgram = 0;\n      }\n      this._shaderSets = [];\n    }\n    generateShaders() {\n      for (let i = 0; i < shaderCount; i++) {\n        this._shaderSets.push({});\n      }\n      this._shaderSets[0].shaderProgram = this.loadShaderProgram(vertexShaderSrcSetupMask, fragmentShaderSrcsetupMask);\n      this._shaderSets[1].shaderProgram = this.loadShaderProgram(vertexShaderSrc, fragmentShaderSrcPremultipliedAlpha);\n      this._shaderSets[2].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskPremultipliedAlpha);\n      this._shaderSets[3].shaderProgram = this.loadShaderProgram(vertexShaderSrcMasked, fragmentShaderSrcMaskInvertedPremultipliedAlpha);\n      this._shaderSets[4].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[5].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[6].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[7].shaderProgram = this._shaderSets[1].shaderProgram;\n      this._shaderSets[8].shaderProgram = this._shaderSets[2].shaderProgram;\n      this._shaderSets[9].shaderProgram = this._shaderSets[3].shaderProgram;\n      this._shaderSets[0].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_position\");\n      this._shaderSets[0].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[0].shaderProgram, \"a_texCoord\");\n      this._shaderSets[0].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"s_texture0\");\n      this._shaderSets[0].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[0].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[0].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[0].shaderProgram, \"u_baseColor\");\n      this._shaderSets[1].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_position\");\n      this._shaderSets[1].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[1].shaderProgram, \"a_texCoord\");\n      this._shaderSets[1].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"s_texture0\");\n      this._shaderSets[1].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_matrix\");\n      this._shaderSets[1].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[1].shaderProgram, \"u_baseColor\");\n      this._shaderSets[2].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_position\");\n      this._shaderSets[2].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[2].shaderProgram, \"a_texCoord\");\n      this._shaderSets[2].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture0\");\n      this._shaderSets[2].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"s_texture1\");\n      this._shaderSets[2].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_matrix\");\n      this._shaderSets[2].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[2].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[2].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[2].shaderProgram, \"u_baseColor\");\n      this._shaderSets[3].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_position\");\n      this._shaderSets[3].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[3].shaderProgram, \"a_texCoord\");\n      this._shaderSets[3].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture0\");\n      this._shaderSets[3].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"s_texture1\");\n      this._shaderSets[3].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_matrix\");\n      this._shaderSets[3].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[3].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[3].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[3].shaderProgram, \"u_baseColor\");\n      this._shaderSets[4].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_position\");\n      this._shaderSets[4].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[4].shaderProgram, \"a_texCoord\");\n      this._shaderSets[4].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"s_texture0\");\n      this._shaderSets[4].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_matrix\");\n      this._shaderSets[4].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[4].shaderProgram, \"u_baseColor\");\n      this._shaderSets[5].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_position\");\n      this._shaderSets[5].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[5].shaderProgram, \"a_texCoord\");\n      this._shaderSets[5].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture0\");\n      this._shaderSets[5].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"s_texture1\");\n      this._shaderSets[5].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_matrix\");\n      this._shaderSets[5].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[5].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[5].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[5].shaderProgram, \"u_baseColor\");\n      this._shaderSets[6].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_position\");\n      this._shaderSets[6].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[6].shaderProgram, \"a_texCoord\");\n      this._shaderSets[6].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture0\");\n      this._shaderSets[6].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"s_texture1\");\n      this._shaderSets[6].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_matrix\");\n      this._shaderSets[6].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[6].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[6].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[6].shaderProgram, \"u_baseColor\");\n      this._shaderSets[7].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_position\");\n      this._shaderSets[7].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[7].shaderProgram, \"a_texCoord\");\n      this._shaderSets[7].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"s_texture0\");\n      this._shaderSets[7].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_matrix\");\n      this._shaderSets[7].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[7].shaderProgram, \"u_baseColor\");\n      this._shaderSets[8].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_position\");\n      this._shaderSets[8].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[8].shaderProgram, \"a_texCoord\");\n      this._shaderSets[8].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture0\");\n      this._shaderSets[8].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"s_texture1\");\n      this._shaderSets[8].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_matrix\");\n      this._shaderSets[8].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[8].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[8].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[8].shaderProgram, \"u_baseColor\");\n      this._shaderSets[9].attributePositionLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_position\");\n      this._shaderSets[9].attributeTexCoordLocation = this.gl.getAttribLocation(this._shaderSets[9].shaderProgram, \"a_texCoord\");\n      this._shaderSets[9].samplerTexture0Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture0\");\n      this._shaderSets[9].samplerTexture1Location = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"s_texture1\");\n      this._shaderSets[9].uniformMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_matrix\");\n      this._shaderSets[9].uniformClipMatrixLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_clipMatrix\");\n      this._shaderSets[9].uniformChannelFlagLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_channelFlag\");\n      this._shaderSets[9].uniformBaseColorLocation = this.gl.getUniformLocation(this._shaderSets[9].shaderProgram, \"u_baseColor\");\n    }\n    loadShaderProgram(vertexShaderSource, fragmentShaderSource) {\n      let shaderProgram = this.gl.createProgram();\n      let vertShader = this.compileShaderSource(this.gl.VERTEX_SHADER, vertexShaderSource);\n      if (!vertShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      let fragShader = this.compileShaderSource(this.gl.FRAGMENT_SHADER, fragmentShaderSource);\n      if (!fragShader) {\n        CubismLogError(\"Vertex shader compile error!\");\n        return 0;\n      }\n      this.gl.attachShader(shaderProgram, vertShader);\n      this.gl.attachShader(shaderProgram, fragShader);\n      this.gl.linkProgram(shaderProgram);\n      const linkStatus = this.gl.getProgramParameter(shaderProgram, this.gl.LINK_STATUS);\n      if (!linkStatus) {\n        CubismLogError(\"Failed to link program: {0}\", shaderProgram);\n        this.gl.deleteShader(vertShader);\n        this.gl.deleteShader(fragShader);\n        if (shaderProgram) {\n          this.gl.deleteProgram(shaderProgram);\n        }\n        return 0;\n      }\n      this.gl.deleteShader(vertShader);\n      this.gl.deleteShader(fragShader);\n      return shaderProgram;\n    }\n    compileShaderSource(shaderType, shaderSource) {\n      const source = shaderSource;\n      const shader = this.gl.createShader(shaderType);\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!shader) {\n        const log = this.gl.getShaderInfoLog(shader);\n        CubismLogError(\"Shader compile log: {0} \", log);\n      }\n      const status = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n      if (!status) {\n        this.gl.deleteShader(shader);\n        return null;\n      }\n      return shader;\n    }\n    setGl(gl) {\n      this.gl = gl;\n    }\n  }\n  var ShaderNames = /* @__PURE__ */ ((ShaderNames2) => {\n    ShaderNames2[ShaderNames2[\"ShaderNames_SetupMask\"] = 0] = \"ShaderNames_SetupMask\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalPremultipliedAlpha\"] = 1] = \"ShaderNames_NormalPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NormalMaskedPremultipliedAlpha\"] = 2] = \"ShaderNames_NormalMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\"] = 3] = \"ShaderNames_NomralMaskedInvertedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddPremultipliedAlpha\"] = 4] = \"ShaderNames_AddPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlpha\"] = 5] = \"ShaderNames_AddMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_AddMaskedPremultipliedAlphaInverted\"] = 6] = \"ShaderNames_AddMaskedPremultipliedAlphaInverted\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultPremultipliedAlpha\"] = 7] = \"ShaderNames_MultPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlpha\"] = 8] = \"ShaderNames_MultMaskedPremultipliedAlpha\";\n    ShaderNames2[ShaderNames2[\"ShaderNames_MultMaskedPremultipliedAlphaInverted\"] = 9] = \"ShaderNames_MultMaskedPremultipliedAlphaInverted\";\n    return ShaderNames2;\n  })(ShaderNames || {});\n  const vertexShaderSrcSetupMask = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_myPos;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_clipMatrix * a_position;   v_myPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcsetupMask = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_myPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;void main(){   float isInside =        step(u_baseColor.x, v_myPos.x/v_myPos.w)       * step(u_baseColor.y, v_myPos.y/v_myPos.w)       * step(v_myPos.x/v_myPos.w, u_baseColor.z)       * step(v_myPos.y/v_myPos.w, u_baseColor.w);   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;}\";\n  const vertexShaderSrc = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;uniform mat4       u_matrix;void main(){   gl_Position = u_matrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const vertexShaderSrcMasked = \"attribute vec4     a_position;attribute vec2     a_texCoord;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform mat4       u_matrix;uniform mat4       u_clipMatrix;void main(){   gl_Position = u_matrix * a_position;   v_clipPos = u_clipMatrix * a_position;   v_texCoord = a_texCoord;   v_texCoord.y = 1.0 - v_texCoord.y;}\";\n  const fragmentShaderSrcPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;uniform vec4       u_baseColor;uniform sampler2D  s_texture0;void main(){   gl_FragColor = texture2D(s_texture0 , v_texCoord) * u_baseColor;}\";\n  const fragmentShaderSrcMaskPremultipliedAlpha = \"precision mediump float;varying vec2       v_texCoord;varying vec4       v_clipPos;uniform vec4       u_baseColor;uniform vec4       u_channelFlag;uniform sampler2D  s_texture0;uniform sampler2D  s_texture1;void main(){   vec4 col_formask = texture2D(s_texture0 , v_texCoord) * u_baseColor;   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;   col_formask = col_formask * maskVal;   gl_FragColor = col_formask;}\";\n  const fragmentShaderSrcMaskInvertedPremultipliedAlpha = \"precision mediump float;varying vec2 v_texCoord;varying vec4 v_clipPos;uniform sampler2D s_texture0;uniform sampler2D s_texture1;uniform vec4 u_channelFlag;uniform vec4 u_baseColor;void main(){vec4 col_formask = texture2D(s_texture0, v_texCoord) * u_baseColor;vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;col_formask = col_formask * (1.0 - maskVal);gl_FragColor = col_formask;}\";\n  class CubismRenderer_WebGL extends CubismRenderer {\n    constructor() {\n      super();\n      this._clippingContextBufferForMask = null;\n      this._clippingContextBufferForDraw = null;\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this.firstDraw = true;\n      this._textures = {};\n      this._sortedDrawableIndexList = [];\n      this._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n    }\n    initialize(model) {\n      if (model.isUsingMasking()) {\n        this._clippingManager = new CubismClippingManager_WebGL();\n        this._clippingManager.initialize(model, model.getDrawableCount(), model.getDrawableMasks(), model.getDrawableMaskCounts());\n      }\n      for (let i = model.getDrawableCount() - 1; i >= 0; i--) {\n        this._sortedDrawableIndexList[i] = 0;\n      }\n      super.initialize(model);\n    }\n    bindTexture(modelTextureNo, glTexture) {\n      this._textures[modelTextureNo] = glTexture;\n    }\n    getBindedTextures() {\n      return this._textures;\n    }\n    setClippingMaskBufferSize(size) {\n      this._clippingManager.release();\n      this._clippingManager = new CubismClippingManager_WebGL();\n      this._clippingManager.setClippingMaskBufferSize(size);\n      this._clippingManager.initialize(this.getModel(), this.getModel().getDrawableCount(), this.getModel().getDrawableMasks(), this.getModel().getDrawableMaskCounts());\n    }\n    getClippingMaskBufferSize() {\n      return this._clippingManager.getClippingMaskBufferSize();\n    }\n    release() {\n      var _a, _b, _c;\n      const self2 = this;\n      this._clippingManager.release();\n      self2._clippingManager = void 0;\n      (_a = this.gl) == null ? void 0 : _a.deleteBuffer(this._bufferData.vertex);\n      this._bufferData.vertex = null;\n      (_b = this.gl) == null ? void 0 : _b.deleteBuffer(this._bufferData.uv);\n      this._bufferData.uv = null;\n      (_c = this.gl) == null ? void 0 : _c.deleteBuffer(this._bufferData.index);\n      this._bufferData.index = null;\n      self2._bufferData = void 0;\n      self2._textures = void 0;\n    }\n    doDrawModel() {\n      this.preDraw();\n      if (this._clippingManager != null) {\n        this._clippingManager.setupClippingContext(this.getModel(), this);\n      }\n      const drawableCount = this.getModel().getDrawableCount();\n      const renderOrder = this.getModel().getDrawableRenderOrders();\n      for (let i = 0; i < drawableCount; ++i) {\n        const order = renderOrder[i];\n        this._sortedDrawableIndexList[order] = i;\n      }\n      for (let i = 0; i < drawableCount; ++i) {\n        const drawableIndex = this._sortedDrawableIndexList[i];\n        if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\n          continue;\n        }\n        this.setClippingContextBufferForDraw(this._clippingManager != null ? this._clippingManager.getClippingContextListForDraw()[drawableIndex] : null);\n        this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\n        this.drawMesh(this.getModel().getDrawableTextureIndices(drawableIndex), this.getModel().getDrawableVertexIndexCount(drawableIndex), this.getModel().getDrawableVertexCount(drawableIndex), this.getModel().getDrawableVertexIndices(drawableIndex), this.getModel().getDrawableVertices(drawableIndex), this.getModel().getDrawableVertexUvs(drawableIndex), this.getModel().getDrawableOpacity(drawableIndex), this.getModel().getDrawableBlendMode(drawableIndex), this.getModel().getDrawableInvertedMaskBit(drawableIndex));\n      }\n    }\n    drawMesh(textureNo, indexCount, vertexCount, indexArray, vertexArray, uvArray, opacity, colorBlendMode, invertedMask) {\n      if (this.isCulling()) {\n        this.gl.enable(this.gl.CULL_FACE);\n      } else {\n        this.gl.disable(this.gl.CULL_FACE);\n      }\n      this.gl.frontFace(this.gl.CCW);\n      const modelColorRGBA = this.getModelColor();\n      if (this.getClippingContextBufferForMask() == null) {\n        modelColorRGBA.A *= opacity;\n        if (this.isPremultipliedAlpha()) {\n          modelColorRGBA.R *= modelColorRGBA.A;\n          modelColorRGBA.G *= modelColorRGBA.A;\n          modelColorRGBA.B *= modelColorRGBA.A;\n        }\n      }\n      let drawtexture = null;\n      if (this._textures[textureNo] != null) {\n        drawtexture = this._textures[textureNo];\n      }\n      CubismShader_WebGL.getInstance().setupShaderProgram(this, drawtexture, vertexCount, vertexArray, indexArray, uvArray, this._bufferData, opacity, colorBlendMode, modelColorRGBA, this.isPremultipliedAlpha(), this.getMvpMatrix(), invertedMask);\n      this.gl.drawElements(this.gl.TRIANGLES, indexCount, this.gl.UNSIGNED_SHORT, 0);\n      this.gl.useProgram(null);\n      this.setClippingContextBufferForDraw(null);\n      this.setClippingContextBufferForMask(null);\n    }\n    static doStaticRelease() {\n      CubismShader_WebGL.deleteInstance();\n    }\n    setRenderState(fbo, viewport) {\n      s_fbo = fbo;\n      s_viewport = viewport;\n    }\n    preDraw() {\n      if (this.firstDraw) {\n        this.firstDraw = false;\n        this._anisortopy = this.gl.getExtension(\"EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") || this.gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\n      }\n      this.gl.disable(this.gl.SCISSOR_TEST);\n      this.gl.disable(this.gl.STENCIL_TEST);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.frontFace(this.gl.CW);\n      this.gl.enable(this.gl.BLEND);\n      this.gl.colorMask(true, true, true, true);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    setClippingContextBufferForMask(clip) {\n      this._clippingContextBufferForMask = clip;\n    }\n    getClippingContextBufferForMask() {\n      return this._clippingContextBufferForMask;\n    }\n    setClippingContextBufferForDraw(clip) {\n      this._clippingContextBufferForDraw = clip;\n    }\n    getClippingContextBufferForDraw() {\n      return this._clippingContextBufferForDraw;\n    }\n    startUp(gl) {\n      this.gl = gl;\n      this._clippingManager.setGL(gl);\n      CubismShader_WebGL.getInstance().setGl(gl);\n    }\n  }\n  CubismRenderer.staticRelease = () => {\n    CubismRenderer_WebGL.doStaticRelease();\n  };\n  const tempMatrix = new CubismMatrix44();\n  class Cubism4InternalModel extends InternalModel {\n    constructor(coreModel, settings, options) {\n      super();\n      this.lipSync = true;\n      this.breath = CubismBreath.create();\n      this.renderer = new CubismRenderer_WebGL();\n      this.idParamAngleX = ParamAngleX;\n      this.idParamAngleY = ParamAngleY;\n      this.idParamAngleZ = ParamAngleZ;\n      this.idParamEyeBallX = ParamEyeBallX;\n      this.idParamEyeBallY = ParamEyeBallY;\n      this.idParamBodyAngleX = ParamBodyAngleX;\n      this.idParamBreath = ParamBreath;\n      this.pixelsPerUnit = 1;\n      this.centeringTransform = new math.Matrix();\n      this.coreModel = coreModel;\n      this.settings = settings;\n      this.motionManager = new Cubism4MotionManager(settings, options);\n      this.init();\n    }\n    init() {\n      var _a;\n      super.init();\n      if (((_a = this.settings.getEyeBlinkParameters()) == null ? void 0 : _a.length) > 0) {\n        this.eyeBlink = CubismEyeBlink.create(this.settings);\n      }\n      this.breath.setParameters([\n        new BreathParameterData(this.idParamAngleX, 0, 15, 6.5345, 0.5),\n        new BreathParameterData(this.idParamAngleY, 0, 8, 3.5345, 0.5),\n        new BreathParameterData(this.idParamAngleZ, 0, 10, 5.5345, 0.5),\n        new BreathParameterData(this.idParamBodyAngleX, 0, 4, 15.5345, 0.5),\n        new BreathParameterData(this.idParamBreath, 0, 0.5, 3.2345, 0.5)\n      ]);\n      this.renderer.initialize(this.coreModel);\n      this.renderer.setIsPremultipliedAlpha(true);\n    }\n    getSize() {\n      return [this.coreModel.getModel().canvasinfo.CanvasWidth, this.coreModel.getModel().canvasinfo.CanvasHeight];\n    }\n    getLayout() {\n      const layout = {};\n      if (this.settings.layout) {\n        for (const key of Object.keys(this.settings.layout)) {\n          const commonKey = key.charAt(0).toLowerCase() + key.slice(1);\n          layout[commonKey] = this.settings.layout[key];\n        }\n      }\n      return layout;\n    }\n    setupLayout() {\n      super.setupLayout();\n      this.pixelsPerUnit = this.coreModel.getModel().canvasinfo.PixelsPerUnit;\n      this.centeringTransform.scale(this.pixelsPerUnit, this.pixelsPerUnit).translate(this.originalWidth / 2, this.originalHeight / 2);\n    }\n    updateWebGLContext(gl, glContextID) {\n      this.renderer.firstDraw = true;\n      this.renderer._bufferData = {\n        vertex: null,\n        uv: null,\n        index: null\n      };\n      this.renderer.startUp(gl);\n      this.renderer._clippingManager._currentFrameNo = glContextID;\n      this.renderer._clippingManager._maskTexture = void 0;\n      CubismShader_WebGL.getInstance()._shaderSets = [];\n    }\n    bindTexture(index, texture) {\n      this.renderer.bindTexture(index, texture);\n    }\n    getHitAreaDefs() {\n      var _a, _b;\n      return (_b = (_a = this.settings.hitAreas) == null ? void 0 : _a.map((hitArea) => ({\n        id: hitArea.Id,\n        name: hitArea.Name,\n        index: this.coreModel.getDrawableIndex(hitArea.Id)\n      }))) != null ? _b : [];\n    }\n    getDrawableIDs() {\n      return this.coreModel.getDrawableIds();\n    }\n    getDrawableIndex(id) {\n      return this.coreModel.getDrawableIndex(id);\n    }\n    getDrawableVertices(drawIndex) {\n      if (typeof drawIndex === \"string\") {\n        drawIndex = this.coreModel.getDrawableIndex(drawIndex);\n        if (drawIndex === -1)\n          throw new TypeError(\"Unable to find drawable ID: \" + drawIndex);\n      }\n      const arr = this.coreModel.getDrawableVertices(drawIndex).slice();\n      for (let i = 0; i < arr.length; i += 2) {\n        arr[i] = arr[i] * this.pixelsPerUnit + this.originalWidth / 2;\n        arr[i + 1] = -arr[i + 1] * this.pixelsPerUnit + this.originalHeight / 2;\n      }\n      return arr;\n    }\n    updateTransform(transform) {\n      this.drawingMatrix.copyFrom(this.centeringTransform).prepend(this.localTransform).prepend(transform);\n    }\n    update(dt, now) {\n      var _a, _b, _c, _d;\n      super.update(dt, now);\n      dt /= 1e3;\n      now /= 1e3;\n      const model = this.coreModel;\n      this.emit(\"beforeMotionUpdate\");\n      const motionUpdated = this.motionManager.update(this.coreModel, now);\n      this.emit(\"afterMotionUpdate\");\n      model.saveParameters();\n      (_a = this.motionManager.expressionManager) == null ? void 0 : _a.update(model, now);\n      if (!motionUpdated) {\n        (_b = this.eyeBlink) == null ? void 0 : _b.updateParameters(model, dt);\n      }\n      this.updateFocus();\n      this.updateNaturalMovements(dt * 1e3, now * 1e3);\n      (_c = this.physics) == null ? void 0 : _c.evaluate(model, dt);\n      (_d = this.pose) == null ? void 0 : _d.updateParameters(model, dt);\n      this.emit(\"beforeModelUpdate\");\n      model.update();\n      model.loadParameters();\n    }\n    updateFocus() {\n      this.coreModel.addParameterValueById(this.idParamEyeBallX, this.focusController.x);\n      this.coreModel.addParameterValueById(this.idParamEyeBallY, this.focusController.y);\n      this.coreModel.addParameterValueById(this.idParamAngleX, this.focusController.x * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleY, this.focusController.y * 30);\n      this.coreModel.addParameterValueById(this.idParamAngleZ, this.focusController.x * this.focusController.y * -30);\n      this.coreModel.addParameterValueById(this.idParamBodyAngleX, this.focusController.x * 10);\n    }\n    updateNaturalMovements(dt, now) {\n      var _a;\n      (_a = this.breath) == null ? void 0 : _a.updateParameters(this.coreModel, dt / 1e3);\n    }\n    draw(gl) {\n      const matrix = this.drawingMatrix;\n      const array = tempMatrix.getArray();\n      array[0] = matrix.a;\n      array[1] = matrix.b;\n      array[4] = -matrix.c;\n      array[5] = -matrix.d;\n      array[12] = matrix.tx;\n      array[13] = matrix.ty;\n      this.renderer.setMvpMatrix(tempMatrix);\n      this.renderer.setRenderState(gl.getParameter(gl.FRAMEBUFFER_BINDING), this.viewport);\n      this.renderer.drawModel();\n    }\n    destroy() {\n      super.destroy();\n      this.renderer.release();\n      this.coreModel.release();\n      this.renderer = void 0;\n      this.coreModel = void 0;\n    }\n  }\n  let startupPromise;\n  let startupRetries = 20;\n  function cubism4Ready() {\n    if (CubismFramework.isStarted()) {\n      return Promise.resolve();\n    }\n    startupPromise != null ? startupPromise : startupPromise = new Promise((resolve, reject) => {\n      function startUpWithRetry() {\n        try {\n          startUpCubism4();\n          resolve();\n        } catch (e) {\n          startupRetries--;\n          if (startupRetries < 0) {\n            const err = new Error(\"Failed to start up Cubism 4 framework.\");\n            err.cause = e;\n            reject(err);\n            return;\n          }\n          logger.log(\"Cubism4\", \"Startup failed, retrying 10ms later...\");\n          setTimeout(startUpWithRetry, 10);\n        }\n      }\n      startUpWithRetry();\n    });\n    return startupPromise;\n  }\n  function startUpCubism4(options) {\n    options = Object.assign({\n      logFunction: console.log,\n      loggingLevel: LogLevel.LogLevel_Verbose\n    }, options);\n    CubismFramework.startUp(options);\n    CubismFramework.initialize();\n  }\n  const Epsilon = 1e-3;\n  const DefaultFadeInSeconds = 0.5;\n  class CubismPose {\n    static create(pose3json) {\n      const ret = new CubismPose();\n      if (typeof pose3json.FadeInTime === \"number\") {\n        ret._fadeTimeSeconds = pose3json.FadeInTime;\n        if (ret._fadeTimeSeconds <= 0) {\n          ret._fadeTimeSeconds = DefaultFadeInSeconds;\n        }\n      }\n      const poseListInfo = pose3json.Groups;\n      const poseCount = poseListInfo.length;\n      for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\n        const idListInfo = poseListInfo[poseIndex];\n        const idCount = idListInfo.length;\n        let groupCount = 0;\n        for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\n          const partInfo = idListInfo[groupIndex];\n          const partData = new PartData();\n          partData.partId = partInfo.Id;\n          const linkListInfo = partInfo.Link;\n          if (linkListInfo) {\n            const linkCount = linkListInfo.length;\n            for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\n              const linkPart = new PartData();\n              linkPart.partId = linkListInfo[linkIndex];\n              partData.link.push(linkPart);\n            }\n          }\n          ret._partGroups.push(partData);\n          ++groupCount;\n        }\n        ret._partGroupCounts.push(groupCount);\n      }\n      return ret;\n    }\n    updateParameters(model, deltaTimeSeconds) {\n      if (model != this._lastModel) {\n        this.reset(model);\n      }\n      this._lastModel = model;\n      if (deltaTimeSeconds < 0) {\n        deltaTimeSeconds = 0;\n      }\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; i++) {\n        const partGroupCount = this._partGroupCounts[i];\n        this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\n        beginIndex += partGroupCount;\n      }\n      this.copyPartOpacities(model);\n    }\n    reset(model) {\n      let beginIndex = 0;\n      for (let i = 0; i < this._partGroupCounts.length; ++i) {\n        const groupCount = this._partGroupCounts[i];\n        for (let j = beginIndex; j < beginIndex + groupCount; ++j) {\n          this._partGroups[j].initialize(model);\n          const partsIndex = this._partGroups[j].partIndex;\n          const paramIndex = this._partGroups[j].parameterIndex;\n          if (partsIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1 : 0);\n          model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1 : 0);\n          for (let k = 0; k < this._partGroups[j].link.length; ++k) {\n            this._partGroups[j].link[k].initialize(model);\n          }\n        }\n        beginIndex += groupCount;\n      }\n    }\n    copyPartOpacities(model) {\n      for (let groupIndex = 0; groupIndex < this._partGroups.length; ++groupIndex) {\n        const partData = this._partGroups[groupIndex];\n        if (partData.link.length == 0) {\n          continue;\n        }\n        const partIndex = this._partGroups[groupIndex].partIndex;\n        const opacity = model.getPartOpacityByIndex(partIndex);\n        for (let linkIndex = 0; linkIndex < partData.link.length; ++linkIndex) {\n          const linkPart = partData.link[linkIndex];\n          const linkPartIndex = linkPart.partIndex;\n          if (linkPartIndex < 0) {\n            continue;\n          }\n          model.setPartOpacityByIndex(linkPartIndex, opacity);\n        }\n      }\n    }\n    doFade(model, deltaTimeSeconds, beginIndex, partGroupCount) {\n      let visiblePartIndex = -1;\n      let newOpacity = 1;\n      const phi = 0.5;\n      const backOpacityThreshold = 0.15;\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partIndex = this._partGroups[i].partIndex;\n        const paramIndex = this._partGroups[i].parameterIndex;\n        if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\n          if (visiblePartIndex >= 0) {\n            break;\n          }\n          visiblePartIndex = i;\n          newOpacity = model.getPartOpacityByIndex(partIndex);\n          newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\n          if (newOpacity > 1) {\n            newOpacity = 1;\n          }\n        }\n      }\n      if (visiblePartIndex < 0) {\n        visiblePartIndex = 0;\n        newOpacity = 1;\n      }\n      for (let i = beginIndex; i < beginIndex + partGroupCount; ++i) {\n        const partsIndex = this._partGroups[i].partIndex;\n        if (visiblePartIndex == i) {\n          model.setPartOpacityByIndex(partsIndex, newOpacity);\n        } else {\n          let opacity = model.getPartOpacityByIndex(partsIndex);\n          let a1;\n          if (newOpacity < phi) {\n            a1 = newOpacity * (phi - 1) / phi + 1;\n          } else {\n            a1 = (1 - newOpacity) * phi / (1 - phi);\n          }\n          const backOpacity = (1 - a1) * (1 - newOpacity);\n          if (backOpacity > backOpacityThreshold) {\n            a1 = 1 - backOpacityThreshold / (1 - newOpacity);\n          }\n          if (opacity > a1) {\n            opacity = a1;\n          }\n          model.setPartOpacityByIndex(partsIndex, opacity);\n        }\n      }\n    }\n    constructor() {\n      this._fadeTimeSeconds = DefaultFadeInSeconds;\n      this._lastModel = void 0;\n      this._partGroups = [];\n      this._partGroupCounts = [];\n    }\n  }\n  class PartData {\n    constructor(v) {\n      this.parameterIndex = 0;\n      this.partIndex = 0;\n      this.partId = \"\";\n      this.link = [];\n      if (v != void 0) {\n        this.assignment(v);\n      }\n    }\n    assignment(v) {\n      this.partId = v.partId;\n      this.link = v.link.map((link) => link.clone());\n      return this;\n    }\n    initialize(model) {\n      this.parameterIndex = model.getParameterIndex(this.partId);\n      this.partIndex = model.getPartIndex(this.partId);\n      model.setParameterValueByIndex(this.parameterIndex, 1);\n    }\n    clone() {\n      const clonePartData = new PartData();\n      clonePartData.partId = this.partId;\n      clonePartData.parameterIndex = this.parameterIndex;\n      clonePartData.partIndex = this.partIndex;\n      clonePartData.link = this.link.map((link) => link.clone());\n      return clonePartData;\n    }\n  }\n  class CubismModel {\n    update() {\n      this._model.update();\n      this._model.drawables.resetDynamicFlags();\n    }\n    getCanvasWidth() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit;\n    }\n    getCanvasHeight() {\n      if (this._model == null) {\n        return 0;\n      }\n      return this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit;\n    }\n    saveParameters() {\n      const parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      for (let i = 0; i < parameterCount; ++i) {\n        if (i < savedParameterCount) {\n          this._savedParameters[i] = this._parameterValues[i];\n        } else {\n          this._savedParameters.push(this._parameterValues[i]);\n        }\n      }\n    }\n    getModel() {\n      return this._model;\n    }\n    getPartIndex(partId) {\n      let partIndex;\n      const partCount = this._model.parts.count;\n      for (partIndex = 0; partIndex < partCount; ++partIndex) {\n        if (partId == this._partIds[partIndex]) {\n          return partIndex;\n        }\n      }\n      if (partId in this._notExistPartId) {\n        return this._notExistPartId[partId];\n      }\n      partIndex = partCount + this._notExistPartId.length;\n      this._notExistPartId[partId] = partIndex;\n      this._notExistPartOpacities[partIndex] = 0;\n      return partIndex;\n    }\n    getPartCount() {\n      return this._model.parts.count;\n    }\n    setPartOpacityByIndex(partIndex, opacity) {\n      if (partIndex in this._notExistPartOpacities) {\n        this._notExistPartOpacities[partIndex] = opacity;\n        return;\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      this._partOpacities[partIndex] = opacity;\n    }\n    setPartOpacityById(partId, opacity) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return;\n      }\n      this.setPartOpacityByIndex(index, opacity);\n    }\n    getPartOpacityByIndex(partIndex) {\n      if (partIndex in this._notExistPartOpacities) {\n        return this._notExistPartOpacities[partIndex];\n      }\n      CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\n      return this._partOpacities[partIndex];\n    }\n    getPartOpacityById(partId) {\n      const index = this.getPartIndex(partId);\n      if (index < 0) {\n        return 0;\n      }\n      return this.getPartOpacityByIndex(index);\n    }\n    getParameterIndex(parameterId) {\n      let parameterIndex;\n      const idCount = this._model.parameters.count;\n      for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\n        if (parameterId != this._parameterIds[parameterIndex]) {\n          continue;\n        }\n        return parameterIndex;\n      }\n      if (parameterId in this._notExistParameterId) {\n        return this._notExistParameterId[parameterId];\n      }\n      parameterIndex = this._model.parameters.count + Object.keys(this._notExistParameterId).length;\n      this._notExistParameterId[parameterId] = parameterIndex;\n      this._notExistParameterValues[parameterIndex] = 0;\n      return parameterIndex;\n    }\n    getParameterCount() {\n      return this._model.parameters.count;\n    }\n    getParameterMaximumValue(parameterIndex) {\n      return this._model.parameters.maximumValues[parameterIndex];\n    }\n    getParameterMinimumValue(parameterIndex) {\n      return this._model.parameters.minimumValues[parameterIndex];\n    }\n    getParameterDefaultValue(parameterIndex) {\n      return this._model.parameters.defaultValues[parameterIndex];\n    }\n    getParameterValueByIndex(parameterIndex) {\n      if (parameterIndex in this._notExistParameterValues) {\n        return this._notExistParameterValues[parameterIndex];\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      return this._parameterValues[parameterIndex];\n    }\n    getParameterValueById(parameterId) {\n      const parameterIndex = this.getParameterIndex(parameterId);\n      return this.getParameterValueByIndex(parameterIndex);\n    }\n    setParameterValueByIndex(parameterIndex, value, weight = 1) {\n      if (parameterIndex in this._notExistParameterValues) {\n        this._notExistParameterValues[parameterIndex] = weight == 1 ? value : this._notExistParameterValues[parameterIndex] * (1 - weight) + value * weight;\n        return;\n      }\n      CSM_ASSERT(0 <= parameterIndex && parameterIndex < this.getParameterCount());\n      if (this._model.parameters.maximumValues[parameterIndex] < value) {\n        value = this._model.parameters.maximumValues[parameterIndex];\n      }\n      if (this._model.parameters.minimumValues[parameterIndex] > value) {\n        value = this._model.parameters.minimumValues[parameterIndex];\n      }\n      this._parameterValues[parameterIndex] = weight == 1 ? value : this._parameterValues[parameterIndex] = this._parameterValues[parameterIndex] * (1 - weight) + value * weight;\n    }\n    setParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.setParameterValueByIndex(index, value, weight);\n    }\n    addParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) + value * weight);\n    }\n    addParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.addParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueById(parameterId, value, weight = 1) {\n      const index = this.getParameterIndex(parameterId);\n      this.multiplyParameterValueByIndex(index, value, weight);\n    }\n    multiplyParameterValueByIndex(parameterIndex, value, weight = 1) {\n      this.setParameterValueByIndex(parameterIndex, this.getParameterValueByIndex(parameterIndex) * (1 + (value - 1) * weight));\n    }\n    getDrawableIds() {\n      return this._drawableIds.slice();\n    }\n    getDrawableIndex(drawableId) {\n      const drawableCount = this._model.drawables.count;\n      for (let drawableIndex = 0; drawableIndex < drawableCount; ++drawableIndex) {\n        if (this._drawableIds[drawableIndex] == drawableId) {\n          return drawableIndex;\n        }\n      }\n      return -1;\n    }\n    getDrawableCount() {\n      return this._model.drawables.count;\n    }\n    getDrawableId(drawableIndex) {\n      return this._model.drawables.ids[drawableIndex];\n    }\n    getDrawableRenderOrders() {\n      return this._model.drawables.renderOrders;\n    }\n    getDrawableTextureIndices(drawableIndex) {\n      return this._model.drawables.textureIndices[drawableIndex];\n    }\n    getDrawableDynamicFlagVertexPositionsDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableVertexIndexCount(drawableIndex) {\n      return this._model.drawables.indexCounts[drawableIndex];\n    }\n    getDrawableVertexCount(drawableIndex) {\n      return this._model.drawables.vertexCounts[drawableIndex];\n    }\n    getDrawableVertices(drawableIndex) {\n      return this.getDrawableVertexPositions(drawableIndex);\n    }\n    getDrawableVertexIndices(drawableIndex) {\n      return this._model.drawables.indices[drawableIndex];\n    }\n    getDrawableVertexPositions(drawableIndex) {\n      return this._model.drawables.vertexPositions[drawableIndex];\n    }\n    getDrawableVertexUvs(drawableIndex) {\n      return this._model.drawables.vertexUvs[drawableIndex];\n    }\n    getDrawableOpacity(drawableIndex) {\n      return this._model.drawables.opacities[drawableIndex];\n    }\n    getDrawableCulling(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(constantFlags[drawableIndex]);\n    }\n    getDrawableBlendMode(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasBlendAdditiveBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Additive : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(constantFlags[drawableIndex]) ? CubismBlendMode.CubismBlendMode_Multiplicative : CubismBlendMode.CubismBlendMode_Normal;\n    }\n    getDrawableInvertedMaskBit(drawableIndex) {\n      const constantFlags = this._model.drawables.constantFlags;\n      return Live2DCubismCore.Utils.hasIsInvertedMaskBit(constantFlags[drawableIndex]);\n    }\n    getDrawableMasks() {\n      return this._model.drawables.masks;\n    }\n    getDrawableMaskCounts() {\n      return this._model.drawables.maskCounts;\n    }\n    isUsingMasking() {\n      for (let d = 0; d < this._model.drawables.count; ++d) {\n        if (this._model.drawables.maskCounts[d] <= 0) {\n          continue;\n        }\n        return true;\n      }\n      return false;\n    }\n    getDrawableDynamicFlagIsVisible(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagVisibilityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagOpacityDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasOpacityDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    getDrawableDynamicFlagRenderOrderDidChange(drawableIndex) {\n      const dynamicFlags = this._model.drawables.dynamicFlags;\n      return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(dynamicFlags[drawableIndex]);\n    }\n    loadParameters() {\n      let parameterCount = this._model.parameters.count;\n      const savedParameterCount = this._savedParameters.length;\n      if (parameterCount > savedParameterCount) {\n        parameterCount = savedParameterCount;\n      }\n      for (let i = 0; i < parameterCount; ++i) {\n        this._parameterValues[i] = this._savedParameters[i];\n      }\n    }\n    initialize() {\n      this._parameterValues = this._model.parameters.values;\n      this._partOpacities = this._model.parts.opacities;\n      this._parameterMaximumValues = this._model.parameters.maximumValues;\n      this._parameterMinimumValues = this._model.parameters.minimumValues;\n      {\n        const parameterIds = this._model.parameters.ids;\n        const parameterCount = this._model.parameters.count;\n        for (let i = 0; i < parameterCount; ++i) {\n          this._parameterIds.push(parameterIds[i]);\n        }\n      }\n      {\n        const partIds = this._model.parts.ids;\n        const partCount = this._model.parts.count;\n        for (let i = 0; i < partCount; ++i) {\n          this._partIds.push(partIds[i]);\n        }\n      }\n      {\n        const drawableIds = this._model.drawables.ids;\n        const drawableCount = this._model.drawables.count;\n        for (let i = 0; i < drawableCount; ++i) {\n          this._drawableIds.push(drawableIds[i]);\n        }\n      }\n    }\n    constructor(model) {\n      this._model = model;\n      this._savedParameters = [];\n      this._parameterIds = [];\n      this._drawableIds = [];\n      this._partIds = [];\n      this._notExistPartId = {};\n      this._notExistParameterId = {};\n      this._notExistParameterValues = {};\n      this._notExistPartOpacities = {};\n      this.initialize();\n    }\n    release() {\n      this._model.release();\n      this._model = void 0;\n    }\n  }\n  class CubismMoc {\n    static create(mocBytes) {\n      const moc = Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\n      if (moc) {\n        return new CubismMoc(moc);\n      }\n      throw new Error(\"Unknown error\");\n    }\n    createModel() {\n      let cubismModel;\n      const model = Live2DCubismCore.Model.fromMoc(this._moc);\n      if (model) {\n        cubismModel = new CubismModel(model);\n        ++this._modelCount;\n        return cubismModel;\n      }\n      throw new Error(\"Unknown error\");\n    }\n    deleteModel(model) {\n      if (model != null) {\n        --this._modelCount;\n      }\n    }\n    constructor(moc) {\n      this._moc = moc;\n      this._modelCount = 0;\n    }\n    release() {\n      this._moc._release();\n      this._moc = void 0;\n    }\n  }\n  var CubismPhysicsTargetType = /* @__PURE__ */ ((CubismPhysicsTargetType2) => {\n    CubismPhysicsTargetType2[CubismPhysicsTargetType2[\"CubismPhysicsTargetType_Parameter\"] = 0] = \"CubismPhysicsTargetType_Parameter\";\n    return CubismPhysicsTargetType2;\n  })(CubismPhysicsTargetType || {});\n  var CubismPhysicsSource = /* @__PURE__ */ ((CubismPhysicsSource2) => {\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_X\"] = 0] = \"CubismPhysicsSource_X\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Y\"] = 1] = \"CubismPhysicsSource_Y\";\n    CubismPhysicsSource2[CubismPhysicsSource2[\"CubismPhysicsSource_Angle\"] = 2] = \"CubismPhysicsSource_Angle\";\n    return CubismPhysicsSource2;\n  })(CubismPhysicsSource || {});\n  class CubismPhysicsParticle {\n    constructor() {\n      this.initialPosition = new CubismVector2(0, 0);\n      this.position = new CubismVector2(0, 0);\n      this.lastPosition = new CubismVector2(0, 0);\n      this.lastGravity = new CubismVector2(0, 0);\n      this.force = new CubismVector2(0, 0);\n      this.velocity = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsSubRig {\n    constructor() {\n      this.normalizationPosition = {};\n      this.normalizationAngle = {};\n    }\n  }\n  class CubismPhysicsInput {\n    constructor() {\n      this.source = {};\n    }\n  }\n  class CubismPhysicsOutput {\n    constructor() {\n      this.destination = {};\n      this.translationScale = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsRig {\n    constructor() {\n      this.settings = [];\n      this.inputs = [];\n      this.outputs = [];\n      this.particles = [];\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  class CubismPhysicsJson {\n    constructor(json) {\n      this._json = json;\n    }\n    release() {\n      this._json = void 0;\n    }\n    getGravity() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Gravity.X;\n      ret.y = this._json.Meta.EffectiveForces.Gravity.Y;\n      return ret;\n    }\n    getWind() {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.Meta.EffectiveForces.Wind.X;\n      ret.y = this._json.Meta.EffectiveForces.Wind.Y;\n      return ret;\n    }\n    getSubRigCount() {\n      return this._json.Meta.PhysicsSettingCount;\n    }\n    getTotalInputCount() {\n      return this._json.Meta.TotalInputCount;\n    }\n    getTotalOutputCount() {\n      return this._json.Meta.TotalOutputCount;\n    }\n    getVertexCount() {\n      return this._json.Meta.VertexCount;\n    }\n    getNormalizationPositionMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Minimum;\n    }\n    getNormalizationPositionMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Maximum;\n    }\n    getNormalizationPositionDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Position.Default;\n    }\n    getNormalizationAngleMinimumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Minimum;\n    }\n    getNormalizationAngleMaximumValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Maximum;\n    }\n    getNormalizationAngleDefaultValue(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Normalization.Angle.Default;\n    }\n    getInputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input.length;\n    }\n    getInputWeight(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Weight;\n    }\n    getInputReflect(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Reflect;\n    }\n    getInputType(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Type;\n    }\n    getInputSourceId(physicsSettingIndex, inputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Input[inputIndex].Source.Id;\n    }\n    getOutputCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output.length;\n    }\n    getOutputVertexIndex(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].VertexIndex;\n    }\n    getOutputAngleScale(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Scale;\n    }\n    getOutputWeight(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Weight;\n    }\n    getOutputDestinationId(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Destination.Id;\n    }\n    getOutputType(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Type;\n    }\n    getOutputReflect(physicsSettingIndex, outputIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Output[outputIndex].Reflect;\n    }\n    getParticleCount(physicsSettingIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices.length;\n    }\n    getParticleMobility(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Mobility;\n    }\n    getParticleDelay(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Delay;\n    }\n    getParticleAcceleration(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Acceleration;\n    }\n    getParticleRadius(physicsSettingIndex, vertexIndex) {\n      return this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Radius;\n    }\n    getParticlePosition(physicsSettingIndex, vertexIndex) {\n      const ret = new CubismVector2(0, 0);\n      ret.x = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.X;\n      ret.y = this._json.PhysicsSettings[physicsSettingIndex].Vertices[vertexIndex].Position.Y;\n      return ret;\n    }\n  }\n  const PhysicsTypeTagX = \"X\";\n  const PhysicsTypeTagY = \"Y\";\n  const PhysicsTypeTagAngle = \"Angle\";\n  const AirResistance = 5;\n  const MaximumWeight = 100;\n  const MovementThreshold = 1e-3;\n  class CubismPhysics {\n    static create(json) {\n      const ret = new CubismPhysics();\n      ret.parse(json);\n      ret._physicsRig.gravity.y = 0;\n      return ret;\n    }\n    evaluate(model, deltaTimeSeconds) {\n      let totalAngle;\n      let weight;\n      let radAngle;\n      let outputValue;\n      const totalTranslation = new CubismVector2();\n      let currentSetting;\n      let currentInput;\n      let currentOutput;\n      let currentParticles;\n      let parameterValue;\n      let parameterMaximumValue;\n      let parameterMinimumValue;\n      let parameterDefaultValue;\n      parameterValue = model.getModel().parameters.values;\n      parameterMaximumValue = model.getModel().parameters.maximumValues;\n      parameterMinimumValue = model.getModel().parameters.minimumValues;\n      parameterDefaultValue = model.getModel().parameters.defaultValues;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        totalAngle = { angle: 0 };\n        totalTranslation.x = 0;\n        totalTranslation.y = 0;\n        currentSetting = this._physicsRig.settings[settingIndex];\n        currentInput = this._physicsRig.inputs.slice(currentSetting.baseInputIndex);\n        currentOutput = this._physicsRig.outputs.slice(currentSetting.baseOutputIndex);\n        currentParticles = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        for (let i = 0; i < currentSetting.inputCount; ++i) {\n          weight = currentInput[i].weight / MaximumWeight;\n          if (currentInput[i].sourceParameterIndex == -1) {\n            currentInput[i].sourceParameterIndex = model.getParameterIndex(currentInput[i].source.id);\n          }\n          currentInput[i].getNormalizedParameterValue(totalTranslation, totalAngle, parameterValue[currentInput[i].sourceParameterIndex], parameterMinimumValue[currentInput[i].sourceParameterIndex], parameterMaximumValue[currentInput[i].sourceParameterIndex], parameterDefaultValue[currentInput[i].sourceParameterIndex], currentSetting.normalizationPosition, currentSetting.normalizationAngle, currentInput[i].reflect, weight);\n        }\n        radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\n        totalTranslation.x = totalTranslation.x * CubismMath.cos(radAngle) - totalTranslation.y * CubismMath.sin(radAngle);\n        totalTranslation.y = totalTranslation.x * CubismMath.sin(radAngle) + totalTranslation.y * CubismMath.cos(radAngle);\n        updateParticles(currentParticles, currentSetting.particleCount, totalTranslation, totalAngle.angle, this._options.wind, MovementThreshold * currentSetting.normalizationPosition.maximum, deltaTimeSeconds, AirResistance);\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\n          const particleIndex = currentOutput[i].vertexIndex;\n          if (particleIndex < 1 || particleIndex >= currentSetting.particleCount) {\n            break;\n          }\n          if (currentOutput[i].destinationParameterIndex == -1) {\n            currentOutput[i].destinationParameterIndex = model.getParameterIndex(currentOutput[i].destination.id);\n          }\n          const translation = new CubismVector2();\n          translation.x = currentParticles[particleIndex].position.x - currentParticles[particleIndex - 1].position.x;\n          translation.y = currentParticles[particleIndex].position.y - currentParticles[particleIndex - 1].position.y;\n          outputValue = currentOutput[i].getValue(translation, currentParticles, particleIndex, currentOutput[i].reflect, this._options.gravity);\n          const destinationParameterIndex = currentOutput[i].destinationParameterIndex;\n          const outParameterValue = !Float32Array.prototype.slice && \"subarray\" in Float32Array.prototype ? JSON.parse(JSON.stringify(parameterValue.subarray(destinationParameterIndex))) : parameterValue.slice(destinationParameterIndex);\n          updateOutputParameterValue(outParameterValue, parameterMinimumValue[destinationParameterIndex], parameterMaximumValue[destinationParameterIndex], outputValue, currentOutput[i]);\n          for (let offset = destinationParameterIndex, outParamIndex = 0; offset < parameterValue.length; offset++, outParamIndex++) {\n            parameterValue[offset] = outParameterValue[outParamIndex];\n          }\n        }\n      }\n    }\n    setOptions(options) {\n      this._options = options;\n    }\n    getOption() {\n      return this._options;\n    }\n    constructor() {\n      this._options = new Options();\n      this._options.gravity.y = -1;\n      this._options.gravity.x = 0;\n      this._options.wind.x = 0;\n      this._options.wind.y = 0;\n    }\n    release() {\n      this._physicsRig = void 0;\n    }\n    parse(physicsJson) {\n      this._physicsRig = new CubismPhysicsRig();\n      let json = new CubismPhysicsJson(physicsJson);\n      this._physicsRig.gravity = json.getGravity();\n      this._physicsRig.wind = json.getWind();\n      this._physicsRig.subRigCount = json.getSubRigCount();\n      let inputIndex = 0, outputIndex = 0, particleIndex = 0;\n      for (let i = 0; i < this._physicsRig.subRigCount; ++i) {\n        const setting = new CubismPhysicsSubRig();\n        setting.normalizationPosition.minimum = json.getNormalizationPositionMinimumValue(i);\n        setting.normalizationPosition.maximum = json.getNormalizationPositionMaximumValue(i);\n        setting.normalizationPosition.defalut = json.getNormalizationPositionDefaultValue(i);\n        setting.normalizationAngle.minimum = json.getNormalizationAngleMinimumValue(i);\n        setting.normalizationAngle.maximum = json.getNormalizationAngleMaximumValue(i);\n        setting.normalizationAngle.defalut = json.getNormalizationAngleDefaultValue(i);\n        setting.inputCount = json.getInputCount(i);\n        setting.baseInputIndex = inputIndex;\n        inputIndex += setting.inputCount;\n        for (let j = 0; j < setting.inputCount; ++j) {\n          const input = new CubismPhysicsInput();\n          input.sourceParameterIndex = -1;\n          input.weight = json.getInputWeight(i, j);\n          input.reflect = json.getInputReflect(i, j);\n          switch (json.getInputType(i, j)) {\n            case PhysicsTypeTagX:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              input.getNormalizedParameterValue = getInputTranslationXFromNormalizedParameterValue;\n              break;\n            case PhysicsTypeTagY:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              input.getNormalizedParameterValue = getInputTranslationYFromNormalizedParamterValue;\n              break;\n            case PhysicsTypeTagAngle:\n              input.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              input.getNormalizedParameterValue = getInputAngleFromNormalizedParameterValue;\n              break;\n          }\n          input.source.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          input.source.id = json.getInputSourceId(i, j);\n          this._physicsRig.inputs.push(input);\n        }\n        setting.outputCount = json.getOutputCount(i);\n        setting.baseOutputIndex = outputIndex;\n        outputIndex += setting.outputCount;\n        for (let j = 0; j < setting.outputCount; ++j) {\n          const output = new CubismPhysicsOutput();\n          output.destinationParameterIndex = -1;\n          output.vertexIndex = json.getOutputVertexIndex(i, j);\n          output.angleScale = json.getOutputAngleScale(i, j);\n          output.weight = json.getOutputWeight(i, j);\n          output.destination.targetType = CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\n          output.destination.id = json.getOutputDestinationId(i, j);\n          switch (json.getOutputType(i, j)) {\n            case PhysicsTypeTagX:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_X;\n              output.getValue = getOutputTranslationX;\n              output.getScale = getOutputScaleTranslationX;\n              break;\n            case PhysicsTypeTagY:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Y;\n              output.getValue = getOutputTranslationY;\n              output.getScale = getOutputScaleTranslationY;\n              break;\n            case PhysicsTypeTagAngle:\n              output.type = CubismPhysicsSource.CubismPhysicsSource_Angle;\n              output.getValue = getOutputAngle;\n              output.getScale = getOutputScaleAngle;\n              break;\n          }\n          output.reflect = json.getOutputReflect(i, j);\n          this._physicsRig.outputs.push(output);\n        }\n        setting.particleCount = json.getParticleCount(i);\n        setting.baseParticleIndex = particleIndex;\n        particleIndex += setting.particleCount;\n        for (let j = 0; j < setting.particleCount; ++j) {\n          const particle = new CubismPhysicsParticle();\n          particle.mobility = json.getParticleMobility(i, j);\n          particle.delay = json.getParticleDelay(i, j);\n          particle.acceleration = json.getParticleAcceleration(i, j);\n          particle.radius = json.getParticleRadius(i, j);\n          particle.position = json.getParticlePosition(i, j);\n          this._physicsRig.particles.push(particle);\n        }\n        this._physicsRig.settings.push(setting);\n      }\n      this.initialize();\n      json.release();\n    }\n    initialize() {\n      let strand;\n      let currentSetting;\n      let radius;\n      for (let settingIndex = 0; settingIndex < this._physicsRig.subRigCount; ++settingIndex) {\n        currentSetting = this._physicsRig.settings[settingIndex];\n        strand = this._physicsRig.particles.slice(currentSetting.baseParticleIndex);\n        strand[0].initialPosition = new CubismVector2(0, 0);\n        strand[0].lastPosition = new CubismVector2(strand[0].initialPosition.x, strand[0].initialPosition.y);\n        strand[0].lastGravity = new CubismVector2(0, -1);\n        strand[0].lastGravity.y *= -1;\n        strand[0].velocity = new CubismVector2(0, 0);\n        strand[0].force = new CubismVector2(0, 0);\n        for (let i = 1; i < currentSetting.particleCount; ++i) {\n          radius = new CubismVector2(0, 0);\n          radius.y = strand[i].radius;\n          strand[i].initialPosition = new CubismVector2(strand[i - 1].initialPosition.x + radius.x, strand[i - 1].initialPosition.y + radius.y);\n          strand[i].position = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastPosition = new CubismVector2(strand[i].initialPosition.x, strand[i].initialPosition.y);\n          strand[i].lastGravity = new CubismVector2(0, -1);\n          strand[i].lastGravity.y *= -1;\n          strand[i].velocity = new CubismVector2(0, 0);\n          strand[i].force = new CubismVector2(0, 0);\n        }\n      }\n    }\n  }\n  class Options {\n    constructor() {\n      this.gravity = new CubismVector2(0, 0);\n      this.wind = new CubismVector2(0, 0);\n    }\n  }\n  function getInputTranslationXFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.x += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputTranslationYFromNormalizedParamterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition, normalizationAngle, isInverted, weight) {\n    targetTranslation.y += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationPosition.minimum, normalizationPosition.maximum, normalizationPosition.defalut, isInverted) * weight;\n  }\n  function getInputAngleFromNormalizedParameterValue(targetTranslation, targetAngle, value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizaitionPosition, normalizationAngle, isInverted, weight) {\n    targetAngle.angle += normalizeParameterValue(value, parameterMinimumValue, parameterMaximumValue, parameterDefaultValue, normalizationAngle.minimum, normalizationAngle.maximum, normalizationAngle.defalut, isInverted) * weight;\n  }\n  function getOutputTranslationX(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.x;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputTranslationY(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue = translation.y;\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getOutputAngle(translation, particles, particleIndex, isInverted, parentGravity) {\n    let outputValue;\n    if (particleIndex >= 2) {\n      parentGravity = particles[particleIndex - 1].position.substract(particles[particleIndex - 2].position);\n    } else {\n      parentGravity = parentGravity.multiplyByScaler(-1);\n    }\n    outputValue = CubismMath.directionToRadian(parentGravity, translation);\n    if (isInverted) {\n      outputValue *= -1;\n    }\n    return outputValue;\n  }\n  function getRangeValue(min, max) {\n    return Math.abs(Math.max(min, max) - Math.min(min, max));\n  }\n  function getDefaultValue(min, max) {\n    const minValue = Math.min(min, max);\n    return minValue + getRangeValue(min, max) / 2;\n  }\n  function getOutputScaleTranslationX(translationScale, angleScale) {\n    return translationScale.x;\n  }\n  function getOutputScaleTranslationY(translationScale, angleScale) {\n    return translationScale.y;\n  }\n  function getOutputScaleAngle(translationScale, angleScale) {\n    return angleScale;\n  }\n  function updateParticles(strand, strandCount, totalTranslation, totalAngle, windDirection, thresholdValue, deltaTimeSeconds, airResistance) {\n    let totalRadian;\n    let delay;\n    let radian;\n    let currentGravity;\n    let direction = new CubismVector2(0, 0);\n    let velocity = new CubismVector2(0, 0);\n    let force = new CubismVector2(0, 0);\n    let newDirection = new CubismVector2(0, 0);\n    strand[0].position = new CubismVector2(totalTranslation.x, totalTranslation.y);\n    totalRadian = CubismMath.degreesToRadian(totalAngle);\n    currentGravity = CubismMath.radianToDirection(totalRadian);\n    currentGravity.normalize();\n    for (let i = 1; i < strandCount; ++i) {\n      strand[i].force = currentGravity.multiplyByScaler(strand[i].acceleration).add(windDirection);\n      strand[i].lastPosition = new CubismVector2(strand[i].position.x, strand[i].position.y);\n      delay = strand[i].delay * deltaTimeSeconds * 30;\n      direction = strand[i].position.substract(strand[i - 1].position);\n      radian = CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) / airResistance;\n      direction.x = CubismMath.cos(radian) * direction.x - direction.y * CubismMath.sin(radian);\n      direction.y = CubismMath.sin(radian) * direction.x + direction.y * CubismMath.cos(radian);\n      strand[i].position = strand[i - 1].position.add(direction);\n      velocity = strand[i].velocity.multiplyByScaler(delay);\n      force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\n      strand[i].position = strand[i].position.add(velocity).add(force);\n      newDirection = strand[i].position.substract(strand[i - 1].position);\n      newDirection.normalize();\n      strand[i].position = strand[i - 1].position.add(newDirection.multiplyByScaler(strand[i].radius));\n      if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\n        strand[i].position.x = 0;\n      }\n      if (delay != 0) {\n        strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\n        strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\n        strand[i].velocity = strand[i].velocity.multiplyByScaler(strand[i].mobility);\n      }\n      strand[i].force = new CubismVector2(0, 0);\n      strand[i].lastGravity = new CubismVector2(currentGravity.x, currentGravity.y);\n    }\n  }\n  function updateOutputParameterValue(parameterValue, parameterValueMinimum, parameterValueMaximum, translation, output) {\n    let outputScale;\n    let value;\n    let weight;\n    outputScale = output.getScale(output.translationScale, output.angleScale);\n    value = translation * outputScale;\n    if (value < parameterValueMinimum) {\n      if (value < output.valueBelowMinimum) {\n        output.valueBelowMinimum = value;\n      }\n      value = parameterValueMinimum;\n    } else if (value > parameterValueMaximum) {\n      if (value > output.valueExceededMaximum) {\n        output.valueExceededMaximum = value;\n      }\n      value = parameterValueMaximum;\n    }\n    weight = output.weight / MaximumWeight;\n    if (weight >= 1) {\n      parameterValue[0] = value;\n    } else {\n      value = parameterValue[0] * (1 - weight) + value * weight;\n      parameterValue[0] = value;\n    }\n  }\n  function normalizeParameterValue(value, parameterMinimum, parameterMaximum, parameterDefault, normalizedMinimum, normalizedMaximum, normalizedDefault, isInverted) {\n    let result = 0;\n    const maxValue = CubismMath.max(parameterMaximum, parameterMinimum);\n    if (maxValue < value) {\n      value = maxValue;\n    }\n    const minValue = CubismMath.min(parameterMaximum, parameterMinimum);\n    if (minValue > value) {\n      value = minValue;\n    }\n    const minNormValue = CubismMath.min(normalizedMinimum, normalizedMaximum);\n    const maxNormValue = CubismMath.max(normalizedMinimum, normalizedMaximum);\n    const middleNormValue = normalizedDefault;\n    const middleValue = getDefaultValue(minValue, maxValue);\n    const paramValue = value - middleValue;\n    switch (Math.sign(paramValue)) {\n      case 1: {\n        const nLength = maxNormValue - middleNormValue;\n        const pLength = maxValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case -1: {\n        const nLength = minNormValue - middleNormValue;\n        const pLength = minValue - middleValue;\n        if (pLength != 0) {\n          result = paramValue * (nLength / pLength);\n          result += middleNormValue;\n        }\n        break;\n      }\n      case 0: {\n        result = middleNormValue;\n        break;\n      }\n    }\n    return isInverted ? result : result * -1;\n  }\n  Live2DFactory.registerRuntime({\n    version: 4,\n    ready: cubism4Ready,\n    test(source) {\n      return source instanceof Cubism4ModelSettings || Cubism4ModelSettings.isValidJSON(source);\n    },\n    isValidMoc(modelData) {\n      if (modelData.byteLength < 4) {\n        return false;\n      }\n      const view = new Int8Array(modelData, 0, 4);\n      return String.fromCharCode(...view) === \"MOC3\";\n    },\n    createModelSettings(json) {\n      return new Cubism4ModelSettings(json);\n    },\n    createCoreModel(data) {\n      const moc = CubismMoc.create(data);\n      try {\n        const model = moc.createModel();\n        model.__moc = moc;\n        return model;\n      } catch (e) {\n        try {\n          moc.release();\n        } catch (ignored) {\n        }\n        throw e;\n      }\n    },\n    createInternalModel(coreModel, settings, options) {\n      const model = new Cubism4InternalModel(coreModel, settings, options);\n      const coreModelWithMoc = coreModel;\n      if (coreModelWithMoc.__moc) {\n        model.__moc = coreModelWithMoc.__moc;\n        delete coreModelWithMoc.__moc;\n        model.once(\"destroy\", releaseMoc);\n      }\n      return model;\n    },\n    createPhysics(coreModel, data) {\n      return CubismPhysics.create(data);\n    },\n    createPose(coreModel, data) {\n      return CubismPose.create(data);\n    }\n  });\n  function releaseMoc() {\n    var _a;\n    (_a = this.__moc) == null ? void 0 : _a.release();\n  }\n  exports2.Cubism2ExpressionManager = Cubism2ExpressionManager;\n  exports2.Cubism2InternalModel = Cubism2InternalModel;\n  exports2.Cubism2ModelSettings = Cubism2ModelSettings;\n  exports2.Cubism2MotionManager = Cubism2MotionManager;\n  exports2.Cubism4ExpressionManager = Cubism4ExpressionManager;\n  exports2.Cubism4InternalModel = Cubism4InternalModel;\n  exports2.Cubism4ModelSettings = Cubism4ModelSettings;\n  exports2.Cubism4MotionManager = Cubism4MotionManager;\n  exports2.ExpressionManager = ExpressionManager;\n  exports2.FileLoader = FileLoader;\n  exports2.FocusController = FocusController;\n  exports2.InteractionMixin = InteractionMixin;\n  exports2.InternalModel = InternalModel;\n  exports2.LOGICAL_HEIGHT = LOGICAL_HEIGHT;\n  exports2.LOGICAL_WIDTH = LOGICAL_WIDTH;\n  exports2.Live2DExpression = Live2DExpression;\n  exports2.Live2DEyeBlink = Live2DEyeBlink;\n  exports2.Live2DFactory = Live2DFactory;\n  exports2.Live2DLoader = Live2DLoader;\n  exports2.Live2DModel = Live2DModel;\n  exports2.Live2DPhysics = Live2DPhysics;\n  exports2.Live2DPose = Live2DPose;\n  exports2.Live2DTransform = Live2DTransform;\n  exports2.ModelSettings = ModelSettings;\n  exports2.MotionManager = MotionManager;\n  exports2.MotionPreloadStrategy = MotionPreloadStrategy;\n  exports2.MotionPriority = MotionPriority;\n  exports2.MotionState = MotionState;\n  exports2.SoundManager = SoundManager;\n  exports2.VERSION = VERSION;\n  exports2.XHRLoader = XHRLoader;\n  exports2.ZipLoader = ZipLoader;\n  exports2.applyMixins = applyMixins;\n  exports2.clamp = clamp;\n  exports2.copyArray = copyArray;\n  exports2.copyProperty = copyProperty;\n  exports2.cubism4Ready = cubism4Ready;\n  exports2.folderName = folderName;\n  exports2.logger = logger;\n  exports2.rand = rand;\n  exports2.remove = remove;\n  exports2.startUpCubism4 = startUpCubism4;\n  Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: \"Module\" } });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklive2d\"] = self[\"webpackChunklive2d\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9631); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","ref","on","handleMouseDown","handleMouseMove","handleMouseUp","staticRenderFns","_setupProxy","staticClass","handlerClick","drawer","$event","_v","$store","dispatch","live2d","mouseDown","slot","model","value","state","percentage","callback","$$v","$set","expression","defineComponent","name","data","customColor","x","dragging","methods","setTimeout","$refs","per","style","width","e","offsetX","parentElement","clientWidth","clientX","computed","scale","watch","handler","newValue","window","localStorage","setItem","set","toFixed","mounted","document","addEventListener","events","code","amplify","reduce","component","websocket","initWebSocket","wsuri","location","host","WebSocket","onopen","websocketonopen","onerror","websocketonerror","onclose","websocketclose","_Message","message","type","base64ToArrayBuffer","base64","binary_string","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","arrayAdd","a","audioCtx","analyser","frequencyData","playing","o","async","getWav","store","response","axios","url","voice","method","responseType","run","getByteFrequencyData","arr","push","setMouthOpenY","v","Math","max","min","console","log","model4","internalModel","coreModel","setParameterValueByIndex","parameterIndex","audioData","decodeAudioData","source","createBufferSource","connect","destination","start","motion","onended","send","catch","error","createAnalyser","protocol","navigator","userAgent","indexOf","mediaDevices","getUserMedia","audio","then","stream","AudioContext","frequencyBinCount","err","alert","__pow","pow","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","throw","done","apply","CubismBreath","constructor","_breathParameters","_currentTime","static","setParameters","breathParameters","getParameters","updateParameters","deltaTimeSeconds","t","addParameterValueById","parameterId","offset","peak","sin","cycle","weight","BreathParameterData","_CubismEyeBlink","modelSetting","setBlinkingInterval","blinkingInterval","_blinkingIntervalSeconds","setBlinkingSetting","closing","closed","opening","_closingSeconds","_closedSeconds","_openingSeconds","setParameterIds","parameterIds","_parameterIds","getParameterIds","parameterValue","_userTimeSeconds","_blinkingState","EyeState","EyeState_Closing","_stateStartTimeSeconds","EyeState_Closed","EyeState_Opening","EyeState_Interval","_nextBlinkingTime","determinNextBlinkingTiming","EyeState_First","CloseIfZero","setParameterValueById","_a","_b","getEyeBlinkParameters","slice","r","random","CubismEyeBlink","EyeState2","Epsilon","DefaultFadeInSeconds","CubismPose","pose3json","ret","FadeInTime","_fadeTimeSeconds","poseListInfo","Groups","poseCount","poseIndex","idListInfo","idCount","groupCount","groupIndex","partInfo","partData","PartData","partId","Id","linkListInfo","Link","linkCount","linkIndex","linkPart","link","_partGroups","_partGroupCounts","_lastModel","reset","beginIndex","partGroupCount","doFade","copyPartOpacities","j","initialize","partsIndex","partIndex","paramIndex","setPartOpacityByIndex","k","opacity","getPartOpacityByIndex","linkPartIndex","visiblePartIndex","newOpacity","phi","backOpacityThreshold","getParameterValueByIndex","a1","backOpacity","assignment","map","clone","getParameterIndex","getPartIndex","clonePartData","CubismVector2","y","add","vector2","substract","multiply","multiplyByScaler","scalar","division","divisionByScalar","getLength","sqrt","getDistanceWith","dot","normalize","isEqual","rhs","isNotEqual","_CubismMath","cos","abs","cx","isNegativeNumber","Infinity","exp","PI","left","right","degrees","radian","from","to","q1","atan2","q2","directionToRadian","degree","radianToDegrees","totalAngle","b","c","d","range","quadraticEquation","ba","ca","da","p","p3","q","discriminant","center","threshold","mp3","mp33","cosphi","acos","crtr","cbrt","t1","root12","root2","root3","u12","sd","u1","v1","root1","CubismMath","CubismMatrix44","_tr","Float32Array","loadIdentity","dst","n","setMatrix","tr","getArray","getScaleX","getScaleY","getTranslateX","getTranslateY","transformX","src","transformY","invertTransformX","invertTransformY","translateRelative","tr1","translate","translateX","translateY","scaleRelative","multiplyByMatrix","m","cloneMatrix","CubismRenderer","_model","drawModel","getModel","doDrawModel","setMvpMatrix","matrix44","_mvpMatrix4x4","getMvpMatrix","setModelColor","red","green","blue","alpha","_modelColor","R","G","B","A","getModelColor","Object","assign","setIsPremultipliedAlpha","enable","_isPremultipliedAlpha","isPremultipliedAlpha","setIsCulling","culling","_isCulling","isCulling","setAnisotropy","_anisortopy","getAnisotropy","CubismTextureColor","CubismBlendMode","CubismBlendMode2","s_option","s_isStarted","s_isInitialized","Constant","vertexOffset","vertexStep","CubismFramework","option","CubismLogInfo","Live2DCubismCore","_isStarted","Logging","csmSetLogFunction","logFunction","version","Version","csmGetVersion","major","minor","patch","versionNumber","CubismLogWarning","staticRelease","csmGetLogFunction","loggingLevel","LogLevel","LogLevel_Off","LogLevel2","CSM_ASSERT","CubismLogDebug","fmt","_len2","arguments","args","Array","_key2","CubismDebug","print","LogLevel_Debug","_len3","_key3","LogLevel_Info","_len4","_key4","LogLevel_Warning","CubismLogError","_len5","_key5","LogLevel_Error","logLevel","format","getLoggingLevel","logPrint","coreLogFunction","replace","CubismModel","update","drawables","resetDynamicFlags","getCanvasWidth","canvasinfo","CanvasWidth","PixelsPerUnit","getCanvasHeight","CanvasHeight","saveParameters","parameterCount","parameters","count","savedParameterCount","_savedParameters","_parameterValues","partCount","parts","_partIds","_notExistPartId","_notExistPartOpacities","getPartCount","_partOpacities","setPartOpacityById","index","getPartOpacityById","_notExistParameterId","keys","_notExistParameterValues","getParameterCount","getParameterMaximumValue","maximumValues","getParameterMinimumValue","minimumValues","getParameterDefaultValue","defaultValues","getParameterValueById","undefined","user","ids","includes","addParameterValueByIndex","multiplyParameterValueById","multiplyParameterValueByIndex","getDrawableIds","_drawableIds","getDrawableIndex","drawableId","drawableCount","drawableIndex","getDrawableCount","getDrawableId","getDrawableRenderOrders","renderOrders","getDrawableTextureIndices","textureIndices","getDrawableDynamicFlagVertexPositionsDidChange","dynamicFlags","Utils","hasVertexPositionsDidChangeBit","getDrawableVertexIndexCount","indexCounts","getDrawableVertexCount","vertexCounts","getDrawableVertices","getDrawableVertexPositions","getDrawableVertexIndices","indices","vertexPositions","getDrawableVertexUvs","vertexUvs","getDrawableOpacity","opacities","getDrawableCulling","constantFlags","hasIsDoubleSidedBit","getDrawableBlendMode","hasBlendAdditiveBit","CubismBlendMode_Additive","hasBlendMultiplicativeBit","CubismBlendMode_Multiplicative","CubismBlendMode_Normal","getDrawableInvertedMaskBit","hasIsInvertedMaskBit","getDrawableMasks","masks","getDrawableMaskCounts","maskCounts","isUsingMasking","getDrawableDynamicFlagIsVisible","hasIsVisibleBit","getDrawableDynamicFlagVisibilityDidChange","hasVisibilityDidChangeBit","getDrawableDynamicFlagOpacityDidChange","hasOpacityDidChangeBit","getDrawableDynamicFlagRenderOrderDidChange","hasRenderOrderDidChangeBit","loadParameters","values","_parameterMaximumValues","_parameterMinimumValues","partIds","drawableIds","release","CubismMoc","mocBytes","moc","Moc","fromArrayBuffer","Error","createModel","cubismModel","Model","fromMoc","_moc","_modelCount","deleteModel","_release","ACubismMotion","_fadeInSeconds","_fadeOutSeconds","_weight","_offsetSeconds","_firedEventValues","motionQueueEntry","userTimeSeconds","isAvailable","isFinished","isStarted","setIsStarted","setStartTime","setFadeInStartTime","duration","getDuration","getEndTime","setEndTime","getStartTime","fadeWeight","fadeIn","getEasingSine","getFadeInStartTime","fadeOut","setState","doUpdateParameters","setIsFinished","setFadeInTime","fadeInSeconds","setFadeOutTime","fadeOutSeconds","getFadeOutTime","getFadeInTime","setWeight","getWeight","getLoopDuration","setOffsetTime","offsetSeconds","getFiredEvent","beforeCheckTimeSeconds","motionTimeSeconds","setFinishedMotionHandler","onFinishedMotionHandler","_onFinishedMotion","getFinishedMotionHandler","DefaultFadeTime","CubismExpressionMotion","super","_parameters","json","fadeInTime","fadeOutTime","FadeOutTime","Parameters","param","Value","blendType","Blend","ExpressionBlendType","ExpressionBlendType_Multiply","ExpressionBlendType_Overwrite","ExpressionBlendType_Add","item","parameter","CubismConfig","ExpressionBlendType2","CubismConfig2","supportMoreMaskDivisions","setOpacityFromMotion","CubismMotionCurveTarget","CubismMotionCurveTarget2","CubismMotionSegmentType","CubismMotionSegmentType2","CubismMotionPoint","time","CubismMotionSegment","basePointIndex","segmentType","CubismMotionCurve","id","segmentCount","baseSegmentIndex","CubismMotionEvent","fireTime","CubismMotionData","loop","curveCount","eventCount","fps","curves","segments","points","CubismMotionJson","_json","getMotionDuration","Meta","Duration","isMotionLoop","Loop","getEvaluationOptionFlag","flagType","EvaluationOptionFlag","EvaluationOptionFlag_AreBeziersRistricted","AreBeziersRestricted","getMotionCurveCount","CurveCount","getMotionFps","Fps","getMotionTotalSegmentCount","TotalSegmentCount","getMotionTotalPointCount","TotalPointCount","getMotionFadeInTime","getMotionFadeOutTime","getMotionCurveTarget","curveIndex","Curves","Target","getMotionCurveId","getMotionCurveFadeInTime","getMotionCurveFadeOutTime","getMotionCurveSegmentCount","Segments","getMotionCurveSegment","segmentIndex","getEventCount","UserDataCount","getTotalEventValueSize","TotalUserDataSize","getEventTime","userDataIndex","UserData","Time","getEventValue","EvaluationOptionFlag2","EffectNameEyeBlink","EffectNameLipSync","TargetNameModel","TargetNameParameter","TargetNamePartOpacity","UseOldBeziersCurveMotion","lerpPoints","result","linearEvaluate","bezierEvaluate","p01","p12","p23","p012","p123","bezierEvaluateCardanoInterpretation","x1","x2","cx1","cx2","cardanoAlgorithmForBezier","steppedEvaluate","inverseSteppedEvaluate","evaluateCurve","motionData","curve","target","totalSegmentCount","pointPosition","CubismMotionSegmentType_Bezier","segment","evaluate","CubismMotion","_eyeBlinkParameterIds","_lipSyncParameterIds","_sourceFrameRate","_loopDurationSeconds","_isLoop","_isLoopFadeIn","_lastWeight","parse","_motionData","_modelCurveIdEyeBlink","_modelCurveIdLipSync","timeOffsetSeconds","lipSyncValue","Number","MAX_VALUE","eyeBlinkValue","MaxTargetSize","lipSyncFlags","eyeBlinkFlags","tmpFadeIn","tmpFadeOut","CubismMotionCurveTarget_Model","CubismMotionCurveTarget_Parameter","sourceValue","fin","fout","paramWeight","CubismMotionCurveTarget_PartOpacity","setIsLoop","isLoop","setIsLoopFadeIn","loopFadeIn","isLoopFadeIn","setParameterFadeInTime","setParameterFadeOutTime","getParameterFadeInTime","getParameterFadeOutTime","setEffectIds","eyeBlinkParameterIds","lipSyncParameterIds","motionJson","areBeziersRestructed","totalPointCount","segmentPosition","CubismMotionSegmentType_Linear","CubismMotionSegmentType_Stepped","CubismMotionSegmentType_InverseStepped","userdatacount","u","CubismMotionQueueEntry","_autoDelete","_available","_finished","_started","_startTimeSeconds","_fadeInStartTimeSeconds","_endTimeSeconds","_stateTimeSeconds","_stateWeight","_lastEventCheckSeconds","_motionQueueEntryHandle","_isTriggeredFadeOut","_motion","setFadeOut","startFadeOut","newEndTimeSeconds","startTime","endTime","f","setIsAvailable","timeSeconds","getStateTime","getStateWeight","getLastCheckEventSeconds","setLastCheckEventSeconds","checkSeconds","isTriggeredFadeOut","getFadeOutSeconds","CubismMotionQueueManager","_eventCustomData","_motions","startMotion","autoDelete","InvalidMotionQueueEntryHandleValue","splice","isFinishedByHandle","motionQueueEntryNumber","stopAllMotions","getCubismMotionQueueEntry","find","entry","setEventCallback","customData","_eventCallBack","doUpdateMotion","updated","firedList","i2","CubismPhysicsTargetType","CubismPhysicsTargetType2","CubismPhysicsSource","CubismPhysicsSource2","CubismPhysicsParticle","initialPosition","position","lastPosition","lastGravity","force","velocity","CubismPhysicsSubRig","normalizationPosition","normalizationAngle","CubismPhysicsInput","CubismPhysicsOutput","translationScale","CubismPhysicsRig","settings","inputs","outputs","particles","gravity","wind","CubismPhysicsJson","getGravity","EffectiveForces","Gravity","X","Y","getWind","Wind","getSubRigCount","PhysicsSettingCount","getTotalInputCount","TotalInputCount","getTotalOutputCount","TotalOutputCount","getVertexCount","VertexCount","getNormalizationPositionMinimumValue","physicsSettingIndex","PhysicsSettings","Normalization","Position","Minimum","getNormalizationPositionMaximumValue","Maximum","getNormalizationPositionDefaultValue","Default","getNormalizationAngleMinimumValue","Angle","getNormalizationAngleMaximumValue","getNormalizationAngleDefaultValue","getInputCount","Input","getInputWeight","inputIndex","Weight","getInputReflect","Reflect","getInputType","Type","getInputSourceId","Source","getOutputCount","Output","getOutputVertexIndex","outputIndex","VertexIndex","getOutputAngleScale","Scale","getOutputWeight","getOutputDestinationId","Destination","getOutputType","getOutputReflect","getParticleCount","Vertices","getParticleMobility","vertexIndex","Mobility","getParticleDelay","Delay","getParticleAcceleration","Acceleration","getParticleRadius","Radius","getParticlePosition","PhysicsTypeTagX","PhysicsTypeTagY","PhysicsTypeTagAngle","AirResistance","MaximumWeight","MovementThreshold","CubismPhysics","_physicsRig","radAngle","outputValue","totalTranslation","currentSetting","currentInput","currentOutput","currentParticles","parameterMaximumValue","parameterMinimumValue","parameterDefaultValue","settingIndex","subRigCount","angle","baseInputIndex","baseOutputIndex","baseParticleIndex","inputCount","sourceParameterIndex","getNormalizedParameterValue","reflect","degreesToRadian","updateParticles","particleCount","_options","maximum","outputCount","particleIndex","destinationParameterIndex","translation","getValue","outParameterValue","prototype","JSON","stringify","subarray","updateOutputParameterValue","outParamIndex","setOptions","options","getOption","Options","physicsJson","setting","minimum","defalut","input","CubismPhysicsSource_X","getInputTranslationXFromNormalizedParameterValue","CubismPhysicsSource_Y","getInputTranslationYFromNormalizedParamterValue","CubismPhysicsSource_Angle","getInputAngleFromNormalizedParameterValue","targetType","CubismPhysicsTargetType_Parameter","output","angleScale","getOutputTranslationX","getScale","getOutputScaleTranslationX","getOutputTranslationY","getOutputScaleTranslationY","getOutputAngle","getOutputScaleAngle","particle","mobility","delay","acceleration","radius","strand","targetTranslation","targetAngle","isInverted","normalizeParameterValue","normalizaitionPosition","parentGravity","getRangeValue","getDefaultValue","minValue","strandCount","windDirection","thresholdValue","airResistance","totalRadian","currentGravity","direction","newDirection","radianToDirection","parameterValueMinimum","parameterValueMaximum","outputScale","valueBelowMinimum","valueExceededMaximum","parameterMinimum","parameterMaximum","parameterDefault","normalizedMinimum","normalizedMaximum","normalizedDefault","maxValue","minNormValue","maxNormValue","middleNormValue","middleValue","paramValue","sign","nLength","pLength","csmRect","w","h","height","getCenterX","getCenterY","getRight","getBottom","setRect","expand","ColorChannelCount","shaderCount","s_instance","s_viewport","s_fbo","CubismClippingManager_WebGL","getChannelFlagAsColor","channelNo","_channelColors","getMaskRenderTexture","_maskTexture","texture","frameNo","_currentFrameNo","size","_clippingMaskBufferSize","_colorBuffer","gl","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","CubismRenderTextureResource","setGL","calcClippedDrawTotalBounds","clippingContext","clippedDrawTotalMinX","clippedDrawTotalMinY","clippedDrawTotalMaxX","MIN_VALUE","clippedDrawTotalMaxY","clippedDrawCount","_clippedDrawableIndexList","clippedDrawableIndex","drawableVertexCount","drawableVertexes","minX","minY","maxX","maxY","pi","_allClippedDrawRect","_isUsing","_maskRenderTexture","_clippingContextListForMask","_clippingContextListForDraw","_tmpBoundsOnModel","_tmpMatrix","_tmpMatrixForMask","_tmpMatrixForDraw","tmp","self","deleteFramebuffer","deleteTexture","drawableMasks","drawableMaskCounts","findSameClip","CubismClippingContext","addClippedDrawable","setupClippingContext","renderer","usingClipCount","clipIndex","cc","viewport","preDraw","setupLayoutBounds","clearColor","clear","COLOR_BUFFER_BIT","clipContext","allClipedDrawRect","layoutBoundsOnTex01","_layoutBounds","MARGIN","scaleX","scaleY","_matrixForMask","_matrixForDraw","clipDrawCount","_clippingIdCount","clipDrawIndex","_clippingIdList","setClippingContextBufferForMask","drawMesh","sameCount","clipId","div","mod","curClipIndex","layoutCount","_layoutChannelNo","xpos","ypos","getColorBuffer","getClippingContextListForDraw","setClippingMaskBufferSize","getClippingMaskBufferSize","manager","clippingDrawableIndices","clipCount","_owner","getClippingManager","setGl","CubismShader_WebGL","_shaderSets","releaseShaderProgram","setupShaderProgram","textureId","vertexCount","vertexArray","indexArray","uvArray","bufferData","colorBlendMode","baseColor","matrix4x4","invertedMask","SRC_COLOR","DST_COLOR","SRC_ALPHA","DST_ALPHA","generateShaders","clippingContextBufferForMask","getClippingContextBufferForMask","shaderSet","ShaderNames","ShaderNames_SetupMask","useProgram","shaderProgram","activeTexture","TEXTURE0","uniform1i","samplerTexture0Location","vertex","createBuffer","bindBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","enableVertexAttribArray","attributePositionLocation","vertexAttribPointer","FLOAT","uv","attributeTexCoordLocation","colorChannel","uniform4f","uniformChannelFlagLocation","uniformMatrix4fv","uniformClipMatrixLocation","rect","uniformBaseColorLocation","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","clippingContextBufferForDraw","getClippingContextBufferForDraw","masked","ShaderNames_NormalPremultipliedAlpha","ONE","ShaderNames_AddPremultipliedAlpha","ShaderNames_MultPremultipliedAlpha","TEXTURE1","tex","samplerTexture1Location","uniformMatrixLocation","ELEMENT_ARRAY_BUFFER","blendFuncSeparate","deleteProgram","loadShaderProgram","vertexShaderSrcSetupMask","fragmentShaderSrcsetupMask","vertexShaderSrc","fragmentShaderSrcPremultipliedAlpha","vertexShaderSrcMasked","fragmentShaderSrcMaskPremultipliedAlpha","fragmentShaderSrcMaskInvertedPremultipliedAlpha","getAttribLocation","getUniformLocation","vertexShaderSource","fragmentShaderSource","createProgram","vertShader","compileShaderSource","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","attachShader","linkProgram","linkStatus","getProgramParameter","LINK_STATUS","deleteShader","shaderType","shaderSource","shader","createShader","compileShader","getShaderInfoLog","status","getShaderParameter","COMPILE_STATUS","ShaderNames2","CubismRenderer_WebGL","_clippingContextBufferForMask","_clippingContextBufferForDraw","_clippingManager","firstDraw","_textures","_sortedDrawableIndexList","_bufferData","modelTextureNo","glTexture","getBindedTextures","deleteBuffer","renderOrder","order","setClippingContextBufferForDraw","textureNo","indexCount","CULL_FACE","disable","frontFace","CCW","modelColorRGBA","drawtexture","getInstance","drawElements","TRIANGLES","UNSIGNED_SHORT","deleteInstance","setRenderState","fbo","getExtension","SCISSOR_TEST","STENCIL_TEST","DEPTH_TEST","CW","BLEND","colorMask","clip","startUp","doStaticRelease","CubismModelSettingsJson","groups","hitAreas","HitAreas","layout","Layout","FileReferences","expressions","Expressions","motions","Motions","textures","Textures","physics","Physics","pose","Pose","group","Name","Ids","getLipSyncParameters","ParamAngleX","ParamAngleY","ParamAngleZ","ParamEyeBallX","ParamEyeBallY","ParamBodyAngleX","ParamBreath","LOGICAL_WIDTH","LOGICAL_HEIGHT","config","config2","LOG_LEVEL_VERBOSE","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","sound","motionSync","motionFadingDuration","idleMotionFadingDuration","expressionFadingDuration","preserveExpressionOnMotion","cubism4","logger","tag","_len6","messages","_key6","warn","_len7","_key7","_len8","_key8","clamp","num","lower","upper","applyMixins","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","folderName","url2","lastSlashIndex","lastIndexOf","remove","array","ExpressionManager","EventEmitter","reserveExpressionIndex","destroyed","init","defaultExpression","createExpression","currentExpression","stopAllExpressions","loadExpression","definitions","_loadExpression","setRandomExpression","availableIndices","floor","setExpression","resetExpression","_setExpression","restoreExpression","getExpressionIndex","now","destroy","emit","EPSILON","MAX_SPEED","ACCELERATION_TIME","FocusController","targetX","targetY","vx","vy","focus","instant","dt","dx","dy","maxSpeed","ax","ay","maxA","maxV","ModelSettings","TypeError","resolveURL","path","replaceFiles","replacer","getDefinedFiles","files","file","validateFiles","assertFileExists","expectedFile","shouldThrow","actualPath","essentialFiles","definedFiles","filter","MotionPriority","MotionPriority2","MotionState","debug","currentPriority","reservePriority","reserve","priority","currentGroup","currentIndex","dump","reservedGroup","reservedIndex","reservedIdleGroup","reservedIdleIndex","setReservedIdle","setReserved","setCurrent","complete","isActive","shouldRequestIdleMotion","shouldOverrideExpression","requestedGroup","requestedIndex","key","join","TAG$2","VOLUME","SoundManager","volume","_volume","audios","onFinish","onError","Audio","preload","dispose","play","dispatchEvent","ErrorEvent","readyState","HAVE_ENOUGH_DATA","pause","removeAttribute","MotionManager","motionGroups","idleMotionGroup","idle","setupMotions","motionPreload","loadMotion","_loadMotion","_0","_1","_this","NORMAL","definition","currentAudio","soundURL","getSoundFile","readyToPlay","getMotionName","expressionManager","_startMotion","startRandomMotion","groupDefs","_stopAllMotions","IDLE","tempBounds","InternalModel","focusController","originalWidth","originalHeight","localTransform","Matrix","drawingMatrix","textureFlipY","setupLayout","setupHitAreas","getSize","getLayout","centerX","offsetY","centerY","top","bottom","getHitAreaDefs","hitArea","def","hitTest","hitAreaName","isHit","drawIndex","bounds","getDrawableBounds","vertices","updateTransform","transform","copyFrom","append","motionManager","TAG$1","NetworkError","aborted","_XHRLoader","onload","xhr","XMLHttpRequest","allXhrSet","xhrSet","xhrMap","get","Set","listeners","cancelXHRs","once","open","onabort","onloadend","delete","abort","WeakMap","XHRLoader","runMiddlewares","middleware","context","fn","bind","err2","loader","createXHR","Live2DLoader","middlewares","textureOptions","resourceOptions","crossorigin","crossOrigin","Texture","event","autoLoad","baseTexture","valid","resource","_live2d_load","errorHandler","removeEventListener","load","TAG","urlToJSON","live2dModel","jsonToSettings","runtime","Live2DFactory","findRuntime","createModelSettings","waitUntilReady","ready","setupOptionals","tasks","createPose","createPhysics","all","setupEssentials","live2DModel","textureLoadings","createInternalModel","modelData","isValidMoc","createCoreModel","_Live2DFactory","runtimes","sort","test","textureLoaded","modelLoaded","readyEventEmitted","live2DModelMiddlewares","handleError","releaseTasks","motionTasksMap","taskGroup","getMotionFile","motionDataType","_a2","taskGroup2","createMotion","expressionTasksMap","getExpressionFile","tasks2","InteractionMixin","_autoInteract","autoInteract","onTap","off","registerInteraction","interactionManager","unregisterInteraction","onPointerMove","tap","global","Live2DTransform","Transform","tempPoint","Point","tempMatrix$1","tickerRef","Live2DModel","Container","anchor","ObservablePoint","onAnchorChange","glContextID","elapsedTime","performance","deltaTime","_autoUpdate","setupLive2DModel","onLoad","tickerClass","autoUpdate","PIXI","Ticker","_destroyed","shared","onTickerUpdate","interactive","pivot","toModelPosition","tx","ty","hitAreaNames","skipUpdate","_recursivePostUpdateTransform","parent","displayObjectUpdateTransform","_tempDisplayObjectParent","worldTransform","applyInverse","containsPoint","point","getBounds","contains","_calculateBounds","_bounds","addFrame","deltaMS","_render","plugins","interaction","batch","geometry","shouldUpdateTexture","CONTEXT_UID","updateWebGLContext","_glTextures","pixelStorei","WebGLRenderingContext","UNPACK_FLIP_Y_WEBGL","touched","textureGC","framebuffer","internalTransform","globalUniforms","uniforms","projectionMatrix","draw","_FileLoader","settingsURL","filePath","resolved","filesMap","fileMap","definedFile","decodeURI","actualFile","webkitRelativePath","URL","createObjectURL","_objectURL","settingsFile","endsWith","settingsText","readText","settingsJSON","reader","FileReader","readAsText","FileLoader","factory","isArray","File","createSettings","encodeURI","upload","objectURL","revokeObjectURL","resourceObjectURL","unshift","_ZipLoader","filePaths","getFilePaths","requiredFilePaths","getFiles","settingsFilePath","paths","ZipLoader","ZIP_PROTOCOL","uid","sourceURL","zipBlob","startsWith","zipReader","unzip","releaseReader","Cubism4ExpressionManager","queueManager","findIndex","create","Cubism4ModelSettings","isValidJSON","every","entries","Sound","Cubism4MotionManager","eyeBlinkIds","lipSyncIds","caller","eventValue","defaultFadingDuration","tempMatrix","Cubism4InternalModel","lipSync","breath","idParamAngleX","idParamAngleY","idParamAngleZ","idParamEyeBallX","idParamEyeBallY","idParamBodyAngleX","idParamBreath","pixelsPerUnit","centeringTransform","eyeBlink","commonKey","charAt","toLowerCase","getDrawableIDs","prepend","_d","motionUpdated","updateFocus","updateNaturalMovements","matrix","getParameter","FRAMEBUFFER_BINDING","startupPromise","startupRetries","cubism4Ready","startUpWithRetry","startUpCubism4","cause","LogLevel_Verbose","releaseMoc","__moc","modelName","app","view","autoStart","backgroundAlpha","stage","addChild","registerRuntime","byteLength","Int8Array","String","fromCharCode","ignored","coreModelWithMoc","components","Drawer","isDragging","lastX","lastY","onresize","created","onmessage","close","clientY","deltaX","deltaY","parseInt","Vue","Vuex","getItem","mutations","actions","increase","decrease","parseFloat","resizeTo","App","beforeCreate","$mount","exports","require","exports2","utils","math","core","display","VERSION","_len","_key","rand","copyProperty","fromKey","toKey","copyArray","self2","MotionPreloadStrategy","MotionPreloadStrategy2","fromURL","Live2D","originalUpdateParam","Live2DMotion","updateParam","call","onFinishHandler","Live2DExpression","AMotion","params","setFadeIn","fade_in","fade_out","calc","defaultValue","val","updateParamExe","motionQueueEnt","setParamFloat","Cubism2ExpressionManager","MotionQueueManager","Cubism2MotionManager","Live2DEyeBlink","blinkInterval","closingDuration","closedDuration","openingDuration","eyeState","eyeParamValue","closedTimer","nextBlinkTimeLeft","leftParam","getParamIndex","rightParam","setEyeParams","tempMatrixArray","Cubism2InternalModel","drawDataCount","disableCulling","eyeballXParamIndex","eyeballYParamIndex","angleXParamIndex","angleYParamIndex","angleZParamIndex","bodyAngleXParamIndex","breathParamIndex","initParams","_ref","initOpacities","_ref2","setPartsOpacity","saveParam","getModelContext","_$aS","drawParamWebGL","clipManager","originalSetupClip","setupClip","modelContext","drawParam","glno","prop","hasOwnProperty","WebGLBuffer","curFrameNo","setTexture","getDrawDataIndex","drawData","getDrawData","getDrawDataID","getTransformedPoints","loadParam","addToParamFloat","Cubism2ModelSettings","copy","SRC_TYPE_MAP","PhysicsHair","Src","SRC_TO_X","SRC_TO_Y","SRC_TO_G_ANGLE","TARGET_TYPE_MAP","Live2DPhysics","physicsHairs","physics_hair","physicsHair","setup","regist","mass","_ref3","ptype","addSrcParam","targets","_ref4","addTargetParam","elapsed","Live2DPartsParam","initIndex","getPartsDataIndex","PartsDataID","getID","Live2DPose","opacityAnimDuration","partsGroups","parts_visible","_ref5","_ref6","l","visible","getParamFloat","normalizePartsOpacityGroup","partsGroup","maxBackOpacity","visibleOpacity","visibleIndex","_ref7","originalOpacity","getPartsOpacity","_ref8","backOp","copyOpacity","_ref9","_ref10","partsIndex2","partGroup","Live2DModelWebGL","loadModel","getError","defineProperties","__esModule","Symbol","toStringTag","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","deferred","O","chunkIds","notFulfilled","getter","enumerable","g","globalThis","Function","obj","nmd","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}